

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 16 11:41:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           	psect	idataCOMRAM
    50  007F08                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _tablota
    54  007F08  01                 	db	1
    55  007F09  02                 	db	2
    56  007F0A  04                 	db	4
    57  007F0B  08                 	db	8
    58  007F0C  10                 	db	16
    59  007F0D  20                 	db	32
    60  007F0E  40                 	db	64
    61  007F0F  80                 	db	128
    62  007F10  40                 	db	64
    63  007F11  20                 	db	32
    64  007F12  10                 	db	16
    65  007F13  08                 	db	8
    66  007F14  04                 	db	4
    67  007F15  02                 	db	2
    68                           
    69                           ;initializer for _tablota2
    70  007F16  81                 	db	129
    71  007F17  42                 	db	66
    72  007F18  24                 	db	36
    73  007F19  18                 	db	24
    74  007F1A  24                 	db	36
    75  007F1B  42                 	db	66
    76  0000                     _LATD	set	3980
    77  0000                     _PORTBbits	set	3969
    78  0000                     _TRISBbits	set	3987
    79  0000                     _TRISD	set	3989
    80                           
    81                           ; #config settings
    82  0000                     
    83                           	psect	cinit
    84  007F1C                     __pcinit:
    85                           	opt stack 0
    86  007F1C                     start_initialization:
    87                           	opt stack 0
    88  007F1C                     __initialization:
    89                           	opt stack 0
    90                           
    91                           ; Initialize objects allocated to COMRAM (20 bytes)
    92                           ; load TBLPTR registers with __pidataCOMRAM
    93  007F1C  0E08               	movlw	low __pidataCOMRAM
    94  007F1E  6EF6               	movwf	tblptrl,c
    95  007F20  0E7F               	movlw	high __pidataCOMRAM
    96  007F22  6EF7               	movwf	tblptrh,c
    97  007F24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    98  007F26  6EF8               	movwf	tblptru,c
    99  007F28  EE00  F001         	lfsr	0,__pdataCOMRAM
   100  007F2C  EE10 F014          	lfsr	1,20
   101  007F30                     copy_data0:
   102  007F30  0009               	tblrd		*+
   103  007F32  CFF5 FFEE          	movff	tablat,postinc0
   104  007F36  50E5               	movf	postdec1,w,c
   105  007F38  50E1               	movf	fsr1l,w,c
   106  007F3A  E1FA               	bnz	copy_data0
   107                           
   108                           ; Clear objects allocated to COMRAM (1 bytes)
   109  007F3C  6A17               	clrf	__pbssCOMRAM& (0+255),c
   110  007F3E                     end_of_initialization:
   111                           	opt stack 0
   112  007F3E                     __end_of__initialization:
   113                           	opt stack 0
   114  007F3E  0100               	movlb	0
   115  007F40  EFA2  F03F         	goto	_main	;jump to C main() function
   116                           tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           postinc0	equ	0xFEE
   121                           postdec1	equ	0xFE5
   122                           fsr1l	equ	0xFE1
   123                           
   124                           	psect	bssCOMRAM
   125  000017                     __pbssCOMRAM:
   126                           	opt stack 0
   127  000017                     _i:
   128                           	opt stack 0
   129  000017                     	ds	1
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           postinc0	equ	0xFEE
   135                           postdec1	equ	0xFE5
   136                           fsr1l	equ	0xFE1
   137                           
   138                           	psect	dataCOMRAM
   139  000001                     __pdataCOMRAM:
   140                           	opt stack 0
   141  000001                     _tablota:
   142                           	opt stack 0
   143  000001                     	ds	14
   144  00000F                     _tablota2:
   145                           	opt stack 0
   146  00000F                     	ds	6
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           postinc0	equ	0xFEE
   152                           postdec1	equ	0xFE5
   153                           fsr1l	equ	0xFE1
   154                           
   155                           	psect	cstackCOMRAM
   156  000015                     __pcstackCOMRAM:
   157                           	opt stack 0
   158  000015                     ??_main:
   159                           
   160                           ; 1 bytes @ 0x0
   161  000015                     	ds	2
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           postinc0	equ	0xFEE
   167                           postdec1	equ	0xFE5
   168                           fsr1l	equ	0xFE1
   169                           
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 23 in file "maincodemon.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   189 ;;      Params:         0       0       0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0       0       0
   191 ;;      Temps:          2       0       0       0       0       0       0       0       0
   192 ;;      Totals:         2       0       0       0       0       0       0       0       0
   193 ;;Total ram usage:        2 bytes
   194 ;; This function calls:
   195 ;;		Nothing
   196 ;; This function is called by:
   197 ;;		Startup code after reset
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           	psect	text0
   202  007F44                     __ptext0:
   203                           	opt stack 0
   204  007F44                     _main:
   205                           	opt stack 31
   206                           
   207                           ;maincodemon.c: 24: TRISD = 0x00;
   208                           
   209                           ;incstack = 0
   210  007F44  0E00               	movlw	0
   211  007F46  6E95               	movwf	3989,c	;volatile
   212                           
   213                           ;maincodemon.c: 25: TRISBbits.RB0 = 1;
   214  007F48  8093               	bsf	3987,0,c	;volatile
   215                           
   216                           ;maincodemon.c: 26: TRISBbits.RB6 = 1;
   217  007F4A  8C93               	bsf	3987,6,c	;volatile
   218  007F4C                     
   219                           ;maincodemon.c: 28: if (PORTBbits.RB6 == 1){
   220  007F4C  AC81               	btfss	3969,6,c	;volatile
   221  007F4E  D02C               	goto	l22
   222                           
   223                           ;maincodemon.c: 29: for (i=0;i<14;i++) {
   224  007F50  0E00               	movlw	0
   225  007F52  6E17               	movwf	_i,c
   226  007F54                     l706:
   227  007F54  0E0D               	movlw	13
   228  007F56  6417               	cpfsgt	_i,c
   229  007F58  D001               	goto	l23
   230  007F5A  D7F8               	goto	l21
   231  007F5C                     l23:
   232                           
   233                           ;maincodemon.c: 30: LATD = tablota[i];
   234  007F5C  5017               	movf	_i,w,c
   235  007F5E  0D01               	mullw	1
   236  007F60  0E01               	movlw	low _tablota
   237  007F62  24F3               	addwf	prodl,w,c
   238  007F64  6ED9               	movwf	fsr2l,c
   239  007F66  0E00               	movlw	high _tablota
   240  007F68  20F4               	addwfc	prodh,w,c
   241  007F6A  6EDA               	movwf	fsr2h,c
   242  007F6C  50DF               	movf	indf2,w,c
   243  007F6E  6E8C               	movwf	3980,c	;volatile
   244                           
   245                           ;maincodemon.c: 31: if (PORTBbits.RB0 == 1) {
   246  007F70  A081               	btfss	3969,0,c	;volatile
   247  007F72  D00C               	goto	l25
   248                           
   249                           ;maincodemon.c: 32: _delay((unsigned long)((100)*(48000000UL/4000.0)));
   250  007F74  0E07               	movlw	7
   251  007F76  6E16               	movwf	(??_main+1)& (0+255),c
   252  007F78  0E17               	movlw	23
   253  007F7A  6E15               	movwf	??_main& (0+255),c
   254  007F7C  0E6A               	movlw	106
   255  007F7E                     u157:
   256  007F7E  2EE8               	decfsz	wreg,f,c
   257  007F80  D7FE               	bra	u157
   258  007F82  2E15               	decfsz	??_main& (0+255),f,c
   259  007F84  D7FC               	bra	u157
   260  007F86  2E16               	decfsz	(??_main+1)& (0+255),f,c
   261  007F88  D7FA               	bra	u157
   262  007F8A  D00B               	goto	L1
   263  007F8C                     l25:
   264                           
   265                           ;maincodemon.c: 34: else {
   266                           ;maincodemon.c: 35: _delay((unsigned long)((500)*(48000000UL/4000.0)));
   267  007F8C  0E1F               	movlw	31
   268  007F8E  6E16               	movwf	(??_main+1)& (0+255),c
   269  007F90  0E71               	movlw	113
   270  007F92  6E15               	movwf	??_main& (0+255),c
   271  007F94  0E1E               	movlw	30
   272  007F96                     u167:
   273  007F96  2EE8               	decfsz	wreg,f,c
   274  007F98  D7FE               	bra	u167
   275  007F9A  2E15               	decfsz	??_main& (0+255),f,c
   276  007F9C  D7FC               	bra	u167
   277  007F9E  2E16               	decfsz	(??_main+1)& (0+255),f,c
   278  007FA0  D7FA               	bra	u167
   279  007FA2                     L1:
   280  007FA2  D000               	nop2	
   281  007FA4  2A17               	incf	_i,f,c
   282  007FA6  D7D6               	goto	l706
   283  007FA8                     l22:
   284                           
   285                           ;maincodemon.c: 38: else{
   286                           ;maincodemon.c: 39: for (i=0;i<6;i++) {
   287  007FA8  0E00               	movlw	0
   288  007FAA  6E17               	movwf	_i,c
   289  007FAC                     l722:
   290  007FAC  0E05               	movlw	5
   291  007FAE  6417               	cpfsgt	_i,c
   292  007FB0  D001               	goto	l28
   293  007FB2  D7CC               	goto	l21
   294  007FB4                     l28:
   295                           
   296                           ;maincodemon.c: 40: LATD = tablota2[i];
   297  007FB4  5017               	movf	_i,w,c
   298  007FB6  0D01               	mullw	1
   299  007FB8  0E0F               	movlw	low _tablota2
   300  007FBA  24F3               	addwf	prodl,w,c
   301  007FBC  6ED9               	movwf	fsr2l,c
   302  007FBE  0E00               	movlw	high _tablota2
   303  007FC0  20F4               	addwfc	prodh,w,c
   304  007FC2  6EDA               	movwf	fsr2h,c
   305  007FC4  50DF               	movf	indf2,w,c
   306  007FC6  6E8C               	movwf	3980,c	;volatile
   307                           
   308                           ;maincodemon.c: 41: if (PORTBbits.RB0 == 1) {
   309  007FC8  A081               	btfss	3969,0,c	;volatile
   310  007FCA  D00C               	goto	l30
   311                           
   312                           ;maincodemon.c: 42: _delay((unsigned long)((100)*(48000000UL/4000.0)));
   313  007FCC  0E07               	movlw	7
   314  007FCE  6E16               	movwf	(??_main+1)& (0+255),c
   315  007FD0  0E17               	movlw	23
   316  007FD2  6E15               	movwf	??_main& (0+255),c
   317  007FD4  0E6A               	movlw	106
   318  007FD6                     u177:
   319  007FD6  2EE8               	decfsz	wreg,f,c
   320  007FD8  D7FE               	bra	u177
   321  007FDA  2E15               	decfsz	??_main& (0+255),f,c
   322  007FDC  D7FC               	bra	u177
   323  007FDE  2E16               	decfsz	(??_main+1)& (0+255),f,c
   324  007FE0  D7FA               	bra	u177
   325  007FE2  D00B               	goto	L2
   326  007FE4                     l30:
   327                           
   328                           ;maincodemon.c: 44: else {
   329                           ;maincodemon.c: 45: _delay((unsigned long)((500)*(48000000UL/4000.0)));
   330  007FE4  0E1F               	movlw	31
   331  007FE6  6E16               	movwf	(??_main+1)& (0+255),c
   332  007FE8  0E71               	movlw	113
   333  007FEA  6E15               	movwf	??_main& (0+255),c
   334  007FEC  0E1E               	movlw	30
   335  007FEE                     u187:
   336  007FEE  2EE8               	decfsz	wreg,f,c
   337  007FF0  D7FE               	bra	u187
   338  007FF2  2E15               	decfsz	??_main& (0+255),f,c
   339  007FF4  D7FC               	bra	u187
   340  007FF6  2E16               	decfsz	(??_main+1)& (0+255),f,c
   341  007FF8  D7FA               	bra	u187
   342  007FFA                     L2:
   343  007FFA  D000               	nop2	
   344  007FFC  2A17               	incf	_i,f,c
   345  007FFE  D7D6               	goto	l722
   346  008000                     __end_of_main:
   347                           	opt stack 0
   348  0000                     tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           prodh	equ	0xFF4
   353                           prodl	equ	0xFF3
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           postdec1	equ	0xFE5
   357                           fsr1l	equ	0xFE1
   358                           indf2	equ	0xFDF
   359                           fsr2h	equ	0xFDA
   360                           fsr2l	equ	0xFD9
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           prodh	equ	0xFF4
   366                           prodl	equ	0xFF3
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           indf2	equ	0xFDF
   372                           fsr2h	equ	0xFDA
   373                           fsr2l	equ	0xFD9
   374                           
   375                           	psect	rparam
   376  0000                     tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           prodh	equ	0xFF4
   381                           prodl	equ	0xFF3
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           indf2	equ	0xFDF
   387                           fsr2h	equ	0xFDA
   388                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2      17       1       24.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      20        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 16 11:41:33 2018

                      _i 0017                       l21 7F4C                       l30 7FE4  
                     l22 7FA8                       l23 7F5C                       l25 7F8C  
                     l28 7FB4       __CFG_FOSC$XTPLL_XT 000000                      l722 7FAC  
                    l706 7F54                      u157 7F7E                      u167 7F96  
                    u177 7FD6                      u187 7FEE             __CFG_BOR$OFF 000000  
                    prod 000FF3                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATD 000F8C             __CFG_PWRT$ON 000000  
                   _main 7F44                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodl 000FF3                     start 0000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0015                    _TRISD 000F95  
                  tablat 000FF5          __initialization 7F1C             __end_of_main 8000  
                 ??_main 0015            __activetblptr 000000             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7F3E          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0015                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F1C                  __ramtop 0800  
                __ptext0 7F44                  _tablota 0001     end_of_initialization 7F3E  
                postdec1 000FE5                  postinc0 000FEE                _PORTBbits 000F81  
              _TRISBbits 000F93            __pidataCOMRAM 7F08      start_initialization 7F1C  
            __pbssCOMRAM 0017                copy_data0 7F30                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 00BC                 _tablota2 000F  
  __CFG_CPUDIV$OSC1_PLL2 000000  
