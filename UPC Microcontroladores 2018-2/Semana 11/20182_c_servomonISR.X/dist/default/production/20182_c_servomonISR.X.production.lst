

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Oct 26 09:54:15 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   448                           SPPDATA equ 0F62h ;# 
   449  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   450                           SPPCFG equ 0F63h ;# 
   451  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   452                           SPPEPS equ 0F64h ;# 
   453  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   454                           SPPCON equ 0F65h ;# 
   455  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   456                           UFRM equ 0F66h ;# 
   457  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   458                           UFRML equ 0F66h ;# 
   459  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   460                           UFRMH equ 0F67h ;# 
   461  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   462                           UIR equ 0F68h ;# 
   463  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   464                           UIE equ 0F69h ;# 
   465  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   466                           UEIR equ 0F6Ah ;# 
   467  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   468                           UEIE equ 0F6Bh ;# 
   469  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   470                           USTAT equ 0F6Ch ;# 
   471  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   472                           UCON equ 0F6Dh ;# 
   473  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   474                           UADDR equ 0F6Eh ;# 
   475  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   476                           UCFG equ 0F6Fh ;# 
   477  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   478                           UEP0 equ 0F70h ;# 
   479  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   480                           UEP1 equ 0F71h ;# 
   481  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   482                           UEP2 equ 0F72h ;# 
   483  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   484                           UEP3 equ 0F73h ;# 
   485  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   486                           UEP4 equ 0F74h ;# 
   487  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   488                           UEP5 equ 0F75h ;# 
   489  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   490                           UEP6 equ 0F76h ;# 
   491  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   492                           UEP7 equ 0F77h ;# 
   493  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   494                           UEP8 equ 0F78h ;# 
   495  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   496                           UEP9 equ 0F79h ;# 
   497  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   498                           UEP10 equ 0F7Ah ;# 
   499  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   500                           UEP11 equ 0F7Bh ;# 
   501  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   502                           UEP12 equ 0F7Ch ;# 
   503  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   504                           UEP13 equ 0F7Dh ;# 
   505  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   506                           UEP14 equ 0F7Eh ;# 
   507  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   508                           UEP15 equ 0F7Fh ;# 
   509  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   510                           PORTA equ 0F80h ;# 
   511  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   512                           PORTB equ 0F81h ;# 
   513  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   514                           PORTC equ 0F82h ;# 
   515  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   516                           PORTD equ 0F83h ;# 
   517  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   518                           PORTE equ 0F84h ;# 
   519  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   520                           LATA equ 0F89h ;# 
   521  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   522                           LATB equ 0F8Ah ;# 
   523  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   524                           LATC equ 0F8Bh ;# 
   525  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   526                           LATD equ 0F8Ch ;# 
   527  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   528                           LATE equ 0F8Dh ;# 
   529  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   530                           TRISA equ 0F92h ;# 
   531  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   532                           DDRA equ 0F92h ;# 
   533  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   534                           TRISB equ 0F93h ;# 
   535  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   536                           DDRB equ 0F93h ;# 
   537  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   538                           TRISC equ 0F94h ;# 
   539  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   540                           DDRC equ 0F94h ;# 
   541  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   542                           TRISD equ 0F95h ;# 
   543  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   544                           DDRD equ 0F95h ;# 
   545  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   546                           TRISE equ 0F96h ;# 
   547  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   548                           DDRE equ 0F96h ;# 
   549  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   550                           OSCTUNE equ 0F9Bh ;# 
   551  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   552                           PIE1 equ 0F9Dh ;# 
   553  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   554                           PIR1 equ 0F9Eh ;# 
   555  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   556                           IPR1 equ 0F9Fh ;# 
   557  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   558                           PIE2 equ 0FA0h ;# 
   559  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   560                           PIR2 equ 0FA1h ;# 
   561  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   562                           IPR2 equ 0FA2h ;# 
   563  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   564                           EECON1 equ 0FA6h ;# 
   565  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   566                           EECON2 equ 0FA7h ;# 
   567  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   568                           EEDATA equ 0FA8h ;# 
   569  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   570                           EEADR equ 0FA9h ;# 
   571  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   572                           RCSTA equ 0FABh ;# 
   573  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   574                           RCSTA1 equ 0FABh ;# 
   575  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   576                           TXSTA equ 0FACh ;# 
   577  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   578                           TXSTA1 equ 0FACh ;# 
   579  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   580                           TXREG equ 0FADh ;# 
   581  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   582                           TXREG1 equ 0FADh ;# 
   583  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   584                           RCREG equ 0FAEh ;# 
   585  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   586                           RCREG1 equ 0FAEh ;# 
   587  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   588                           SPBRG equ 0FAFh ;# 
   589  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   590                           SPBRG1 equ 0FAFh ;# 
   591  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   592                           SPBRGH equ 0FB0h ;# 
   593  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   594                           T3CON equ 0FB1h ;# 
   595  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   596                           TMR3 equ 0FB2h ;# 
   597  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   598                           TMR3L equ 0FB2h ;# 
   599  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   600                           TMR3H equ 0FB3h ;# 
   601  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   602                           CMCON equ 0FB4h ;# 
   603  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   604                           CVRCON equ 0FB5h ;# 
   605  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   606                           ECCP1AS equ 0FB6h ;# 
   607  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   608                           CCP1AS equ 0FB6h ;# 
   609  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   610                           ECCP1DEL equ 0FB7h ;# 
   611  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   612                           CCP1DEL equ 0FB7h ;# 
   613  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   614                           BAUDCON equ 0FB8h ;# 
   615  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   616                           BAUDCTL equ 0FB8h ;# 
   617  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   618                           CCP2CON equ 0FBAh ;# 
   619  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   620                           CCPR2 equ 0FBBh ;# 
   621  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   622                           CCPR2L equ 0FBBh ;# 
   623  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   624                           CCPR2H equ 0FBCh ;# 
   625  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   626                           CCP1CON equ 0FBDh ;# 
   627  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   628                           ECCP1CON equ 0FBDh ;# 
   629  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   630                           CCPR1 equ 0FBEh ;# 
   631  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   632                           CCPR1L equ 0FBEh ;# 
   633  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   634                           CCPR1H equ 0FBFh ;# 
   635  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   636                           ADCON2 equ 0FC0h ;# 
   637  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   638                           ADCON1 equ 0FC1h ;# 
   639  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   640                           ADCON0 equ 0FC2h ;# 
   641  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   642                           ADRES equ 0FC3h ;# 
   643  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   644                           ADRESL equ 0FC3h ;# 
   645  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   646                           ADRESH equ 0FC4h ;# 
   647  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   648                           SSPCON2 equ 0FC5h ;# 
   649  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   650                           SSPCON1 equ 0FC6h ;# 
   651  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   652                           SSPSTAT equ 0FC7h ;# 
   653  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   654                           SSPADD equ 0FC8h ;# 
   655  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   656                           SSPBUF equ 0FC9h ;# 
   657  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   658                           T2CON equ 0FCAh ;# 
   659  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   660                           PR2 equ 0FCBh ;# 
   661  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   662                           MEMCON equ 0FCBh ;# 
   663  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   664                           TMR2 equ 0FCCh ;# 
   665  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   666                           T1CON equ 0FCDh ;# 
   667  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   668                           TMR1 equ 0FCEh ;# 
   669  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   670                           TMR1L equ 0FCEh ;# 
   671  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   672                           TMR1H equ 0FCFh ;# 
   673  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   674                           RCON equ 0FD0h ;# 
   675  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   676                           WDTCON equ 0FD1h ;# 
   677  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   678                           HLVDCON equ 0FD2h ;# 
   679  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   680                           LVDCON equ 0FD2h ;# 
   681  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   682                           OSCCON equ 0FD3h ;# 
   683  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   684                           T0CON equ 0FD5h ;# 
   685  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   686                           TMR0 equ 0FD6h ;# 
   687  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   688                           TMR0L equ 0FD6h ;# 
   689  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   690                           TMR0H equ 0FD7h ;# 
   691  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   692                           STATUS equ 0FD8h ;# 
   693  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   694                           FSR2 equ 0FD9h ;# 
   695  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   696                           FSR2L equ 0FD9h ;# 
   697  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   698                           FSR2H equ 0FDAh ;# 
   699  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   700                           PLUSW2 equ 0FDBh ;# 
   701  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   702                           PREINC2 equ 0FDCh ;# 
   703  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   704                           POSTDEC2 equ 0FDDh ;# 
   705  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   706                           POSTINC2 equ 0FDEh ;# 
   707  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   708                           INDF2 equ 0FDFh ;# 
   709  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   710                           BSR equ 0FE0h ;# 
   711  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   712                           FSR1 equ 0FE1h ;# 
   713  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   714                           FSR1L equ 0FE1h ;# 
   715  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   716                           FSR1H equ 0FE2h ;# 
   717  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   718                           PLUSW1 equ 0FE3h ;# 
   719  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   720                           PREINC1 equ 0FE4h ;# 
   721  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   722                           POSTDEC1 equ 0FE5h ;# 
   723  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   724                           POSTINC1 equ 0FE6h ;# 
   725  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   726                           INDF1 equ 0FE7h ;# 
   727  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   728                           WREG equ 0FE8h ;# 
   729  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   730                           FSR0 equ 0FE9h ;# 
   731  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   732                           FSR0L equ 0FE9h ;# 
   733  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   734                           FSR0H equ 0FEAh ;# 
   735  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   736                           PLUSW0 equ 0FEBh ;# 
   737  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   738                           PREINC0 equ 0FECh ;# 
   739  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   740                           POSTDEC0 equ 0FEDh ;# 
   741  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   742                           POSTINC0 equ 0FEEh ;# 
   743  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   744                           INDF0 equ 0FEFh ;# 
   745  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   746                           INTCON3 equ 0FF0h ;# 
   747  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   748                           INTCON2 equ 0FF1h ;# 
   749  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   750                           INTCON equ 0FF2h ;# 
   751  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   752                           PROD equ 0FF3h ;# 
   753  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   754                           PRODL equ 0FF3h ;# 
   755  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   756                           PRODH equ 0FF4h ;# 
   757  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   758                           TABLAT equ 0FF5h ;# 
   759  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   760                           TBLPTR equ 0FF6h ;# 
   761  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   762                           TBLPTRL equ 0FF6h ;# 
   763  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   764                           TBLPTRH equ 0FF7h ;# 
   765  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   766                           TBLPTRU equ 0FF8h ;# 
   767  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   768                           PCLAT equ 0FF9h ;# 
   769  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   770                           PC equ 0FF9h ;# 
   771  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   772                           PCL equ 0FF9h ;# 
   773  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   774                           PCLATH equ 0FFAh ;# 
   775  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   776                           PCLATU equ 0FFBh ;# 
   777  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   778                           STKPTR equ 0FFCh ;# 
   779  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   780                           TOS equ 0FFDh ;# 
   781  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   782                           TOSL equ 0FFDh ;# 
   783  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   784                           TOSH equ 0FFEh ;# 
   785  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   786                           TOSU equ 0FFFh ;# 
   787  0000                     	FNCALL	_main,_BORRAR_LCD
   788                           	FNCALL	_main,_CURSOR_HOME
   789                           	FNCALL	_main,_CURSOR_ONOFF
   790                           	FNCALL	_main,_ENVIA_CHAR
   791                           	FNCALL	_main,_ESCRIBE_MENSAJE
   792                           	FNCALL	_main,_LCD_CONFIG
   793                           	FNCALL	_main,_POS_CURSOR
   794                           	FNCALL	_main,_conviertemon
   795                           	FNCALL	_conviertemon,___awdiv
   796                           	FNCALL	_conviertemon,___wmul
   797                           	FNCALL	_POS_CURSOR,_ENVIA_LCD_CMD
   798                           	FNCALL	_LCD_CONFIG,_ENVIA_LCD_CMD
   799                           	FNCALL	_LCD_CONFIG,_ENVIA_NIBBLE
   800                           	FNCALL	_ESCRIBE_MENSAJE,_ENVIA_CHAR
   801                           	FNCALL	_ENVIA_CHAR,_ENVIA_NIBBLE
   802                           	FNCALL	_ENVIA_CHAR,_LEER_LCD
   803                           	FNCALL	_CURSOR_ONOFF,_ENVIA_LCD_CMD
   804                           	FNCALL	_CURSOR_HOME,_ENVIA_LCD_CMD
   805                           	FNCALL	_BORRAR_LCD,_ENVIA_LCD_CMD
   806                           	FNCALL	_ENVIA_LCD_CMD,_ENVIA_NIBBLE
   807                           	FNCALL	_ENVIA_LCD_CMD,_LEER_LCD
   808                           	FNROOT	_main
   809                           	FNCALL	intlevel2,_Tmr0ISR
   810                           	global	intlevel2
   811                           	FNROOT	intlevel2
   812                           	global	_cta_off
   813                           	global	_cta_on
   814                           	global	_temporal
   815                           	global	_diguni
   816                           	global	_digdec
   817                           	global	_digcen
   818                           	global	_contador
   819                           	global	_TMR0
   820                           _TMR0	set	0xFD6
   821  0000                     	global	_PORTD
   822                           _PORTD	set	0xF83
   823  0000                     	global	_LATD
   824                           _LATD	set	0xF8C
   825  0000                     	global	_LATDbits
   826                           _LATDbits	set	0xF8C
   827  0000                     	global	_INTCONbits
   828                           _INTCONbits	set	0xFF2
   829  0000                     	global	_LATEbits
   830                           _LATEbits	set	0xF8D
   831  0000                     	global	_PORTEbits
   832                           _PORTEbits	set	0xF84
   833  0000                     	global	_TRISD
   834                           _TRISD	set	0xF95
   835  0000                     	global	_INTCON
   836                           _INTCON	set	0xFF2
   837  0000                     	global	_T0CON
   838                           _T0CON	set	0xFD5
   839  0000                     	global	_TRISEbits
   840                           _TRISEbits	set	0xF96
   841  0000                     	global	_ADCON1
   842                           _ADCON1	set	0xFC1
   843  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   844                           global __psmallconst
   845                           __psmallconst:
   846  000800                     	db	0
   847  000800  00                 	
   848                           STR_3:
   849  000801                     	db	83	;'S'
   850  000801  53                 	db	101	;'e'
   851  000802  65                 	db	114	;'r'
   852  000803  72                 	db	118	;'v'
   853  000804  76                 	db	111	;'o'
   854  000805  6F                 	db	32
   855  000806  20                 	db	67	;'C'
   856  000807  43                 	db	101	;'e'
   857  000808  65                 	db	110	;'n'
   858  000809  6E                 	db	116	;'t'
   859  00080A  74                 	db	114	;'r'
   860  00080B  72                 	db	111	;'o'
   861  00080C  6F                 	db	32
   862  00080D  20                 	db	32
   863  00080E  20                 	db	32
   864  00080F  20                 	db	32
   865  000810  20                 	db	0
   866  000811  00                 	
   867                           STR_4:
   868  000812                     	db	83	;'S'
   869  000812  53                 	db	101	;'e'
   870  000813  65                 	db	114	;'r'
   871  000814  72                 	db	118	;'v'
   872  000815  76                 	db	111	;'o'
   873  000816  6F                 	db	32
   874  000817  20                 	db	68	;'D'
   875  000818  44                 	db	101	;'e'
   876  000819  65                 	db	114	;'r'
   877  00081A  72                 	db	101	;'e'
   878  00081B  65                 	db	99	;'c'
   879  00081C  63                 	db	104	;'h'
   880  00081D  68                 	db	97	;'a'
   881  00081E  61                 	db	32
   882  00081F  20                 	db	32
   883  000820  20                 	db	0
   884  000821  00                 	
   885                           STR_2:
   886  000822                     	db	83	;'S'
   887  000822  53                 	db	101	;'e'
   888  000823  65                 	db	114	;'r'
   889  000824  72                 	db	118	;'v'
   890  000825  76                 	db	111	;'o'
   891  000826  6F                 	db	32
   892  000827  20                 	db	73	;'I'
   893  000828  49                 	db	122	;'z'
   894  000829  7A                 	db	113	;'q'
   895  00082A  71                 	db	117	;'u'
   896  00082B  75                 	db	105	;'i'
   897  00082C  69                 	db	101	;'e'
   898  00082D  65                 	db	114	;'r'
   899  00082E  72                 	db	100	;'d'
   900  00082F  64                 	db	97	;'a'
   901  000830  61                 	db	0
   902  000831  00                 	
   903                           STR_1:
   904  000832                     	db	67	;'C'
   905  000832  43                 	db	117	;'u'
   906  000833  75                 	db	101	;'e'
   907  000834  65                 	db	110	;'n'
   908  000835  6E                 	db	116	;'t'
   909  000836  74                 	db	97	;'a'
   910  000837  61                 	db	58	;':'
   911  000838  3A                 	db	0
   912  000839  00                 ; #config settings
   913                           global __CFG_PLLDIV$1
   914                           __CFG_PLLDIV$1 equ 0x0
   915  0000                     global __CFG_CPUDIV$OSC1_PLL2
   916                           __CFG_CPUDIV$OSC1_PLL2 equ 0x0
   917  0000                     global __CFG_FOSC$XTPLL_XT
   918                           __CFG_FOSC$XTPLL_XT equ 0x0
   919  0000                     global __CFG_PWRT$ON
   920                           __CFG_PWRT$ON equ 0x0
   921  0000                     global __CFG_BOR$OFF
   922                           __CFG_BOR$OFF equ 0x0
   923  0000                     global __CFG_WDT$OFF
   924                           __CFG_WDT$OFF equ 0x0
   925  0000                     global __CFG_CCP2MX$ON
   926                           __CFG_CCP2MX$ON equ 0x0
   927  0000                     global __CFG_PBADEN$OFF
   928                           __CFG_PBADEN$OFF equ 0x0
   929  0000                     global __CFG_MCLRE$ON
   930                           __CFG_MCLRE$ON equ 0x0
   931  0000                     global __CFG_LVP$OFF
   932                           __CFG_LVP$OFF equ 0x0
   933  0000                     	file	"C:\Users\klnla\AppData\Local\Temp\sklc."
   934                           	line	#
   935                           psect	cinit,class=CODE,delta=1,reloc=2
   936                           global __pcinit
   937                           __pcinit:
   938  000DBA                     global start_initialization
   939                           start_initialization:
   940  000DBA                     
   941                           global __initialization
   942                           __initialization:
   943  000DBA                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   944                           global __pbssCOMRAM
   945                           __pbssCOMRAM:
   946  000001                     	global	_cta_off
   947                           _cta_off:
   948  000001                            ds      2
   949  000001                     	global	_cta_on
   950                           _cta_on:
   951  000003                            ds      2
   952  000003                     	global	_temporal
   953                           _temporal:
   954  000005                            ds      2
   955  000005                     	global	_diguni
   956                           _diguni:
   957  000007                            ds      2
   958  000007                     	global	_digdec
   959                           _digdec:
   960  000009                            ds      2
   961  000009                     	global	_digcen
   962                           _digcen:
   963  00000B                            ds      2
   964  00000B                     	global	_contador
   965                           _contador:
   966  00000D                            ds      2
   967  00000D                     	file	"C:\Users\klnla\AppData\Local\Temp\sklc."
   968                           	line	#
   969                           psect	cinit
   970                           ; Clear objects allocated to COMRAM (14 bytes)
   971                           	global __pbssCOMRAM
   972                           lfsr	0,__pbssCOMRAM
   973  000DBA  EE00  F001         movlw	14
   974  000DBE  0E0E               clear_0:
   975  000DC0                     clrf	postinc0,c
   976  000DC0  6AEE               decf	wreg
   977  000DC2  06E8               bnz	clear_0
   978  000DC4  E1FD               psect cinit,class=CODE,delta=1
   979                           global end_of_initialization,__end_of__initialization
   980                           
   981                           ;End of C runtime variable initialization code
   982                           
   983                           end_of_initialization:
   984  000DC6                     __end_of__initialization:
   985  000DC6                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   986  000DC6  901A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   987  000DC8  921A               	GLOBAL	__Lsmallconst
   988                           	movlw	low highword(__Lsmallconst)
   989  000DCA  0E00               	movwf	tblptru
   990  000DCC  6EF8               	movlw	high(__Lsmallconst)
   991  000DCE  0E08               	movwf	tblptrh
   992  000DD0  6EF7               movlb 0
   993  000DD2  0100               goto _main	;jump to C main() function
   994  000DD4  EF1E  F004         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   995                           global __pcstackCOMRAM
   996                           __pcstackCOMRAM:
   997  00000F                     ?_LCD_CONFIG:	; 1 bytes @ 0x0
   998  00000F                     ?_BORRAR_LCD:	; 1 bytes @ 0x0
   999  00000F                     ?_CURSOR_ONOFF:	; 1 bytes @ 0x0
  1000  00000F                     ?_CURSOR_HOME:	; 1 bytes @ 0x0
  1001  00000F                     ?_ENVIA_CHAR:	; 1 bytes @ 0x0
  1002  00000F                     ?_ENVIA_LCD_CMD:	; 1 bytes @ 0x0
  1003  00000F                     ?_LEER_LCD:	; 1 bytes @ 0x0
  1004  00000F                     ??_LEER_LCD:	; 1 bytes @ 0x0
  1005  00000F                     ?_ENVIA_NIBBLE:	; 1 bytes @ 0x0
  1006  00000F                     ??_ENVIA_NIBBLE:	; 1 bytes @ 0x0
  1007  00000F                     ?_main:	; 1 bytes @ 0x0
  1008  00000F                     ?_Tmr0ISR:	; 1 bytes @ 0x0
  1009  00000F                     ??_Tmr0ISR:	; 1 bytes @ 0x0
  1010  00000F                     	global	?___wmul
  1011                           ?___wmul:	; 2 bytes @ 0x0
  1012  00000F                     	global	?___awdiv
  1013                           ?___awdiv:	; 2 bytes @ 0x0
  1014  00000F                     	global	ENVIA_NIBBLE@dato
  1015                           ENVIA_NIBBLE@dato:	; 1 bytes @ 0x0
  1016  00000F                     	global	LEER_LCD@aux
  1017                           LEER_LCD@aux:	; 1 bytes @ 0x0
  1018  00000F                     	global	___wmul@multiplier
  1019                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1020  00000F                     	global	___awdiv@dividend
  1021                           ___awdiv@dividend:	; 2 bytes @ 0x0
  1022  00000F                     	ds   1
  1023  00000F                     ??_ENVIA_CHAR:	; 1 bytes @ 0x1
  1024  000010                     ??_ENVIA_LCD_CMD:	; 1 bytes @ 0x1
  1025  000010                     	global	ENVIA_CHAR@dato
  1026                           ENVIA_CHAR@dato:	; 1 bytes @ 0x1
  1027  000010                     	global	ENVIA_LCD_CMD@dato
  1028                           ENVIA_LCD_CMD@dato:	; 1 bytes @ 0x1
  1029  000010                     	ds   1
  1030  000010                     	global	ENVIA_CHAR@aux
  1031                           ENVIA_CHAR@aux:	; 1 bytes @ 0x2
  1032  000011                     	global	ENVIA_LCD_CMD@aux
  1033                           ENVIA_LCD_CMD@aux:	; 1 bytes @ 0x2
  1034  000011                     	global	___wmul@multiplicand
  1035                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1036  000011                     	global	___awdiv@divisor
  1037                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1038  000011                     	ds   1
  1039  000011                     ??_LCD_CONFIG:	; 1 bytes @ 0x3
  1040  000012                     ??_BORRAR_LCD:	; 1 bytes @ 0x3
  1041  000012                     ??_CURSOR_ONOFF:	; 1 bytes @ 0x3
  1042  000012                     ??_CURSOR_HOME:	; 1 bytes @ 0x3
  1043  000012                     ?_ESCRIBE_MENSAJE:	; 1 bytes @ 0x3
  1044  000012                     ?_POS_CURSOR:	; 1 bytes @ 0x3
  1045  000012                     	global	POS_CURSOR@columna
  1046                           POS_CURSOR@columna:	; 1 bytes @ 0x3
  1047  000012                     	global	CURSOR_ONOFF@estado
  1048                           CURSOR_ONOFF@estado:	; 1 bytes @ 0x3
  1049  000012                     	global	ESCRIBE_MENSAJE@cadena
  1050                           ESCRIBE_MENSAJE@cadena:	; 2 bytes @ 0x3
  1051  000012                     	ds   1
  1052  000012                     ??_POS_CURSOR:	; 1 bytes @ 0x4
  1053  000013                     ??___wmul:	; 1 bytes @ 0x4
  1054  000013                     ??___awdiv:	; 1 bytes @ 0x4
  1055  000013                     	global	POS_CURSOR@fila
  1056                           POS_CURSOR@fila:	; 1 bytes @ 0x4
  1057  000013                     	global	___awdiv@counter
  1058                           ___awdiv@counter:	; 1 bytes @ 0x4
  1059  000013                     	global	___wmul@product
  1060                           ___wmul@product:	; 2 bytes @ 0x4
  1061  000013                     	ds   1
  1062  000013                     	global	ESCRIBE_MENSAJE@tam
  1063                           ESCRIBE_MENSAJE@tam:	; 1 bytes @ 0x5
  1064  000014                     	global	___awdiv@sign
  1065                           ___awdiv@sign:	; 1 bytes @ 0x5
  1066  000014                     	ds   1
  1067  000014                     ??_ESCRIBE_MENSAJE:	; 1 bytes @ 0x6
  1068  000015                     	global	___awdiv@quotient
  1069                           ___awdiv@quotient:	; 2 bytes @ 0x6
  1070  000015                     	ds   2
  1071  000015                     ?_conviertemon:	; 1 bytes @ 0x8
  1072  000017                     	global	ESCRIBE_MENSAJE@i
  1073                           ESCRIBE_MENSAJE@i:	; 1 bytes @ 0x8
  1074  000017                     	global	conviertemon@contadoron
  1075                           conviertemon@contadoron:	; 2 bytes @ 0x8
  1076  000017                     	ds   2
  1077  000017                     ??_conviertemon:	; 1 bytes @ 0xA
  1078  000019                     ??_main:	; 1 bytes @ 0xA
  1079  000019                     	ds   1
  1080  000019                     ;!
  1081                           ;!Data Sizes:
  1082                           ;!    Strings     57
  1083                           ;!    Constant    0
  1084                           ;!    Data        0
  1085                           ;!    BSS         14
  1086                           ;!    Persistent  0
  1087                           ;!    Stack       0
  1088                           ;!
  1089                           ;!Auto Spaces:
  1090                           ;!    Space          Size  Autos    Used
  1091                           ;!    COMRAM           94     11      25
  1092                           ;!    BANK0           160      0       0
  1093                           ;!    BANK1           256      0       0
  1094                           ;!    BANK2           256      0       0
  1095                           ;!    BANK3           256      0       0
  1096                           ;!    BANK4           256      0       0
  1097                           ;!    BANK5           256      0       0
  1098                           ;!    BANK6           256      0       0
  1099                           ;!    BANK7           256      0       0
  1100                           
  1101                           ;!
  1102                           ;!Pointer List with Targets:
  1103                           ;!
  1104                           ;!    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
  1105                           ;!		 -> STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[16]), STR_1(CODE[8]), 
  1106                           ;!
  1107                           
  1108                           
  1109                           ;!
  1110                           ;!Critical Paths under _main in COMRAM
  1111                           ;!
  1112                           ;!    _main->_conviertemon
  1113                           ;!    _conviertemon->___awdiv
  1114                           ;!    _POS_CURSOR->_ENVIA_LCD_CMD
  1115                           ;!    _LCD_CONFIG->_ENVIA_LCD_CMD
  1116                           ;!    _ESCRIBE_MENSAJE->_ENVIA_CHAR
  1117                           ;!    _ENVIA_CHAR->_ENVIA_NIBBLE
  1118                           ;!    _ENVIA_CHAR->_LEER_LCD
  1119                           ;!    _CURSOR_ONOFF->_ENVIA_LCD_CMD
  1120                           ;!    _CURSOR_HOME->_ENVIA_LCD_CMD
  1121                           ;!    _BORRAR_LCD->_ENVIA_LCD_CMD
  1122                           ;!    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
  1123                           ;!    _ENVIA_LCD_CMD->_LEER_LCD
  1124                           ;!
  1125                           ;!Critical Paths under _Tmr0ISR in COMRAM
  1126                           ;!
  1127                           ;!    None.
  1128                           ;!
  1129                           ;!Critical Paths under _main in BANK0
  1130                           ;!
  1131                           ;!    None.
  1132                           ;!
  1133                           ;!Critical Paths under _Tmr0ISR in BANK0
  1134                           ;!
  1135                           ;!    None.
  1136                           ;!
  1137                           ;!Critical Paths under _main in BANK1
  1138                           ;!
  1139                           ;!    None.
  1140                           ;!
  1141                           ;!Critical Paths under _Tmr0ISR in BANK1
  1142                           ;!
  1143                           ;!    None.
  1144                           ;!
  1145                           ;!Critical Paths under _main in BANK2
  1146                           ;!
  1147                           ;!    None.
  1148                           ;!
  1149                           ;!Critical Paths under _Tmr0ISR in BANK2
  1150                           ;!
  1151                           ;!    None.
  1152                           ;!
  1153                           ;!Critical Paths under _main in BANK3
  1154                           ;!
  1155                           ;!    None.
  1156                           ;!
  1157                           ;!Critical Paths under _Tmr0ISR in BANK3
  1158                           ;!
  1159                           ;!    None.
  1160                           ;!
  1161                           ;!Critical Paths under _main in BANK4
  1162                           ;!
  1163                           ;!    None.
  1164                           ;!
  1165                           ;!Critical Paths under _Tmr0ISR in BANK4
  1166                           ;!
  1167                           ;!    None.
  1168                           ;!
  1169                           ;!Critical Paths under _main in BANK5
  1170                           ;!
  1171                           ;!    None.
  1172                           ;!
  1173                           ;!Critical Paths under _Tmr0ISR in BANK5
  1174                           ;!
  1175                           ;!    None.
  1176                           ;!
  1177                           ;!Critical Paths under _main in BANK6
  1178                           ;!
  1179                           ;!    None.
  1180                           ;!
  1181                           ;!Critical Paths under _Tmr0ISR in BANK6
  1182                           ;!
  1183                           ;!    None.
  1184                           ;!
  1185                           ;!Critical Paths under _main in BANK7
  1186                           ;!
  1187                           ;!    None.
  1188                           ;!
  1189                           ;!Critical Paths under _Tmr0ISR in BANK7
  1190                           ;!
  1191                           ;!    None.
  1192                           
  1193 ;;
  1194 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1195 ;;
  1196                           
  1197                           ;!
  1198                           ;!Call Graph Tables:
  1199                           ;!
  1200                           ;! ---------------------------------------------------------------------------------
  1201                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1202                           ;! ---------------------------------------------------------------------------------
  1203                           ;! (0) _main                                                 1     1      0    3163
  1204                           ;!                                             10 COMRAM     1     1      0
  1205                           ;!                         _BORRAR_LCD
  1206                           ;!                        _CURSOR_HOME
  1207                           ;!                       _CURSOR_ONOFF
  1208                           ;!                         _ENVIA_CHAR
  1209                           ;!                    _ESCRIBE_MENSAJE
  1210                           ;!                         _LCD_CONFIG
  1211                           ;!                         _POS_CURSOR
  1212                           ;!                       _conviertemon
  1213                           ;! ---------------------------------------------------------------------------------
  1214                           ;! (1) _conviertemon                                         2     0      2    1187
  1215                           ;!                                              8 COMRAM     2     0      2
  1216                           ;!                            ___awdiv
  1217                           ;!                             ___wmul
  1218                           ;! ---------------------------------------------------------------------------------
  1219                           ;! (2) ___wmul                                               6     2      4     463
  1220                           ;!                                              0 COMRAM     6     2      4
  1221                           ;! ---------------------------------------------------------------------------------
  1222                           ;! (2) ___awdiv                                              8     4      4     604
  1223                           ;!                                              0 COMRAM     8     4      4
  1224                           ;! ---------------------------------------------------------------------------------
  1225                           ;! (1) _POS_CURSOR                                           2     1      1     512
  1226                           ;!                                              3 COMRAM     2     1      1
  1227                           ;!                      _ENVIA_LCD_CMD
  1228                           ;! ---------------------------------------------------------------------------------
  1229                           ;! (1) _LCD_CONFIG                                           1     1      0     135
  1230                           ;!                                              3 COMRAM     1     1      0
  1231                           ;!                      _ENVIA_LCD_CMD
  1232                           ;!                       _ENVIA_NIBBLE
  1233                           ;! ---------------------------------------------------------------------------------
  1234                           ;! (1) _ESCRIBE_MENSAJE                                      6     3      3     819
  1235                           ;!                                              3 COMRAM     6     3      3
  1236                           ;!                         _ENVIA_CHAR
  1237                           ;! ---------------------------------------------------------------------------------
  1238                           ;! (2) _ENVIA_CHAR                                           2     2      0     120
  1239                           ;!                                              1 COMRAM     2     2      0
  1240                           ;!                       _ENVIA_NIBBLE
  1241                           ;!                           _LEER_LCD
  1242                           ;! ---------------------------------------------------------------------------------
  1243                           ;! (1) _CURSOR_ONOFF                                         1     1      0     150
  1244                           ;!                                              3 COMRAM     1     1      0
  1245                           ;!                      _ENVIA_LCD_CMD
  1246                           ;! ---------------------------------------------------------------------------------
  1247                           ;! (1) _CURSOR_HOME                                          0     0      0     120
  1248                           ;!                      _ENVIA_LCD_CMD
  1249                           ;! ---------------------------------------------------------------------------------
  1250                           ;! (1) _BORRAR_LCD                                           0     0      0     120
  1251                           ;!                      _ENVIA_LCD_CMD
  1252                           ;! ---------------------------------------------------------------------------------
  1253                           ;! (2) _ENVIA_LCD_CMD                                        2     2      0     120
  1254                           ;!                                              1 COMRAM     2     2      0
  1255                           ;!                       _ENVIA_NIBBLE
  1256                           ;!                           _LEER_LCD
  1257                           ;! ---------------------------------------------------------------------------------
  1258                           ;! (3) _LEER_LCD                                             1     1      0      45
  1259                           ;!                                              0 COMRAM     1     1      0
  1260                           ;! ---------------------------------------------------------------------------------
  1261                           ;! (3) _ENVIA_NIBBLE                                         1     1      0      15
  1262                           ;!                                              0 COMRAM     1     1      0
  1263                           ;! ---------------------------------------------------------------------------------
  1264                           ;! Estimated maximum stack depth 3
  1265                           ;! ---------------------------------------------------------------------------------
  1266                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1267                           ;! ---------------------------------------------------------------------------------
  1268                           ;! (4) _Tmr0ISR                                              0     0      0       0
  1269                           ;! ---------------------------------------------------------------------------------
  1270                           ;! Estimated maximum stack depth 4
  1271                           ;! ---------------------------------------------------------------------------------
  1272                           ;!
  1273                           ;! Call Graph Graphs:
  1274                           ;!
  1275                           ;! _main (ROOT)
  1276                           ;!   _BORRAR_LCD
  1277                           ;!     _ENVIA_LCD_CMD
  1278                           ;!       _ENVIA_NIBBLE
  1279                           ;!       _LEER_LCD
  1280                           ;!   _CURSOR_HOME
  1281                           ;!     _ENVIA_LCD_CMD
  1282                           ;!       _ENVIA_NIBBLE
  1283                           ;!       _LEER_LCD
  1284                           ;!   _CURSOR_ONOFF
  1285                           ;!     _ENVIA_LCD_CMD
  1286                           ;!       _ENVIA_NIBBLE
  1287                           ;!       _LEER_LCD
  1288                           ;!   _ENVIA_CHAR
  1289                           ;!     _ENVIA_NIBBLE
  1290                           ;!     _LEER_LCD
  1291                           ;!   _ESCRIBE_MENSAJE
  1292                           ;!     _ENVIA_CHAR
  1293                           ;!       _ENVIA_NIBBLE
  1294                           ;!       _LEER_LCD
  1295                           ;!   _LCD_CONFIG
  1296                           ;!     _ENVIA_LCD_CMD
  1297                           ;!       _ENVIA_NIBBLE
  1298                           ;!       _LEER_LCD
  1299                           ;!     _ENVIA_NIBBLE
  1300                           ;!   _POS_CURSOR
  1301                           ;!     _ENVIA_LCD_CMD
  1302                           ;!       _ENVIA_NIBBLE
  1303                           ;!       _LEER_LCD
  1304                           ;!   _conviertemon
  1305                           ;!     ___awdiv
  1306                           ;!     ___wmul
  1307                           ;!
  1308                           ;! _Tmr0ISR (ROOT)
  1309                           ;!
  1310                           
  1311                           ;! Address spaces:
  1312                           
  1313                           ;!Name               Size   Autos  Total    Cost      Usage
  1314                           ;!BIGRAM             7FF      0       0      21        0.0%
  1315                           ;!EEDATA             100      0       0       0        0.0%
  1316                           ;!BITBANK7           100      0       0      18        0.0%
  1317                           ;!BANK7              100      0       0      19        0.0%
  1318                           ;!BITBANK6           100      0       0      16        0.0%
  1319                           ;!BANK6              100      0       0      17        0.0%
  1320                           ;!BITBANK5           100      0       0      14        0.0%
  1321                           ;!BANK5              100      0       0      15        0.0%
  1322                           ;!BITBANK4           100      0       0      12        0.0%
  1323                           ;!BANK4              100      0       0      13        0.0%
  1324                           ;!BITBANK3           100      0       0      10        0.0%
  1325                           ;!BANK3              100      0       0      11        0.0%
  1326                           ;!BITBANK2           100      0       0       8        0.0%
  1327                           ;!BANK2              100      0       0       9        0.0%
  1328                           ;!BITBANK1           100      0       0       6        0.0%
  1329                           ;!BANK1              100      0       0       7        0.0%
  1330                           ;!BITBANK0            A0      0       0       4        0.0%
  1331                           ;!BANK0               A0      0       0       5        0.0%
  1332                           ;!BITCOMRAM           5E      0       0       0        0.0%
  1333                           ;!COMRAM              5E      B      19       1       26.6%
  1334                           ;!BITSFR               0      0       0     200        0.0%
  1335                           ;!SFR                  0      0       0     200        0.0%
  1336                           ;!STACK                0      0       0       2        0.0%
  1337                           ;!NULL                 0      0       0       0        0.0%
  1338                           ;!ABS                  0      0      19      20        0.0%
  1339                           ;!DATA                 0      0      19       3        0.0%
  1340                           ;!CODE                 0      0       0       0        0.0%
  1341                           
  1342                           	global	_main
  1343                           
  1344 ;; *************** function _main *****************
  1345 ;; Defined at:
  1346 ;;		line 33 in file "codemon.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1360 ;;      Params:         0       0       0       0       0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1362 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1363 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1364 ;;Total ram usage:        1 bytes
  1365 ;; Hardware stack levels required when called:    4
  1366 ;; This function calls:
  1367 ;;		_BORRAR_LCD
  1368 ;;		_CURSOR_HOME
  1369 ;;		_CURSOR_ONOFF
  1370 ;;		_ENVIA_CHAR
  1371 ;;		_ESCRIBE_MENSAJE
  1372 ;;		_LCD_CONFIG
  1373 ;;		_POS_CURSOR
  1374 ;;		_conviertemon
  1375 ;; This function is called by:
  1376 ;;		Startup code after reset
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1380                           	file	"codemon.c"
  1381                           	line	33
  1382                           global __ptext0
  1383                           __ptext0:
  1384  00083C                     psect	text0
  1385                           	file	"codemon.c"
  1386                           	line	33
  1387                           	global	__size_of_main
  1388                           	__size_of_main	equ	__end_of_main-_main
  1389  0000                     	
  1390                           _main:
  1391  00083C                     ;incstack = 0
  1392                           	opt	stack 27
  1393                           	line	34
  1394                           	
  1395                           l1186:
  1396  00083C                     ;codemon.c: 34:     ADCON1 = 0x0F;
  1397                           	movlw	low(0Fh)
  1398  00083C  0E0F               	movwf	((c:4033)),c	;volatile
  1399  00083E  6EC1               	line	35
  1400                           	
  1401                           l1188:
  1402  000840                     ;codemon.c: 35:     TRISEbits.RE0 = 0;
  1403                           	bcf	((c:3990)),c,0	;volatile
  1404  000840  9096               	line	36
  1405                           ;codemon.c: 36:     T0CON = 0x81;
  1406                           	movlw	low(081h)
  1407  000842  0E81               	movwf	((c:4053)),c	;volatile
  1408  000844  6ED5               	line	37
  1409                           ;codemon.c: 37:     INTCON = 0xA0;
  1410                           	movlw	low(0A0h)
  1411  000846  0EA0               	movwf	((c:4082)),c	;volatile
  1412  000848  6EF2               	line	38
  1413                           ;codemon.c: 38:     TRISD = 0x00;
  1414                           	movlw	low(0)
  1415  00084A  0E00               	movwf	((c:3989)),c	;volatile
  1416  00084C  6E95               	line	39
  1417                           	
  1418                           l1190:
  1419  00084E                     ;codemon.c: 39:     LCD_CONFIG();
  1420                           	call	_LCD_CONFIG	;wreg free
  1421  00084E  ECE9  F005         	line	40
  1422                           	
  1423                           l1192:
  1424  000852                     ;codemon.c: 40:     _delay((unsigned long)((10)*(48000000UL/4000.0)));
  1425                           	opt asmopt_push
  1426                           opt asmopt_off
  1427                           movlw	156
  1428  000852  0E9C               movwf	(??_main+0+0)&0ffh,c,f
  1429  000854  6E19               	movlw	215
  1430  000856  0ED7               u377:
  1431  000858                     decfsz	wreg,f
  1432  000858  2EE8               	bra	u377
  1433  00085A  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  1434  00085C  2E19               	bra	u377
  1435  00085E  D7FC               	nop
  1436  000860  F000               opt asmopt_pop
  1437                           
  1438                           	line	41
  1439                           	
  1440                           l1194:
  1441  000862                     ;codemon.c: 41:     BORRAR_LCD();
  1442                           	call	_BORRAR_LCD	;wreg free
  1443  000862  ECFE  F006         	line	42
  1444                           	
  1445                           l1196:
  1446  000866                     ;codemon.c: 42:     CURSOR_ONOFF(1);
  1447                           	movlw	(01h)&0ffh
  1448  000866  0E01               	
  1449                           	call	_CURSOR_ONOFF
  1450  000868  EC61  F006         	line	43
  1451                           	
  1452                           l1198:
  1453  00086C                     ;codemon.c: 43:     CURSOR_HOME();
  1454                           	call	_CURSOR_HOME	;wreg free
  1455  00086C  ECFA  F006         	line	44
  1456                           	
  1457                           l1200:
  1458  000870                     ;codemon.c: 44:     ESCRIBE_MENSAJE("Cuenta:", 7);
  1459                           		movlw	low(STR_1)
  1460  000870  0E32               	movwf	((c:ESCRIBE_MENSAJE@cadena)),c
  1461  000872  6E12               	movlw	high(STR_1)
  1462  000874  0E08               	movwf	((c:ESCRIBE_MENSAJE@cadena+1)),c
  1463  000876  6E13               
  1464                           	movlw	low(07h)
  1465  000878  0E07               	movwf	((c:ESCRIBE_MENSAJE@tam)),c
  1466  00087A  6E14               	call	_ESCRIBE_MENSAJE	;wreg free
  1467  00087C  EC19  F006         	goto	l1202
  1468  000880  EF42  F004         	line	45
  1469                           ;codemon.c: 45:     while(1){
  1470                           	
  1471                           l56:
  1472  000884                     	line	46
  1473                           	
  1474                           l1202:
  1475  000884                     ;codemon.c: 46:         conviertemon(contador);
  1476                           	movff	(c:_contador),(c:conviertemon@contadoron)
  1477  000884  C00D  F017         	movff	(c:_contador+1),(c:conviertemon@contadoron+1)
  1478  000888  C00E  F018         	call	_conviertemon	;wreg free
  1479  00088C  EC66  F005         	line	47
  1480                           	
  1481                           l1204:
  1482  000890                     ;codemon.c: 47:         POS_CURSOR(1,8);
  1483                           	movlw	low(08h)
  1484  000890  0E08               	movwf	((c:POS_CURSOR@columna)),c
  1485  000892  6E12               	movlw	(01h)&0ffh
  1486  000894  0E01               	
  1487                           	call	_POS_CURSOR
  1488  000896  EC40  F006         	line	48
  1489                           	
  1490                           l1206:
  1491  00089A                     ;codemon.c: 48:         ENVIA_CHAR(digcen+0x30);
  1492                           	movf	((c:_digcen)),c,w
  1493  00089A  500B               	addlw	low(030h)
  1494  00089C  0F30               	
  1495                           	call	_ENVIA_CHAR
  1496  00089E  EC7D  F006         	line	49
  1497                           	
  1498                           l1208:
  1499  0008A2                     ;codemon.c: 49:         ENVIA_CHAR(digdec+0x30);
  1500                           	movf	((c:_digdec)),c,w
  1501  0008A2  5009               	addlw	low(030h)
  1502  0008A4  0F30               	
  1503                           	call	_ENVIA_CHAR
  1504  0008A6  EC7D  F006         	line	50
  1505                           	
  1506                           l1210:
  1507  0008AA                     ;codemon.c: 50:         ENVIA_CHAR(diguni+0x30);
  1508                           	movf	((c:_diguni)),c,w
  1509  0008AA  5007               	addlw	low(030h)
  1510  0008AC  0F30               	
  1511                           	call	_ENVIA_CHAR
  1512  0008AE  EC7D  F006         	line	51
  1513                           	
  1514                           l1212:
  1515  0008B2                     ;codemon.c: 51:         _delay((unsigned long)((10)*(48000000UL/4000.0)));
  1516                           	opt asmopt_push
  1517                           opt asmopt_off
  1518                           movlw	156
  1519  0008B2  0E9C               movwf	(??_main+0+0)&0ffh,c,f
  1520  0008B4  6E19               	movlw	215
  1521  0008B6  0ED7               u387:
  1522  0008B8                     decfsz	wreg,f
  1523  0008B8  2EE8               	bra	u387
  1524  0008BA  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  1525  0008BC  2E19               	bra	u387
  1526  0008BE  D7FC               	nop
  1527  0008C0  F000               opt asmopt_pop
  1528                           
  1529                           	line	52
  1530                           	
  1531                           l1214:
  1532  0008C2                     ;codemon.c: 52:         if (contador >= 299){
  1533                           	btfsc	((c:_contador+1)),c,7
  1534  0008C2  BE0E               	goto	u331
  1535  0008C4  EF6D  F004         	movlw	43
  1536  0008C8  0E2B               	subwf	 ((c:_contador)),c,w
  1537  0008CA  5C0D               	movlw	1
  1538  0008CC  0E01               	subwfb	((c:_contador+1)),c,w
  1539  0008CE  580E               	btfss	status,0
  1540  0008D0  A0D8               	goto	u331
  1541  0008D2  EF6D  F004         	goto	u330
  1542  0008D6  EF6F  F004         
  1543                           u331:
  1544  0008DA                     	goto	l1218
  1545  0008DA  EF75  F004         u330:
  1546  0008DE                     	line	53
  1547                           	
  1548                           l1216:
  1549  0008DE                     ;codemon.c: 53:             contador = 0;
  1550                           	movlw	high(0)
  1551  0008DE  0E00               	movwf	((c:_contador+1)),c
  1552  0008E0  6E0E               	movlw	low(0)
  1553  0008E2  0E00               	movwf	((c:_contador)),c
  1554  0008E4  6E0D               	line	54
  1555                           ;codemon.c: 54:         }
  1556                           	goto	l1202
  1557  0008E6  EF42  F004         	line	55
  1558                           ;codemon.c: 55:         else{
  1559                           	
  1560                           l57:
  1561  0008EA                     	line	56
  1562                           	
  1563                           l1218:
  1564  0008EA                     ;codemon.c: 56:             contador++;
  1565                           	infsnz	((c:_contador)),c
  1566  0008EA  4A0D               	incf	((c:_contador+1)),c
  1567  0008EC  2A0E               	line	57
  1568                           	
  1569                           l1220:
  1570  0008EE                     ;codemon.c: 57:             if (contador < 100){
  1571                           	btfsc	((c:_contador+1)),c,7
  1572  0008EE  BE0E               	goto	u340
  1573  0008F0  EF85  F004         	movf	((c:_contador+1)),c,w
  1574  0008F4  500E               	bnz	u341
  1575  0008F6  E107               	movlw	100
  1576  0008F8  0E64               	subwf	 ((c:_contador)),c,w
  1577  0008FA  5C0D               	btfsc	status,0
  1578  0008FC  B0D8               	goto	u341
  1579  0008FE  EF83  F004         	goto	u340
  1580  000902  EF85  F004         
  1581                           u341:
  1582  000906                     	goto	l1228
  1583  000906  EF9C  F004         u340:
  1584  00090A                     	line	58
  1585                           	
  1586                           l1222:
  1587  00090A                     ;codemon.c: 58:                 cta_on = 58633;
  1588                           	movlw	high(0E509h)
  1589  00090A  0EE5               	movwf	((c:_cta_on+1)),c
  1590  00090C  6E04               	movlw	low(0E509h)
  1591  00090E  0E09               	movwf	((c:_cta_on)),c
  1592  000910  6E03               	line	59
  1593                           ;codemon.c: 59:                 cta_off = 12414;
  1594                           	movlw	high(0307Eh)
  1595  000912  0E30               	movwf	((c:_cta_off+1)),c
  1596  000914  6E02               	movlw	low(0307Eh)
  1597  000916  0E7E               	movwf	((c:_cta_off)),c
  1598  000918  6E01               	line	60
  1599                           	
  1600                           l1224:
  1601  00091A                     ;codemon.c: 60:                 POS_CURSOR(2,0);
  1602                           	movlw	low(0)
  1603  00091A  0E00               	movwf	((c:POS_CURSOR@columna)),c
  1604  00091C  6E12               	movlw	(02h)&0ffh
  1605  00091E  0E02               	
  1606                           	call	_POS_CURSOR
  1607  000920  EC40  F006         	line	61
  1608                           	
  1609                           l1226:
  1610  000924                     ;codemon.c: 61:                 ESCRIBE_MENSAJE("Servo Izquierda", 15);
  1611                           		movlw	low(STR_2)
  1612  000924  0E22               	movwf	((c:ESCRIBE_MENSAJE@cadena)),c
  1613  000926  6E12               	movlw	high(STR_2)
  1614  000928  0E08               	movwf	((c:ESCRIBE_MENSAJE@cadena+1)),c
  1615  00092A  6E13               
  1616                           	movlw	low(0Fh)
  1617  00092C  0E0F               	movwf	((c:ESCRIBE_MENSAJE@tam)),c
  1618  00092E  6E14               	call	_ESCRIBE_MENSAJE	;wreg free
  1619  000930  EC19  F006         	line	62
  1620                           ;codemon.c: 62:             }
  1621                           	goto	l1202
  1622  000934  EF42  F004         	line	63
  1623                           ;codemon.c: 63:             else if (contador >= 100 && contador < 200){
  1624                           	
  1625                           l59:
  1626  000938                     	
  1627                           l1228:
  1628  000938                     	btfsc	((c:_contador+1)),c,7
  1629  000938  BE0E               	goto	u351
  1630  00093A  EFA8  F004         	movf	((c:_contador+1)),c,w
  1631  00093E  500E               	bnz	u350
  1632  000940  E109               	movlw	100
  1633  000942  0E64               	subwf	 ((c:_contador)),c,w
  1634  000944  5C0D               	btfss	status,0
  1635  000946  A0D8               	goto	u351
  1636  000948  EFA8  F004         	goto	u350
  1637  00094C  EFAA  F004         
  1638                           u351:
  1639  000950                     	goto	l1238
  1640  000950  EFCF  F004         u350:
  1641  000954                     	
  1642                           l1230:
  1643  000954                     	btfsc	((c:_contador+1)),c,7
  1644  000954  BE0E               	goto	u360
  1645  000956  EFB8  F004         	movf	((c:_contador+1)),c,w
  1646  00095A  500E               	bnz	u361
  1647  00095C  E107               	movlw	200
  1648  00095E  0EC8               	subwf	 ((c:_contador)),c,w
  1649  000960  5C0D               	btfsc	status,0
  1650  000962  B0D8               	goto	u361
  1651  000964  EFB6  F004         	goto	u360
  1652  000968  EFB8  F004         
  1653                           u361:
  1654  00096C                     	goto	l1238
  1655  00096C  EFCF  F004         u360:
  1656  000970                     	line	64
  1657                           	
  1658                           l1232:
  1659  000970                     ;codemon.c: 64:                 cta_on = 61034;
  1660                           	movlw	high(0EE6Ah)
  1661  000970  0EEE               	movwf	((c:_cta_on+1)),c
  1662  000972  6E04               	movlw	low(0EE6Ah)
  1663  000974  0E6A               	movwf	((c:_cta_on)),c
  1664  000976  6E03               	line	65
  1665                           ;codemon.c: 65:                 cta_off = 10013;
  1666                           	movlw	high(0271Dh)
  1667  000978  0E27               	movwf	((c:_cta_off+1)),c
  1668  00097A  6E02               	movlw	low(0271Dh)
  1669  00097C  0E1D               	movwf	((c:_cta_off)),c
  1670  00097E  6E01               	line	66
  1671                           	
  1672                           l1234:
  1673  000980                     ;codemon.c: 66:                 POS_CURSOR(2,0);
  1674                           	movlw	low(0)
  1675  000980  0E00               	movwf	((c:POS_CURSOR@columna)),c
  1676  000982  6E12               	movlw	(02h)&0ffh
  1677  000984  0E02               	
  1678                           	call	_POS_CURSOR
  1679  000986  EC40  F006         	line	67
  1680                           	
  1681                           l1236:
  1682  00098A                     ;codemon.c: 67:                 ESCRIBE_MENSAJE("Servo Centro    ", 15);
  1683                           		movlw	low(STR_3)
  1684  00098A  0E01               	movwf	((c:ESCRIBE_MENSAJE@cadena)),c
  1685  00098C  6E12               	movlw	high(STR_3)
  1686  00098E  0E08               	movwf	((c:ESCRIBE_MENSAJE@cadena+1)),c
  1687  000990  6E13               
  1688                           	movlw	low(0Fh)
  1689  000992  0E0F               	movwf	((c:ESCRIBE_MENSAJE@tam)),c
  1690  000994  6E14               	call	_ESCRIBE_MENSAJE	;wreg free
  1691  000996  EC19  F006         	line	68
  1692                           ;codemon.c: 68:             }
  1693                           	goto	l1202
  1694  00099A  EF42  F004         	line	69
  1695                           ;codemon.c: 69:             else{
  1696                           	
  1697                           l61:
  1698  00099E                     	line	70
  1699                           	
  1700                           l1238:
  1701  00099E                     ;codemon.c: 70:                 cta_on = 63435;
  1702                           	movlw	high(0F7CBh)
  1703  00099E  0EF7               	movwf	((c:_cta_on+1)),c
  1704  0009A0  6E04               	movlw	low(0F7CBh)
  1705  0009A2  0ECB               	movwf	((c:_cta_on)),c
  1706  0009A4  6E03               	line	71
  1707                           ;codemon.c: 71:                 cta_off = 7612;
  1708                           	movlw	high(01DBCh)
  1709  0009A6  0E1D               	movwf	((c:_cta_off+1)),c
  1710  0009A8  6E02               	movlw	low(01DBCh)
  1711  0009AA  0EBC               	movwf	((c:_cta_off)),c
  1712  0009AC  6E01               	line	72
  1713                           	
  1714                           l1240:
  1715  0009AE                     ;codemon.c: 72:                 POS_CURSOR(2,0);
  1716                           	movlw	low(0)
  1717  0009AE  0E00               	movwf	((c:POS_CURSOR@columna)),c
  1718  0009B0  6E12               	movlw	(02h)&0ffh
  1719  0009B2  0E02               	
  1720                           	call	_POS_CURSOR
  1721  0009B4  EC40  F006         	line	73
  1722                           	
  1723                           l1242:
  1724  0009B8                     ;codemon.c: 73:                 ESCRIBE_MENSAJE("Servo Derecha  ", 15);
  1725                           		movlw	low(STR_4)
  1726  0009B8  0E12               	movwf	((c:ESCRIBE_MENSAJE@cadena)),c
  1727  0009BA  6E12               	movlw	high(STR_4)
  1728  0009BC  0E08               	movwf	((c:ESCRIBE_MENSAJE@cadena+1)),c
  1729  0009BE  6E13               
  1730                           	movlw	low(0Fh)
  1731  0009C0  0E0F               	movwf	((c:ESCRIBE_MENSAJE@tam)),c
  1732  0009C2  6E14               	call	_ESCRIBE_MENSAJE	;wreg free
  1733  0009C4  EC19  F006         	goto	l1202
  1734  0009C8  EF42  F004         	line	74
  1735                           ;codemon.c: 74:             }
  1736                           	
  1737                           l62:
  1738  0009CC                     	goto	l1202
  1739  0009CC  EF42  F004         	
  1740                           l60:
  1741  0009D0                     	goto	l1202
  1742  0009D0  EF42  F004         	line	75
  1743                           ;codemon.c: 75:         }
  1744                           	
  1745                           l58:
  1746  0009D4                     	goto	l1202
  1747  0009D4  EF42  F004         	line	76
  1748                           ;codemon.c: 76:     }
  1749                           	
  1750                           l63:
  1751  0009D8                     	goto	l1202
  1752  0009D8  EF42  F004         	
  1753                           l64:
  1754  0009DC                     	line	77
  1755                           	
  1756                           l65:
  1757  0009DC                     	global	start
  1758                           	goto	start
  1759  0009DC  EF07  F000         	opt stack 0
  1760                           GLOBAL	__end_of_main
  1761                           	__end_of_main:
  1762  0009E0                     	signat	_main,89
  1763                           	global	_conviertemon
  1764                           
  1765 ;; *************** function _conviertemon *****************
  1766 ;; Defined at:
  1767 ;;		line 26 in file "codemon.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  contadoron      2    8[COMRAM] int 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1781 ;;      Params:         2       0       0       0       0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1784 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1785 ;;Total ram usage:        2 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    2
  1788 ;; This function calls:
  1789 ;;		___awdiv
  1790 ;;		___wmul
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1796                           	line	26
  1797                           global __ptext1
  1798                           __ptext1:
  1799  000ACC                     psect	text1
  1800                           	file	"codemon.c"
  1801                           	line	26
  1802                           	global	__size_of_conviertemon
  1803                           	__size_of_conviertemon	equ	__end_of_conviertemon-_conviertemon
  1804  0000                     	
  1805                           _conviertemon:
  1806  000ACC                     ;incstack = 0
  1807                           	opt	stack 28
  1808                           	line	27
  1809                           	
  1810                           l1164:
  1811  000ACC                     ;codemon.c: 27:         digcen = contadoron / 100;
  1812                           	movff	(c:conviertemon@contadoron),(c:___awdiv@dividend)
  1813  000ACC  C017  F00F         	movff	(c:conviertemon@contadoron+1),(c:___awdiv@dividend+1)
  1814  000AD0  C018  F010         	movlw	high(064h)
  1815  000AD4  0E00               	movwf	((c:___awdiv@divisor+1)),c
  1816  000AD6  6E12               	movlw	low(064h)
  1817  000AD8  0E64               	movwf	((c:___awdiv@divisor)),c
  1818  000ADA  6E11               	call	___awdiv	;wreg free
  1819  000ADC  ECF0  F004         	movff	0+?___awdiv,(c:_digcen)
  1820  000AE0  C00F  F00B         	movff	1+?___awdiv,(c:_digcen+1)
  1821  000AE4  C010  F00C         	line	28
  1822                           	
  1823                           l1166:
  1824  000AE8                     ;codemon.c: 28:         temporal = contadoron - (digcen * 100);
  1825                           	movff	(c:_digcen),(c:___wmul@multiplier)
  1826  000AE8  C00B  F00F         	movff	(c:_digcen+1),(c:___wmul@multiplier+1)
  1827  000AEC  C00C  F010         	movlw	high(064h)
  1828  000AF0  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  1829  000AF2  6E12               	movlw	low(064h)
  1830  000AF4  0E64               	movwf	((c:___wmul@multiplicand)),c
  1831  000AF6  6E11               	call	___wmul	;wreg free
  1832  000AF8  ECC8  F006         	comf	(0+?___wmul),c
  1833  000AFC  1E0F               	comf	(1+?___wmul),c
  1834  000AFE  1E10               	infsnz	(0+?___wmul),c
  1835  000B00  4A0F               	incf	(1+?___wmul),c
  1836  000B02  2A10               	movf	((c:conviertemon@contadoron)),c,w
  1837  000B04  5017               	addwf	(0+?___wmul),c,w
  1838  000B06  240F               	movwf	((c:_temporal)),c
  1839  000B08  6E05               	movf	((c:conviertemon@contadoron+1)),c,w
  1840  000B0A  5018               	addwfc	(1+?___wmul),c,w
  1841  000B0C  2010               	movwf	1+((c:_temporal)),c
  1842  000B0E  6E06               	line	29
  1843                           	
  1844                           l1168:
  1845  000B10                     ;codemon.c: 29:         digdec = temporal / 10;
  1846                           	movff	(c:_temporal),(c:___awdiv@dividend)
  1847  000B10  C005  F00F         	movff	(c:_temporal+1),(c:___awdiv@dividend+1)
  1848  000B14  C006  F010         	movlw	high(0Ah)
  1849  000B18  0E00               	movwf	((c:___awdiv@divisor+1)),c
  1850  000B1A  6E12               	movlw	low(0Ah)
  1851  000B1C  0E0A               	movwf	((c:___awdiv@divisor)),c
  1852  000B1E  6E11               	call	___awdiv	;wreg free
  1853  000B20  ECF0  F004         	movff	0+?___awdiv,(c:_digdec)
  1854  000B24  C00F  F009         	movff	1+?___awdiv,(c:_digdec+1)
  1855  000B28  C010  F00A         	line	30
  1856                           ;codemon.c: 30:         diguni = temporal - (digdec * 10);
  1857                           	movff	(c:_digdec),(c:___wmul@multiplier)
  1858  000B2C  C009  F00F         	movff	(c:_digdec+1),(c:___wmul@multiplier+1)
  1859  000B30  C00A  F010         	movlw	high(0Ah)
  1860  000B34  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  1861  000B36  6E12               	movlw	low(0Ah)
  1862  000B38  0E0A               	movwf	((c:___wmul@multiplicand)),c
  1863  000B3A  6E11               	call	___wmul	;wreg free
  1864  000B3C  ECC8  F006         	comf	(0+?___wmul),c
  1865  000B40  1E0F               	comf	(1+?___wmul),c
  1866  000B42  1E10               	infsnz	(0+?___wmul),c
  1867  000B44  4A0F               	incf	(1+?___wmul),c
  1868  000B46  2A10               	movf	((c:_temporal)),c,w
  1869  000B48  5005               	addwf	(0+?___wmul),c,w
  1870  000B4A  240F               	movwf	((c:_diguni)),c
  1871  000B4C  6E07               	movf	((c:_temporal+1)),c,w
  1872  000B4E  5006               	addwfc	(1+?___wmul),c,w
  1873  000B50  2010               	movwf	1+((c:_diguni)),c
  1874  000B52  6E08               	line	31
  1875                           	
  1876                           l51:
  1877  000B54                     	return	;funcret
  1878  000B54  0012               	opt stack 0
  1879                           GLOBAL	__end_of_conviertemon
  1880                           	__end_of_conviertemon:
  1881  000B56                     	signat	_conviertemon,4217
  1882                           	global	___wmul
  1883                           
  1884 ;; *************** function ___wmul *****************
  1885 ;; Defined at:
  1886 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  multiplier      2    0[COMRAM] unsigned int 
  1889 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  product         2    4[COMRAM] unsigned int 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  2    0[COMRAM] unsigned int 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, prodl, prodh
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1901 ;;      Params:         4       0       0       0       0       0       0       0       0
  1902 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1904 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1905 ;;Total ram usage:        6 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_conviertemon
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           psect	text2,class=CODE,space=0,reloc=2,group=1
  1915                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1916                           	line	15
  1917                           global __ptext2
  1918                           __ptext2:
  1919  000D90                     psect	text2
  1920                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1921                           	line	15
  1922                           	global	__size_of___wmul
  1923                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  1924  0000                     	
  1925                           ___wmul:
  1926  000D90                     ;incstack = 0
  1927                           	opt	stack 28
  1928                           	line	37
  1929                           	
  1930                           l1114:
  1931  000D90                     	movf	((c:___wmul@multiplier)),c,w
  1932  000D90  500F               	mulwf	((c:___wmul@multiplicand)),c
  1933  000D92  0211               	movff	prodl,(c:___wmul@product)
  1934  000D94  CFF3 F013          	movff	prodh,(c:___wmul@product+1)
  1935  000D98  CFF4 F014          	line	38
  1936                           	movf	((c:___wmul@multiplier)),c,w
  1937  000D9C  500F               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  1938  000D9E  0212               	movf	(prodl),c,w
  1939  000DA0  50F3               	addwf	((c:___wmul@product+1)),c
  1940  000DA2  2614               
  1941                           	line	39
  1942                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  1943  000DA4  5010               	mulwf	((c:___wmul@multiplicand)),c
  1944  000DA6  0211               	movf	(prodl),c,w
  1945  000DA8  50F3               	addwf	((c:___wmul@product+1)),c
  1946  000DAA  2614               
  1947                           	line	52
  1948                           	
  1949                           l1116:
  1950  000DAC                     	movff	(c:___wmul@product),(c:?___wmul)
  1951  000DAC  C013  F00F         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  1952  000DB0  C014  F010         	goto	l149
  1953  000DB4  EFDC  F006         	
  1954                           l1118:
  1955  000DB8                     	line	53
  1956                           	
  1957                           l149:
  1958  000DB8                     	return	;funcret
  1959  000DB8  0012               	opt stack 0
  1960                           GLOBAL	__end_of___wmul
  1961                           	__end_of___wmul:
  1962  000DBA                     	signat	___wmul,8314
  1963                           	global	___awdiv
  1964                           
  1965 ;; *************** function ___awdiv *****************
  1966 ;; Defined at:
  1967 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  dividend        2    0[COMRAM] int 
  1970 ;;  divisor         2    2[COMRAM] int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  quotient        2    6[COMRAM] int 
  1973 ;;  sign            1    5[COMRAM] unsigned char 
  1974 ;;  counter         1    4[COMRAM] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2    0[COMRAM] int 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1984 ;;      Params:         4       0       0       0       0       0       0       0       0
  1985 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1987 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1988 ;;Total ram usage:        8 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_conviertemon
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           psect	text3,class=CODE,space=0,reloc=2,group=1
  1998                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  1999                           	line	7
  2000                           global __ptext3
  2001                           __ptext3:
  2002  0009E0                     psect	text3
  2003                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  2004                           	line	7
  2005                           	global	__size_of___awdiv
  2006                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2007  0000                     	
  2008                           ___awdiv:
  2009  0009E0                     ;incstack = 0
  2010                           	opt	stack 28
  2011                           	line	13
  2012                           	
  2013                           l1120:
  2014  0009E0                     	movlw	low(0)
  2015  0009E0  0E00               	movwf	((c:___awdiv@sign)),c
  2016  0009E2  6E14               	line	14
  2017                           	
  2018                           l1122:
  2019  0009E4                     	btfsc	((c:___awdiv@divisor+1)),c,7
  2020  0009E4  BE12               	goto	u240
  2021  0009E6  EFF9  F004         	goto	u241
  2022  0009EA  EFF7  F004         
  2023                           u241:
  2024  0009EE                     	goto	l1128
  2025  0009EE  EF01  F005         u240:
  2026  0009F2                     	line	15
  2027                           	
  2028                           l1124:
  2029  0009F2                     	negf	((c:___awdiv@divisor)),c
  2030  0009F2  6C11               	comf	((c:___awdiv@divisor+1)),c
  2031  0009F4  1E12               	btfsc	status,0
  2032  0009F6  B0D8               	incf	((c:___awdiv@divisor+1)),c
  2033  0009F8  2A12               	line	16
  2034                           	
  2035                           l1126:
  2036  0009FA                     	movlw	low(01h)
  2037  0009FA  0E01               	movwf	((c:___awdiv@sign)),c
  2038  0009FC  6E14               	goto	l1128
  2039  0009FE  EF01  F005         	line	17
  2040                           	
  2041                           l370:
  2042  000A02                     	line	18
  2043                           	
  2044                           l1128:
  2045  000A02                     	btfsc	((c:___awdiv@dividend+1)),c,7
  2046  000A02  BE10               	goto	u250
  2047  000A04  EF08  F005         	goto	u251
  2048  000A08  EF06  F005         
  2049                           u251:
  2050  000A0C                     	goto	l1134
  2051  000A0C  EF10  F005         u250:
  2052  000A10                     	line	19
  2053                           	
  2054                           l1130:
  2055  000A10                     	negf	((c:___awdiv@dividend)),c
  2056  000A10  6C0F               	comf	((c:___awdiv@dividend+1)),c
  2057  000A12  1E10               	btfsc	status,0
  2058  000A14  B0D8               	incf	((c:___awdiv@dividend+1)),c
  2059  000A16  2A10               	line	20
  2060                           	
  2061                           l1132:
  2062  000A18                     	movlw	(01h)&0ffh
  2063  000A18  0E01               	xorwf	((c:___awdiv@sign)),c
  2064  000A1A  1A14               	goto	l1134
  2065  000A1C  EF10  F005         	line	21
  2066                           	
  2067                           l371:
  2068  000A20                     	line	22
  2069                           	
  2070                           l1134:
  2071  000A20                     	movlw	high(0)
  2072  000A20  0E00               	movwf	((c:___awdiv@quotient+1)),c
  2073  000A22  6E16               	movlw	low(0)
  2074  000A24  0E00               	movwf	((c:___awdiv@quotient)),c
  2075  000A26  6E15               	line	23
  2076                           	
  2077                           l1136:
  2078  000A28                     	movf	((c:___awdiv@divisor)),c,w
  2079  000A28  5011               iorwf	((c:___awdiv@divisor+1)),c,w
  2080  000A2A  1012               	btfsc	status,2
  2081  000A2C  B4D8               	goto	u261
  2082  000A2E  EF1B  F005         	goto	u260
  2083  000A32  EF1D  F005         
  2084                           u261:
  2085  000A36                     	goto	l1156
  2086  000A36  EF51  F005         u260:
  2087  000A3A                     	line	24
  2088                           	
  2089                           l1138:
  2090  000A3A                     	movlw	low(01h)
  2091  000A3A  0E01               	movwf	((c:___awdiv@counter)),c
  2092  000A3C  6E13               	line	25
  2093                           	goto	l1142
  2094  000A3E  EF27  F005         	
  2095                           l374:
  2096  000A42                     	line	26
  2097                           	
  2098                           l1140:
  2099  000A42                     	bcf	status,0
  2100  000A42  90D8               	rlcf	((c:___awdiv@divisor)),c
  2101  000A44  3611               	rlcf	((c:___awdiv@divisor+1)),c
  2102  000A46  3612               	line	27
  2103                           	incf	((c:___awdiv@counter)),c
  2104  000A48  2A13               	goto	l1142
  2105  000A4A  EF27  F005         	line	28
  2106                           	
  2107                           l373:
  2108  000A4E                     	line	25
  2109                           	
  2110                           l1142:
  2111  000A4E                     	
  2112                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  2113  000A4E  AE12               	goto	u271
  2114  000A50  EF2C  F005         	goto	u270
  2115  000A54  EF2E  F005         u271:
  2116  000A58                     	goto	l1140
  2117  000A58  EF21  F005         u270:
  2118  000A5C                     	goto	l1144
  2119  000A5C  EF32  F005         	
  2120                           l375:
  2121  000A60                     	goto	l1144
  2122  000A60  EF32  F005         	line	29
  2123                           	
  2124                           l376:
  2125  000A64                     	line	30
  2126                           	
  2127                           l1144:
  2128  000A64                     	bcf	status,0
  2129  000A64  90D8               	rlcf	((c:___awdiv@quotient)),c
  2130  000A66  3615               	rlcf	((c:___awdiv@quotient+1)),c
  2131  000A68  3616               	line	31
  2132                           	
  2133                           l1146:
  2134  000A6A                     		movf	((c:___awdiv@divisor)),c,w
  2135  000A6A  5011               	subwf	((c:___awdiv@dividend)),c,w
  2136  000A6C  5C0F               	movf	((c:___awdiv@divisor+1)),c,w
  2137  000A6E  5012               	subwfb	((c:___awdiv@dividend+1)),c,w
  2138  000A70  5810               	btfss	status,0
  2139  000A72  A0D8               	goto	u281
  2140  000A74  EF3E  F005         	goto	u280
  2141  000A78  EF40  F005         
  2142                           u281:
  2143  000A7C                     	goto	l1152
  2144  000A7C  EF47  F005         u280:
  2145  000A80                     	line	32
  2146                           	
  2147                           l1148:
  2148  000A80                     	movf	((c:___awdiv@divisor)),c,w
  2149  000A80  5011               	subwf	((c:___awdiv@dividend)),c
  2150  000A82  5E0F               	movf	((c:___awdiv@divisor+1)),c,w
  2151  000A84  5012               	subwfb	((c:___awdiv@dividend+1)),c
  2152  000A86  5A10               
  2153                           	line	33
  2154                           	
  2155                           l1150:
  2156  000A88                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  2157  000A88  8015               	goto	l1152
  2158  000A8A  EF47  F005         	line	34
  2159                           	
  2160                           l377:
  2161  000A8E                     	line	35
  2162                           	
  2163                           l1152:
  2164  000A8E                     	bcf	status,0
  2165  000A8E  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  2166  000A90  3212               	rrcf	((c:___awdiv@divisor)),c
  2167  000A92  3211               	line	36
  2168                           	
  2169                           l1154:
  2170  000A94                     	decfsz	((c:___awdiv@counter)),c
  2171  000A94  2E13               	
  2172                           	goto	l1144
  2173  000A96  EF32  F005         	goto	l1156
  2174  000A9A  EF51  F005         	
  2175                           l378:
  2176  000A9E                     	goto	l1156
  2177  000A9E  EF51  F005         	line	37
  2178                           	
  2179                           l372:
  2180  000AA2                     	line	38
  2181                           	
  2182                           l1156:
  2183  000AA2                     	movf	((c:___awdiv@sign)),c,w
  2184  000AA2  5014               	btfsc	status,2
  2185  000AA4  B4D8               	goto	u291
  2186  000AA6  EF57  F005         	goto	u290
  2187  000AAA  EF59  F005         u291:
  2188  000AAE                     	goto	l1160
  2189  000AAE  EF5F  F005         u290:
  2190  000AB2                     	line	39
  2191                           	
  2192                           l1158:
  2193  000AB2                     	negf	((c:___awdiv@quotient)),c
  2194  000AB2  6C15               	comf	((c:___awdiv@quotient+1)),c
  2195  000AB4  1E16               	btfsc	status,0
  2196  000AB6  B0D8               	incf	((c:___awdiv@quotient+1)),c
  2197  000AB8  2A16               	goto	l1160
  2198  000ABA  EF5F  F005         	
  2199                           l379:
  2200  000ABE                     	line	40
  2201                           	
  2202                           l1160:
  2203  000ABE                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  2204  000ABE  C015  F00F         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  2205  000AC2  C016  F010         	goto	l380
  2206  000AC6  EF65  F005         	
  2207                           l1162:
  2208  000ACA                     	line	41
  2209                           	
  2210                           l380:
  2211  000ACA                     	return	;funcret
  2212  000ACA  0012               	opt stack 0
  2213                           GLOBAL	__end_of___awdiv
  2214                           	__end_of___awdiv:
  2215  000ACC                     	signat	___awdiv,8314
  2216                           	global	_POS_CURSOR
  2217                           
  2218 ;; *************** function _POS_CURSOR *****************
  2219 ;; Defined at:
  2220 ;;		line 6 in file "LCD.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  fila            1    wreg     unsigned char 
  2223 ;;  columna         1    3[COMRAM] unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  fila            1    4[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2235 ;;      Params:         1       0       0       0       0       0       0       0       0
  2236 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2238 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    3
  2242 ;; This function calls:
  2243 ;;		_ENVIA_LCD_CMD
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           psect	text4,class=CODE,space=0,reloc=2,group=0
  2249                           	file	"LCD.c"
  2250                           	line	6
  2251                           global __ptext4
  2252                           __ptext4:
  2253  000C80                     psect	text4
  2254                           	file	"LCD.c"
  2255                           	line	6
  2256                           	global	__size_of_POS_CURSOR
  2257                           	__size_of_POS_CURSOR	equ	__end_of_POS_CURSOR-_POS_CURSOR
  2258  0000                     	
  2259                           _POS_CURSOR:
  2260  000C80                     ;incstack = 0
  2261                           	opt	stack 27
  2262                           ;POS_CURSOR@fila stored from wreg
  2263                           	movwf	((c:POS_CURSOR@fila)),c
  2264  000C80  6E13               	line	8
  2265                           	
  2266                           l1178:
  2267  000C82                     ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
                                 8:  if(fila == 1)
  2268                           		decf	((c:POS_CURSOR@fila)),c,w
  2269  000C82  0413               	btfss	status,2
  2270  000C84  A4D8               	goto	u311
  2271  000C86  EF47  F006         	goto	u310
  2272  000C8A  EF49  F006         
  2273                           u311:
  2274  000C8E                     	goto	l1182
  2275  000C8E  EF4F  F006         u310:
  2276  000C92                     	line	10
  2277                           	
  2278                           l1180:
  2279  000C92                     ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2280                           	movf	((c:POS_CURSOR@columna)),c,w
  2281  000C92  5012               	addlw	low(080h)
  2282  000C94  0F80               	
  2283                           	call	_ENVIA_LCD_CMD
  2284  000C96  EC97  F006         	line	11
  2285                           ;LCD.c: 11:  }
  2286                           	goto	l96
  2287  000C9A  EF60  F006         	line	12
  2288                           ;LCD.c: 12:  else if(fila == 2)
  2289                           	
  2290                           l93:
  2291  000C9E                     	
  2292                           l1182:
  2293  000C9E                     		movlw	2
  2294  000C9E  0E02               	xorwf	((c:POS_CURSOR@fila)),c,w
  2295  000CA0  1813               	btfss	status,2
  2296  000CA2  A4D8               	goto	u321
  2297  000CA4  EF56  F006         	goto	u320
  2298  000CA8  EF58  F006         
  2299                           u321:
  2300  000CAC                     	goto	l96
  2301  000CAC  EF60  F006         u320:
  2302  000CB0                     	line	14
  2303                           	
  2304                           l1184:
  2305  000CB0                     ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2306                           	movf	((c:POS_CURSOR@columna)),c,w
  2307  000CB0  5012               	addlw	low(0C0h)
  2308  000CB2  0FC0               	
  2309                           	call	_ENVIA_LCD_CMD
  2310  000CB4  EC97  F006         	goto	l96
  2311  000CB8  EF60  F006         	line	15
  2312                           ;LCD.c: 15:  }
  2313                           	
  2314                           l95:
  2315  000CBC                     	goto	l96
  2316  000CBC  EF60  F006         	
  2317                           l94:
  2318  000CC0                     	line	16
  2319                           	
  2320                           l96:
  2321  000CC0                     	return	;funcret
  2322  000CC0  0012               	opt stack 0
  2323                           GLOBAL	__end_of_POS_CURSOR
  2324                           	__end_of_POS_CURSOR:
  2325  000CC2                     	signat	_POS_CURSOR,8313
  2326                           	global	_LCD_CONFIG
  2327                           
  2328 ;; *************** function _LCD_CONFIG *****************
  2329 ;; Defined at:
  2330 ;;		line 72 in file "LCD.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2346 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2347 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2348 ;;Total ram usage:        1 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    3
  2351 ;; This function calls:
  2352 ;;		_ENVIA_LCD_CMD
  2353 ;;		_ENVIA_NIBBLE
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2359                           	line	72
  2360                           global __ptext5
  2361                           __ptext5:
  2362  000BD2                     psect	text5
  2363                           	file	"LCD.c"
  2364                           	line	72
  2365                           	global	__size_of_LCD_CONFIG
  2366                           	__size_of_LCD_CONFIG	equ	__end_of_LCD_CONFIG-_LCD_CONFIG
  2367  0000                     	
  2368                           _LCD_CONFIG:
  2369  000BD2                     ;incstack = 0
  2370                           	opt	stack 27
  2371                           	line	74
  2372                           	
  2373                           l968:
  2374  000BD2                     ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2375                           	bcf	((c:3980)),c,0	;volatile
  2376  000BD2  908C               	line	75
  2377                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2378                           	bcf	((c:3980)),c,1	;volatile
  2379  000BD4  928C               	line	76
  2380                           	
  2381                           l970:
  2382  000BD6                     ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2383                           	movlw	(030h)&0ffh
  2384  000BD6  0E30               	
  2385                           	call	_ENVIA_NIBBLE
  2386  000BD8  ECEC  F006         	line	77
  2387                           	
  2388                           l972:
  2389  000BDC                     ;LCD.c: 77:         _delay(24000);
  2390                           	opt asmopt_push
  2391                           opt asmopt_off
  2392                           movlw	32
  2393  000BDC  0E20               movwf	(??_LCD_CONFIG+0+0)&0ffh,c,f
  2394  000BDE  6E12               	movlw	42
  2395  000BE0  0E2A               u397:
  2396  000BE2                     decfsz	wreg,f
  2397  000BE2  2EE8               	bra	u397
  2398  000BE4  D7FE               	decfsz	(??_LCD_CONFIG+0+0)&0ffh,c,f
  2399  000BE6  2E12               	bra	u397
  2400  000BE8  D7FC               opt asmopt_pop
  2401                           
  2402                           	line	78
  2403                           	
  2404                           l974:
  2405  000BEA                     ;LCD.c: 78:         _delay(24000);
  2406                           	opt asmopt_push
  2407                           opt asmopt_off
  2408                           movlw	32
  2409  000BEA  0E20               movwf	(??_LCD_CONFIG+0+0)&0ffh,c,f
  2410  000BEC  6E12               	movlw	42
  2411  000BEE  0E2A               u407:
  2412  000BF0                     decfsz	wreg,f
  2413  000BF0  2EE8               	bra	u407
  2414  000BF2  D7FE               	decfsz	(??_LCD_CONFIG+0+0)&0ffh,c,f
  2415  000BF4  2E12               	bra	u407
  2416  000BF6  D7FC               opt asmopt_pop
  2417                           
  2418                           	line	81
  2419                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2420                           	movlw	(030h)&0ffh
  2421  000BF8  0E30               	
  2422                           	call	_ENVIA_NIBBLE
  2423  000BFA  ECEC  F006         	line	83
  2424                           	
  2425                           l976:
  2426  000BFE                     ;LCD.c: 83:  _delay(1200);
  2427                           	opt asmopt_push
  2428                           opt asmopt_off
  2429                           	movlw	240
  2430  000BFE  0EF0               u417:
  2431  000C00                     	nop2
  2432  000C00  D000               decfsz	wreg,f
  2433  000C02  2EE8               	bra	u417
  2434  000C04  D7FD               opt asmopt_pop
  2435                           
  2436                           	line	84
  2437                           	
  2438                           l978:
  2439  000C06                     ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2440                           	movlw	(030h)&0ffh
  2441  000C06  0E30               	
  2442                           	call	_ENVIA_NIBBLE
  2443  000C08  ECEC  F006         	line	85
  2444                           	
  2445                           l980:
  2446  000C0C                     ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2447                           	movlw	(020h)&0ffh
  2448  000C0C  0E20               	
  2449                           	call	_ENVIA_NIBBLE
  2450  000C0E  ECEC  F006         	line	86
  2451                           	
  2452                           l982:
  2453  000C12                     ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2454                           	movlw	(01h)&0ffh
  2455  000C12  0E01               	
  2456                           	call	_ENVIA_LCD_CMD
  2457  000C14  EC97  F006         	line	87
  2458                           	
  2459                           l984:
  2460  000C18                     ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2461                           	movlw	(028h)&0ffh
  2462  000C18  0E28               	
  2463                           	call	_ENVIA_LCD_CMD
  2464  000C1A  EC97  F006         	line	88
  2465                           	
  2466                           l986:
  2467  000C1E                     ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2468                           	movlw	(0Fh)&0ffh
  2469  000C1E  0E0F               	
  2470                           	call	_ENVIA_LCD_CMD
  2471  000C20  EC97  F006         	line	89
  2472                           	
  2473                           l988:
  2474  000C24                     ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2475                           	movlw	(06h)&0ffh
  2476  000C24  0E06               	
  2477                           	call	_ENVIA_LCD_CMD
  2478  000C26  EC97  F006         	line	90
  2479                           	
  2480                           l990:
  2481  000C2A                     ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2482                           	movlw	(01h)&0ffh
  2483  000C2A  0E01               	
  2484                           	call	_ENVIA_LCD_CMD
  2485  000C2C  EC97  F006         	line	91
  2486                           	
  2487                           l129:
  2488  000C30                     	return	;funcret
  2489  000C30  0012               	opt stack 0
  2490                           GLOBAL	__end_of_LCD_CONFIG
  2491                           	__end_of_LCD_CONFIG:
  2492  000C32                     	signat	_LCD_CONFIG,89
  2493                           	global	_ESCRIBE_MENSAJE
  2494                           
  2495 ;; *************** function _ESCRIBE_MENSAJE *****************
  2496 ;; Defined at:
  2497 ;;		line 41 in file "LCD.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2500 ;;		 -> STR_4(16), STR_3(17), STR_2(16), STR_1(8), 
  2501 ;;  tam             1    5[COMRAM] unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  i               1    8[COMRAM] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2513 ;;      Params:         3       0       0       0       0       0       0       0       0
  2514 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2515 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2516 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2517 ;;Total ram usage:        6 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    3
  2520 ;; This function calls:
  2521 ;;		_ENVIA_CHAR
  2522 ;; This function is called by:
  2523 ;;		_main
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2527                           	line	41
  2528                           global __ptext6
  2529                           __ptext6:
  2530  000C32                     psect	text6
  2531                           	file	"LCD.c"
  2532                           	line	41
  2533                           	global	__size_of_ESCRIBE_MENSAJE
  2534                           	__size_of_ESCRIBE_MENSAJE	equ	__end_of_ESCRIBE_MENSAJE-_ESCRIBE_MENSAJE
  2535  0000                     	
  2536                           _ESCRIBE_MENSAJE:
  2537  000C32                     ;incstack = 0
  2538                           	opt	stack 27
  2539                           	line	43
  2540                           	
  2541                           l1170:
  2542  000C32                     ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
                                 c: 43:  unsigned char i = 0;
  2543                           	movlw	low(0)
  2544  000C32  0E00               	movwf	((c:ESCRIBE_MENSAJE@i)),c
  2545  000C34  6E17               	line	44
  2546                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2547                           	movlw	low(0)
  2548  000C36  0E00               	movwf	((c:ESCRIBE_MENSAJE@i)),c
  2549  000C38  6E17               	goto	l1176
  2550  000C3A  EF34  F006         	
  2551                           l118:
  2552  000C3E                     	line	46
  2553                           	
  2554                           l1172:
  2555  000C3E                     ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2556                           	movf	((c:ESCRIBE_MENSAJE@i)),c,w
  2557  000C3E  5017               	mullw	01h
  2558  000C40  0D01               	movff	(c:ESCRIBE_MENSAJE@cadena),??_ESCRIBE_MENSAJE+0+0
  2559  000C42  C012  F015         	movff	(c:ESCRIBE_MENSAJE@cadena+1),??_ESCRIBE_MENSAJE+0+0+1
  2560  000C46  C013  F016         	movf	(prodl),c,w
  2561  000C4A  50F3               	addwf	(??_ESCRIBE_MENSAJE+0+0),c
  2562  000C4C  2615               	movf	(prodh),c,w
  2563  000C4E  50F4               	addwfc	(??_ESCRIBE_MENSAJE+0+1),c
  2564  000C50  2216               	movff	??_ESCRIBE_MENSAJE+0+0,tblptrl
  2565  000C52  C015  FFF6         	movff	??_ESCRIBE_MENSAJE+0+1,tblptrh
  2566  000C56  C016  FFF7         	if	0	;tblptru may be non-zero
  2567  000C5A                     	clrf	tblptru
  2569  000C5A                     	if	0	;tblptru may be non-zero
  2570  000C5A                     	global __mediumconst
  2571                           movlw	low highword(__mediumconst)
  2574  000C5A                     	tblrd	*
  2575  000C5A  0008               	
  2576                           	movf	tablat,w
  2577  000C5C  50F5               	
  2578                           	call	_ENVIA_CHAR
  2579  000C5E  EC7D  F006         	line	47
  2580                           	
  2581                           l1174:
  2582  000C62                     ;LCD.c: 47:  }
  2583                           	incf	((c:ESCRIBE_MENSAJE@i)),c
  2584  000C62  2A17               	goto	l1176
  2585  000C64  EF34  F006         	
  2586                           l117:
  2587  000C68                     	
  2588                           l1176:
  2589  000C68                     		movf	((c:ESCRIBE_MENSAJE@tam)),c,w
  2590  000C68  5014               	subwf	((c:ESCRIBE_MENSAJE@i)),c,w
  2591  000C6A  5C17               	btfss	status,0
  2592  000C6C  A0D8               	goto	u301
  2593  000C6E  EF3B  F006         	goto	u300
  2594  000C72  EF3D  F006         
  2595                           u301:
  2596  000C76                     	goto	l1172
  2597  000C76  EF1F  F006         u300:
  2598  000C7A                     	goto	l120
  2599  000C7A  EF3F  F006         	
  2600                           l119:
  2601  000C7E                     	line	48
  2602                           	
  2603                           l120:
  2604  000C7E                     	return	;funcret
  2605  000C7E  0012               	opt stack 0
  2606                           GLOBAL	__end_of_ESCRIBE_MENSAJE
  2607                           	__end_of_ESCRIBE_MENSAJE:
  2608  000C80                     	signat	_ESCRIBE_MENSAJE,8313
  2609                           	global	_ENVIA_CHAR
  2610                           
  2611 ;; *************** function _ENVIA_CHAR *****************
  2612 ;; Defined at:
  2613 ;;		line 50 in file "LCD.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  dato            1    wreg     unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  dato            1    1[COMRAM] unsigned char 
  2618 ;;  aux             1    2[COMRAM] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0
  2629 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2631 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    2
  2635 ;; This function calls:
  2636 ;;		_ENVIA_NIBBLE
  2637 ;;		_LEER_LCD
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;;		_ESCRIBE_MENSAJE
  2641 ;;		_GENERACARACTER
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2645                           	line	50
  2646                           global __ptext7
  2647                           __ptext7:
  2648  000CFA                     psect	text7
  2649                           	file	"LCD.c"
  2650                           	line	50
  2651                           	global	__size_of_ENVIA_CHAR
  2652                           	__size_of_ENVIA_CHAR	equ	__end_of_ENVIA_CHAR-_ENVIA_CHAR
  2653  0000                     	
  2654                           _ENVIA_CHAR:
  2655  000CFA                     ;incstack = 0
  2656                           	opt	stack 27
  2657                           ;ENVIA_CHAR@dato stored from wreg
  2658                           	movwf	((c:ENVIA_CHAR@dato)),c
  2659  000CFA  6E10               	line	53
  2660                           	
  2661                           l868:
  2662  000CFC                     ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
                                 ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2663                           	bsf	((c:3980)),c,0	;volatile
  2664  000CFC  808C               	line	54
  2665                           	
  2666                           l870:
  2667  000CFE                     ;LCD.c: 54:  LEER_LCD();
  2668                           	call	_LEER_LCD	;wreg free
  2669  000CFE  ECAB  F005         	line	55
  2670                           	
  2671                           l872:
  2672  000D02                     ;LCD.c: 55:  TRISD = 0x00;
  2673                           	movlw	low(0)
  2674  000D02  0E00               	movwf	((c:3989)),c	;volatile
  2675  000D04  6E95               	line	56
  2676                           	
  2677                           l874:
  2678  000D06                     ;LCD.c: 56:         _delay(1200);
  2679                           	opt asmopt_push
  2680                           opt asmopt_off
  2681                           	movlw	240
  2682  000D06  0EF0               u427:
  2683  000D08                     	nop2
  2684  000D08  D000               decfsz	wreg,f
  2685  000D0A  2EE8               	bra	u427
  2686  000D0C  D7FD               opt asmopt_pop
  2687                           
  2688                           	line	58
  2689                           	
  2690                           l876:
  2691  000D0E                     ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2692                           	bcf	((c:3980)),c,1	;volatile
  2693  000D0E  928C               	line	59
  2694                           	
  2695                           l878:
  2696  000D10                     ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2697                           	bcf	((c:3980)),c,2	;volatile
  2698  000D10  948C               	line	60
  2699                           	
  2700                           l880:
  2701  000D12                     ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2702                           	bsf	((c:3980)),c,0	;volatile
  2703  000D12  808C               	line	61
  2704                           	
  2705                           l882:
  2706  000D14                     ;LCD.c: 61:  aux = dato & 0xF0;
  2707                           	movf	((c:ENVIA_CHAR@dato)),c,w
  2708  000D14  5010               	andlw	low(0F0h)
  2709  000D16  0BF0               	movwf	((c:ENVIA_CHAR@aux)),c
  2710  000D18  6E11               	line	62
  2711                           	
  2712                           l884:
  2713  000D1A                     ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2714                           	movf	((c:ENVIA_CHAR@aux)),c,w
  2715  000D1A  5011               	
  2716                           	call	_ENVIA_NIBBLE
  2717  000D1C  ECEC  F006         	line	63
  2718                           	
  2719                           l886:
  2720  000D20                     ;LCD.c: 63:  aux = dato << 4;
  2721                           	swapf	((c:ENVIA_CHAR@dato)),c,w
  2722  000D20  3810               	andlw	(0ffh shl 4) & 0ffh
  2723  000D22  0BF0               	movwf	((c:ENVIA_CHAR@aux)),c
  2724  000D24  6E11               	line	64
  2725                           	
  2726                           l888:
  2727  000D26                     ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2728                           	movf	((c:ENVIA_CHAR@aux)),c,w
  2729  000D26  5011               	
  2730                           	call	_ENVIA_NIBBLE
  2731  000D28  ECEC  F006         	line	65
  2732                           	
  2733                           l123:
  2734  000D2C                     	return	;funcret
  2735  000D2C  0012               	opt stack 0
  2736                           GLOBAL	__end_of_ENVIA_CHAR
  2737                           	__end_of_ENVIA_CHAR:
  2738  000D2E                     	signat	_ENVIA_CHAR,4217
  2739                           	global	_CURSOR_ONOFF
  2740                           
  2741 ;; *************** function _CURSOR_ONOFF *****************
  2742 ;; Defined at:
  2743 ;;		line 35 in file "LCD.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  estado          1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  estado          1    3[COMRAM] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2757 ;;      Params:         0       0       0       0       0       0       0       0       0
  2758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2761 ;;Total ram usage:        1 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    3
  2764 ;; This function calls:
  2765 ;;		_ENVIA_LCD_CMD
  2766 ;; This function is called by:
  2767 ;;		_main
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2771                           	line	35
  2772                           global __ptext8
  2773                           __ptext8:
  2774  000CC2                     psect	text8
  2775                           	file	"LCD.c"
  2776                           	line	35
  2777                           	global	__size_of_CURSOR_ONOFF
  2778                           	__size_of_CURSOR_ONOFF	equ	__end_of_CURSOR_ONOFF-_CURSOR_ONOFF
  2779  0000                     	
  2780                           _CURSOR_ONOFF:
  2781  000CC2                     ;incstack = 0
  2782                           	opt	stack 27
  2783                           ;CURSOR_ONOFF@estado stored from wreg
  2784                           	movwf	((c:CURSOR_ONOFF@estado)),c
  2785  000CC2  6E12               	line	37
  2786                           	
  2787                           l994:
  2788  000CC4                     ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
                                 = 0) ENVIA_LCD_CMD(0x0E);
  2789                           	movf	((c:CURSOR_ONOFF@estado)),c,w
  2790  000CC4  5012               	btfss	status,2
  2791  000CC6  A4D8               	goto	u81
  2792  000CC8  EF68  F006         	goto	u80
  2793  000CCC  EF6A  F006         u81:
  2794  000CD0                     	goto	l998
  2795  000CD0  EF6F  F006         u80:
  2796  000CD4                     	
  2797                           l996:
  2798  000CD4                     	movlw	(0Eh)&0ffh
  2799  000CD4  0E0E               	
  2800                           	call	_ENVIA_LCD_CMD
  2801  000CD6  EC97  F006         	goto	l998
  2802  000CDA  EF6F  F006         	
  2803                           l112:
  2804  000CDE                     	line	38
  2805                           	
  2806                           l998:
  2807  000CDE                     ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2808                           		decf	((c:CURSOR_ONOFF@estado)),c,w
  2809  000CDE  0412               	btfss	status,2
  2810  000CE0  A4D8               	goto	u91
  2811  000CE2  EF75  F006         	goto	u90
  2812  000CE6  EF77  F006         
  2813                           u91:
  2814  000CEA                     	goto	l114
  2815  000CEA  EF7C  F006         u90:
  2816  000CEE                     	
  2817                           l1000:
  2818  000CEE                     	movlw	(0Ch)&0ffh
  2819  000CEE  0E0C               	
  2820                           	call	_ENVIA_LCD_CMD
  2821  000CF0  EC97  F006         	goto	l114
  2822  000CF4  EF7C  F006         	
  2823                           l113:
  2824  000CF8                     	line	39
  2825                           	
  2826                           l114:
  2827  000CF8                     	return	;funcret
  2828  000CF8  0012               	opt stack 0
  2829                           GLOBAL	__end_of_CURSOR_ONOFF
  2830                           	__end_of_CURSOR_ONOFF:
  2831  000CFA                     	signat	_CURSOR_ONOFF,4217
  2832                           	global	_CURSOR_HOME
  2833                           
  2834 ;; *************** function _CURSOR_HOME *****************
  2835 ;; Defined at:
  2836 ;;		line 30 in file "LCD.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2850 ;;      Params:         0       0       0       0       0       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2853 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2854 ;;Total ram usage:        0 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    3
  2857 ;; This function calls:
  2858 ;;		_ENVIA_LCD_CMD
  2859 ;; This function is called by:
  2860 ;;		_main
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           psect	text9,class=CODE,space=0,reloc=2,group=0
  2864                           	line	30
  2865                           global __ptext9
  2866                           __ptext9:
  2867  000DF4                     psect	text9
  2868                           	file	"LCD.c"
  2869                           	line	30
  2870                           	global	__size_of_CURSOR_HOME
  2871                           	__size_of_CURSOR_HOME	equ	__end_of_CURSOR_HOME-_CURSOR_HOME
  2872  0000                     	
  2873                           _CURSOR_HOME:
  2874  000DF4                     ;incstack = 0
  2875                           	opt	stack 27
  2876                           	line	32
  2877                           	
  2878                           l1002:
  2879  000DF4                     ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2880                           	movlw	(02h)&0ffh
  2881  000DF4  0E02               	
  2882                           	call	_ENVIA_LCD_CMD
  2883  000DF6  EC97  F006         	line	33
  2884                           	
  2885                           l109:
  2886  000DFA                     	return	;funcret
  2887  000DFA  0012               	opt stack 0
  2888                           GLOBAL	__end_of_CURSOR_HOME
  2889                           	__end_of_CURSOR_HOME:
  2890  000DFC                     	signat	_CURSOR_HOME,89
  2891                           	global	_BORRAR_LCD
  2892                           
  2893 ;; *************** function _BORRAR_LCD *****************
  2894 ;; Defined at:
  2895 ;;		line 67 in file "LCD.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    3
  2916 ;; This function calls:
  2917 ;;		_ENVIA_LCD_CMD
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           psect	text10,class=CODE,space=0,reloc=2,group=0
  2923                           	line	67
  2924                           global __ptext10
  2925                           __ptext10:
  2926  000DFC                     psect	text10
  2927                           	file	"LCD.c"
  2928                           	line	67
  2929                           	global	__size_of_BORRAR_LCD
  2930                           	__size_of_BORRAR_LCD	equ	__end_of_BORRAR_LCD-_BORRAR_LCD
  2931  0000                     	
  2932                           _BORRAR_LCD:
  2933  000DFC                     ;incstack = 0
  2934                           	opt	stack 27
  2935                           	line	69
  2936                           	
  2937                           l992:
  2938  000DFC                     ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2939                           	movlw	(01h)&0ffh
  2940  000DFC  0E01               	
  2941                           	call	_ENVIA_LCD_CMD
  2942  000DFE  EC97  F006         	line	70
  2943                           	
  2944                           l126:
  2945  000E02                     	return	;funcret
  2946  000E02  0012               	opt stack 0
  2947                           GLOBAL	__end_of_BORRAR_LCD
  2948                           	__end_of_BORRAR_LCD:
  2949  000E04                     	signat	_BORRAR_LCD,89
  2950                           	global	_ENVIA_LCD_CMD
  2951                           
  2952 ;; *************** function _ENVIA_LCD_CMD *****************
  2953 ;; Defined at:
  2954 ;;		line 104 in file "LCD.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  dato            1    wreg     unsigned char 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  dato            1    1[COMRAM] unsigned char 
  2959 ;;  aux             1    2[COMRAM] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0
  2970 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2972 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:        2 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    2
  2976 ;; This function calls:
  2977 ;;		_ENVIA_NIBBLE
  2978 ;;		_LEER_LCD
  2979 ;; This function is called by:
  2980 ;;		_POS_CURSOR
  2981 ;;		_CURSOR_HOME
  2982 ;;		_CURSOR_ONOFF
  2983 ;;		_BORRAR_LCD
  2984 ;;		_LCD_CONFIG
  2985 ;;		_BLINK_CURSOR
  2986 ;;		_DISPLAY_ONOFF
  2987 ;;		_GENERACARACTER
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2991                           	line	104
  2992                           global __ptext11
  2993                           __ptext11:
  2994  000D2E                     psect	text11
  2995                           	file	"LCD.c"
  2996                           	line	104
  2997                           	global	__size_of_ENVIA_LCD_CMD
  2998                           	__size_of_ENVIA_LCD_CMD	equ	__end_of_ENVIA_LCD_CMD-_ENVIA_LCD_CMD
  2999  0000                     	
  3000                           _ENVIA_LCD_CMD:
  3001  000D2E                     ;incstack = 0
  3002                           	opt	stack 27
  3003                           ;ENVIA_LCD_CMD@dato stored from wreg
  3004                           	movwf	((c:ENVIA_LCD_CMD@dato)),c
  3005  000D2E  6E10               	line	107
  3006                           	
  3007                           l890:
  3008  000D30                     ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
                                 char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3009                           	bcf	((c:3980)),c,0	;volatile
  3010  000D30  908C               	line	108
  3011                           	
  3012                           l892:
  3013  000D32                     ;LCD.c: 108:  LEER_LCD();
  3014                           	call	_LEER_LCD	;wreg free
  3015  000D32  ECAB  F005         	line	109
  3016                           	
  3017                           l894:
  3018  000D36                     ;LCD.c: 109:  TRISD = 0b00000000;
  3019                           	movlw	low(0)
  3020  000D36  0E00               	movwf	((c:3989)),c	;volatile
  3021  000D38  6E95               	line	111
  3022                           	
  3023                           l896:
  3024  000D3A                     ;LCD.c: 111:         _delay(1200);
  3025                           	opt asmopt_push
  3026                           opt asmopt_off
  3027                           	movlw	240
  3028  000D3A  0EF0               u437:
  3029  000D3C                     	nop2
  3030  000D3C  D000               decfsz	wreg,f
  3031  000D3E  2EE8               	bra	u437
  3032  000D40  D7FD               opt asmopt_pop
  3033                           
  3034                           	line	112
  3035                           	
  3036                           l898:
  3037  000D42                     ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3038                           	bcf	((c:3980)),c,1	;volatile
  3039  000D42  928C               	line	113
  3040                           	
  3041                           l900:
  3042  000D44                     ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3043                           	bcf	((c:3980)),c,2	;volatile
  3044  000D44  948C               	line	114
  3045                           	
  3046                           l902:
  3047  000D46                     ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3048                           	bcf	((c:3980)),c,0	;volatile
  3049  000D46  908C               	line	115
  3050                           	
  3051                           l904:
  3052  000D48                     ;LCD.c: 115:  aux = dato & 0xF0;
  3053                           	movf	((c:ENVIA_LCD_CMD@dato)),c,w
  3054  000D48  5010               	andlw	low(0F0h)
  3055  000D4A  0BF0               	movwf	((c:ENVIA_LCD_CMD@aux)),c
  3056  000D4C  6E11               	line	116
  3057                           	
  3058                           l906:
  3059  000D4E                     ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3060                           	movf	((c:ENVIA_LCD_CMD@aux)),c,w
  3061  000D4E  5011               	
  3062                           	call	_ENVIA_NIBBLE
  3063  000D50  ECEC  F006         	line	117
  3064                           	
  3065                           l908:
  3066  000D54                     ;LCD.c: 117:  aux = dato<<4;
  3067                           	swapf	((c:ENVIA_LCD_CMD@dato)),c,w
  3068  000D54  3810               	andlw	(0ffh shl 4) & 0ffh
  3069  000D56  0BF0               	movwf	((c:ENVIA_LCD_CMD@aux)),c
  3070  000D58  6E11               	line	118
  3071                           	
  3072                           l910:
  3073  000D5A                     ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3074                           	movf	((c:ENVIA_LCD_CMD@aux)),c,w
  3075  000D5A  5011               	
  3076                           	call	_ENVIA_NIBBLE
  3077  000D5C  ECEC  F006         	line	119
  3078                           	
  3079                           l135:
  3080  000D60                     	return	;funcret
  3081  000D60  0012               	opt stack 0
  3082                           GLOBAL	__end_of_ENVIA_LCD_CMD
  3083                           	__end_of_ENVIA_LCD_CMD:
  3084  000D62                     	signat	_ENVIA_LCD_CMD,4217
  3085                           	global	_LEER_LCD
  3086                           
  3087 ;; *************** function _LEER_LCD *****************
  3088 ;; Defined at:
  3089 ;;		line 121 in file "LCD.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  aux             1    0[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        1 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_ENVIA_CHAR
  3114 ;;		_ENVIA_LCD_CMD
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           psect	text12,class=CODE,space=0,reloc=2,group=0
  3118                           	line	121
  3119                           global __ptext12
  3120                           __ptext12:
  3121  000B56                     psect	text12
  3122                           	file	"LCD.c"
  3123                           	line	121
  3124                           	global	__size_of_LEER_LCD
  3125                           	__size_of_LEER_LCD	equ	__end_of_LEER_LCD-_LEER_LCD
  3126  0000                     	
  3127                           _LEER_LCD:
  3128  000B56                     ;incstack = 0
  3129                           	opt	stack 27
  3130                           	line	124
  3131                           	
  3132                           l822:
  3133  000B56                     ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3134                           	movlw	low(0F8h)
  3135  000B56  0EF8               	movwf	((c:3989)),c	;volatile
  3136  000B58  6E95               	line	125
  3137                           	
  3138                           l824:
  3139  000B5A                     ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3140                           	bcf	((c:3980)),c,0	;volatile
  3141  000B5A  908C               	line	126
  3142                           	
  3143                           l826:
  3144  000B5C                     ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3145                           	bsf	((c:3980)),c,1	;volatile
  3146  000B5C  828C               	line	127
  3147                           	
  3148                           l828:
  3149  000B5E                     ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3150                           	bsf	((c:3980)),c,2	;volatile
  3151  000B5E  848C               	line	128
  3152                           	
  3153                           l830:
  3154  000B60                     ;LCD.c: 128:         _delay(1200);
  3155                           	opt asmopt_push
  3156                           opt asmopt_off
  3157                           	movlw	240
  3158  000B60  0EF0               u447:
  3159  000B62                     	nop2
  3160  000B62  D000               decfsz	wreg,f
  3161  000B64  2EE8               	bra	u447
  3162  000B66  D7FD               opt asmopt_pop
  3163                           
  3164                           	line	130
  3165                           	
  3166                           l832:
  3167  000B68                     ;LCD.c: 130:  aux = PORTD;
  3168                           	movff	(c:3971),(c:LEER_LCD@aux)	;volatile
  3169  000B68  CF83 F00F          	line	131
  3170                           	
  3171                           l834:
  3172  000B6C                     ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3173                           	bcf	((c:3980)),c,2	;volatile
  3174  000B6C  948C               	line	132
  3175                           	
  3176                           l836:
  3177  000B6E                     ;LCD.c: 132:         _delay(1200);
  3178                           	opt asmopt_push
  3179                           opt asmopt_off
  3180                           	movlw	240
  3181  000B6E  0EF0               u457:
  3182  000B70                     	nop2
  3183  000B70  D000               decfsz	wreg,f
  3184  000B72  2EE8               	bra	u457
  3185  000B74  D7FD               opt asmopt_pop
  3186                           
  3187                           	line	134
  3188                           	
  3189                           l838:
  3190  000B76                     ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3191                           	bsf	((c:3980)),c,2	;volatile
  3192  000B76  848C               	line	135
  3193                           	
  3194                           l840:
  3195  000B78                     ;LCD.c: 135:         _delay(1200);
  3196                           	opt asmopt_push
  3197                           opt asmopt_off
  3198                           	movlw	240
  3199  000B78  0EF0               u467:
  3200  000B7A                     	nop2
  3201  000B7A  D000               decfsz	wreg,f
  3202  000B7C  2EE8               	bra	u467
  3203  000B7E  D7FD               opt asmopt_pop
  3204                           
  3205                           	line	137
  3206                           	
  3207                           l842:
  3208  000B80                     ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3209                           	bcf	((c:3980)),c,2	;volatile
  3210  000B80  948C               	line	138
  3211                           	
  3212                           l844:
  3213  000B82                     ;LCD.c: 138:  aux = aux & 0x80;
  3214                           	movf	((c:LEER_LCD@aux)),c,w
  3215  000B82  500F               	andlw	low(080h)
  3216  000B84  0B80               	movwf	((c:LEER_LCD@aux)),c
  3217  000B86  6E0F               	line	139
  3218                           ;LCD.c: 139:  while(aux == 0x80)
  3219                           	goto	l858
  3220  000B88  EFDD  F005         	
  3221                           l139:
  3222  000B8C                     	line	141
  3223                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3224                           	bsf	((c:3980)),c,2	;volatile
  3225  000B8C  848C               	line	142
  3226                           	
  3227                           l846:
  3228  000B8E                     ;LCD.c: 142:             _delay(1200);
  3229                           	opt asmopt_push
  3230                           opt asmopt_off
  3231                           	movlw	240
  3232  000B8E  0EF0               u477:
  3233  000B90                     	nop2
  3234  000B90  D000               decfsz	wreg,f
  3235  000B92  2EE8               	bra	u477
  3236  000B94  D7FD               opt asmopt_pop
  3237                           
  3238                           	line	143
  3239                           	
  3240                           l848:
  3241  000B96                     ;LCD.c: 143:             aux = PORTD;
  3242                           	movff	(c:3971),(c:LEER_LCD@aux)	;volatile
  3243  000B96  CF83 F00F          	line	144
  3244                           	
  3245                           l850:
  3246  000B9A                     ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3247                           	bcf	((c:3980)),c,2	;volatile
  3248  000B9A  948C               	line	145
  3249                           ;LCD.c: 145:             _delay(1200);
  3250                           	opt asmopt_push
  3251                           opt asmopt_off
  3252                           	movlw	240
  3253  000B9C  0EF0               u487:
  3254  000B9E                     	nop2
  3255  000B9E  D000               decfsz	wreg,f
  3256  000BA0  2EE8               	bra	u487
  3257  000BA2  D7FD               opt asmopt_pop
  3258                           
  3259                           	line	146
  3260                           	
  3261                           l852:
  3262  000BA4                     ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3263                           	bsf	((c:3980)),c,2	;volatile
  3264  000BA4  848C               	line	147
  3265                           ;LCD.c: 147:             _delay(1200);
  3266                           	opt asmopt_push
  3267                           opt asmopt_off
  3268                           	movlw	240
  3269  000BA6  0EF0               u497:
  3270  000BA8                     	nop2
  3271  000BA8  D000               decfsz	wreg,f
  3272  000BAA  2EE8               	bra	u497
  3273  000BAC  D7FD               opt asmopt_pop
  3274                           
  3275                           	line	148
  3276                           	
  3277                           l854:
  3278  000BAE                     ;LCD.c: 148:             LATDbits.LATD2 = 0;
  3279                           	bcf	((c:3980)),c,2	;volatile
  3280  000BAE  948C               	line	149
  3281                           	
  3282                           l856:
  3283  000BB0                     ;LCD.c: 149:             aux = aux & 0x80;
  3284                           	movf	((c:LEER_LCD@aux)),c,w
  3285  000BB0  500F               	andlw	low(080h)
  3286  000BB2  0B80               	movwf	((c:LEER_LCD@aux)),c
  3287  000BB4  6E0F               	goto	l858
  3288  000BB6  EFDD  F005         	line	150
  3289                           ;LCD.c: 150:  }
  3290                           	
  3291                           l138:
  3292  000BBA                     	line	139
  3293                           	
  3294                           l858:
  3295  000BBA                     ;LCD.c: 139:  while(aux == 0x80)
  3296                           		movlw	128
  3297  000BBA  0E80               	xorwf	((c:LEER_LCD@aux)),c,w
  3298  000BBC  180F               	btfsc	status,2
  3299  000BBE  B4D8               	goto	u11
  3300  000BC0  EFE4  F005         	goto	u10
  3301  000BC4  EFE6  F005         
  3302                           u11:
  3303  000BC8                     	goto	l139
  3304  000BC8  EFC6  F005         u10:
  3305  000BCC                     	goto	l141
  3306  000BCC  EFE8  F005         	
  3307                           l140:
  3308  000BD0                     	line	151
  3309                           	
  3310                           l141:
  3311  000BD0                     	return	;funcret
  3312  000BD0  0012               	opt stack 0
  3313                           GLOBAL	__end_of_LEER_LCD
  3314                           	__end_of_LEER_LCD:
  3315  000BD2                     	signat	_LEER_LCD,89
  3316                           	global	_ENVIA_NIBBLE
  3317                           
  3318 ;; *************** function _ENVIA_NIBBLE *****************
  3319 ;; Defined at:
  3320 ;;		line 93 in file "LCD.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  dato            1    wreg     unsigned char 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  dato            1    0[COMRAM] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0
  3335 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3337 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3338 ;;Total ram usage:        1 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    1
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_ENVIA_CHAR
  3345 ;;		_LCD_CONFIG
  3346 ;;		_ENVIA_LCD_CMD
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           psect	text13,class=CODE,space=0,reloc=2,group=0
  3350                           	line	93
  3351                           global __ptext13
  3352                           __ptext13:
  3353  000DD8                     psect	text13
  3354                           	file	"LCD.c"
  3355                           	line	93
  3356                           	global	__size_of_ENVIA_NIBBLE
  3357                           	__size_of_ENVIA_NIBBLE	equ	__end_of_ENVIA_NIBBLE-_ENVIA_NIBBLE
  3358  0000                     	
  3359                           _ENVIA_NIBBLE:
  3360  000DD8                     ;incstack = 0
  3361                           	opt	stack 27
  3362                           ;ENVIA_NIBBLE@dato stored from wreg
  3363                           	movwf	((c:ENVIA_NIBBLE@dato)),c
  3364  000DD8  6E0F               	line	95
  3365                           	
  3366                           l860:
  3367  000DDA                     ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
                                 
  3368                           	movlw	(0Fh)&0ffh
  3369  000DDA  0E0F               	andwf	((c:3980)),c	;volatile
  3370  000DDC  168C               	line	96
  3371                           ;LCD.c: 96:  dato &= 0xF0;
  3372                           	movlw	(0F0h)&0ffh
  3373  000DDE  0EF0               	andwf	((c:ENVIA_NIBBLE@dato)),c
  3374  000DE0  160F               	line	97
  3375                           ;LCD.c: 97:  LATD|= dato;
  3376                           	movf	((c:ENVIA_NIBBLE@dato)),c,w	;volatile
  3377  000DE2  500F               	iorwf	((c:3980)),c	;volatile
  3378  000DE4  128C               	line	98
  3379                           	
  3380                           l862:
  3381  000DE6                     ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3382                           	bsf	((c:3980)),c,2	;volatile
  3383  000DE6  848C               	line	100
  3384                           	
  3385                           l864:
  3386  000DE8                     ;LCD.c: 100:         _delay(1200);
  3387                           	opt asmopt_push
  3388                           opt asmopt_off
  3389                           	movlw	240
  3390  000DE8  0EF0               u507:
  3391  000DEA                     	nop2
  3392  000DEA  D000               decfsz	wreg,f
  3393  000DEC  2EE8               	bra	u507
  3394  000DEE  D7FD               opt asmopt_pop
  3395                           
  3396                           	line	101
  3397                           	
  3398                           l866:
  3399  000DF0                     ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3400                           	bcf	((c:3980)),c,2	;volatile
  3401  000DF0  948C               	line	102
  3402                           	
  3403                           l132:
  3404  000DF2                     	return	;funcret
  3405  000DF2  0012               	opt stack 0
  3406                           GLOBAL	__end_of_ENVIA_NIBBLE
  3407                           	__end_of_ENVIA_NIBBLE:
  3408  000DF4                     	signat	_ENVIA_NIBBLE,4217
  3409                           	global	_Tmr0ISR
  3410                           
  3411 ;; *************** function _Tmr0ISR *****************
  3412 ;; Defined at:
  3413 ;;		line 79 in file "codemon.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		None
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3427 ;;      Params:         0       0       0       0       0       0       0       0       0
  3428 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3430 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		Interrupt level 2
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           psect	intcode,class=CODE,space=0,reloc=2
  3440                           global __pintcode
  3441                           __pintcode:
  3442  000008                     psect	intcode
  3443                           	file	"codemon.c"
  3444                           	line	79
  3445                           	global	__size_of_Tmr0ISR
  3446                           	__size_of_Tmr0ISR	equ	__end_of_Tmr0ISR-_Tmr0ISR
  3447  0000                     	
  3448                           _Tmr0ISR:
  3449  000008                     ;incstack = 0
  3450                           	opt	stack 27
  3451                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  3452  000008  821A               	global	int_func
  3453                           	call	int_func,f	;refresh shadow registers
  3454  00000A  EDB1  F006         psect	intcode_body,class=CODE,space=0,reloc=2
  3455                           global __pintcode_body
  3456                           __pintcode_body:
  3457  000D62                     int_func:
  3458  000D62                     
  3459                           	pop	; remove dummy address from shadow register refresh
  3460  000D62  0006               	line	80
  3461                           	
  3462                           i2l1078:
  3463  000D64                     ;codemon.c: 80:     if (PORTEbits.RE0 == 1){
  3464                           	btfss	((c:3972)),c,0	;volatile
  3465  000D64  A084               	goto	i2u17_41
  3466  000D66  EFB7  F006         	goto	i2u17_40
  3467  000D6A  EFB9  F006         i2u17_41:
  3468  000D6E                     	goto	i2l70
  3469  000D6E  EFC0  F006         i2u17_40:
  3470  000D72                     	line	81
  3471                           	
  3472                           i2l1080:
  3473  000D72                     ;codemon.c: 81:         LATEbits.LE0 = 0;
  3474                           	bcf	((c:3981)),c,0	;volatile
  3475  000D72  908D               	line	82
  3476                           ;codemon.c: 82:         TMR0 = cta_on;
  3477                           	movff	(c:_cta_on),(c:4054)	;volatile
  3478  000D74  C003  FFD6         	movff	(c:_cta_on+1),(c:4054+1)	;volatile
  3479  000D78  C004  FFD7         	line	83
  3480                           ;codemon.c: 83:     }
  3481                           	goto	i2l71
  3482  000D7C  EFC5  F006         	line	84
  3483                           ;codemon.c: 84:     else{
  3484                           	
  3485                           i2l70:
  3486  000D80                     	line	85
  3487                           ;codemon.c: 85:         LATEbits.LE0 = 1;
  3488                           	bsf	((c:3981)),c,0	;volatile
  3489  000D80  808D               	line	86
  3490                           ;codemon.c: 86:         TMR0 = cta_off;
  3491                           	movff	(c:_cta_off),(c:4054)	;volatile
  3492  000D82  C001  FFD6         	movff	(c:_cta_off+1),(c:4054+1)	;volatile
  3493  000D86  C002  FFD7         	line	87
  3494                           ;codemon.c: 87:     }
  3495                           	
  3496                           i2l71:
  3497  000D8A                     	line	88
  3498                           ;codemon.c: 88:     INTCONbits.TMR0IF = 0;
  3499                           	bcf	((c:4082)),c,2	;volatile
  3500  000D8A  94F2               	line	89
  3501                           	
  3502                           i2l72:
  3503  000D8C                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  3504  000D8C  921A               	retfie f
  3505  000D8E  0011               	opt stack 0
  3506                           GLOBAL	__end_of_Tmr0ISR
  3507                           	__end_of_Tmr0ISR:
  3508  000D90                     	signat	_Tmr0ISR,89
  3509                           psect	smallconst
  3510                           	db 0	; dummy byte at the end
  3511  00083A  00                 	global	__smallconst
  3512                           	global	__mediumconst
  3513                           	GLOBAL	__activetblptr
  3514                           __activetblptr	EQU	1
  3515  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  3516                           	PSECT	rparam,class=COMRAM,space=1,noexec
  3517                           	GLOBAL	__Lrparam
  3518                           	FNCONF	rparam,??,?
  3519                           	GLOBAL	___rparam_used
  3520                           	___rparam_used EQU 1
  3521  0000                     	GLOBAL	___param_bank
  3522                           	___param_bank EQU 0
  3523  0000                     GLOBAL	__Lparam, __Hparam
  3524                           GLOBAL	__Lrparam, __Hrparam
  3525                           __Lparam	EQU	__Lrparam
  3526  0000                     __Hparam	EQU	__Hrparam
  3527  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  3528                           	global	btemp
  3529                           btemp:
  3530  00001A                     	ds	1
  3531  00001A                     	global	int$flags
  3532                           	int$flags	set btemp
  3533  0000                     	global	wtemp8
  3534                           	wtemp8 set btemp+1
  3535  0000                     	global	ttemp5
  3536                           	ttemp5 set btemp+1
  3537  0000                     	global	ttemp6
  3538                           	ttemp6 set btemp+4
  3539  0000                     	global	ttemp7
  3540                           	ttemp7 set btemp+8
  3541  0000                     	end


Data Sizes:
    Strings     57
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[16]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_conviertemon
    _conviertemon->___awdiv
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _Tmr0ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Tmr0ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tmr0ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tmr0ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tmr0ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tmr0ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Tmr0ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Tmr0ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Tmr0ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3163
                                             10 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _LCD_CONFIG
                         _POS_CURSOR
                       _conviertemon
 ---------------------------------------------------------------------------------
 (1) _conviertemon                                         2     0      2    1187
                                              8 COMRAM     2     0      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     819
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Tmr0ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_HOME
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_ONOFF
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_CONFIG
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _conviertemon
     ___awdiv
     ___wmul

 _Tmr0ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B      19       1       26.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      20        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Oct 26 09:54:15 2018

                      l51 0B54                        l60 09D0                        l61 099E  
                      l62 09CC                        l63 09D8                        l64 09DC  
                      l56 0884                        l65 09DC                        l57 08EA  
                      l58 09D4                        l59 0938                        l93 0C9E  
                      l94 0CC0                        l95 0CBC                        l96 0CC0  
                      u10 0BCC                        u11 0BC8                        u80 0CD4  
                      u81 0CD0                        u90 0CEE                        u91 0CEA  
            ___awdiv@sign 0014       ___wmul@multiplicand 0011        __CFG_FOSC$XTPLL_XT 000000  
           ENVIA_CHAR@aux 0011                       l112 0CDE                       l120 0C7E  
                     l113 0CF8                       l114 0CF8                       l123 0D2C  
                     l132 0DF2                       l140 0BD0                       l141 0BD0  
                     l109 0DFA                       l117 0C68                       l126 0E02  
                     l118 0C3E                       l135 0D60                       l119 0C7E  
                     l129 0C30                       l138 0BBA                       l139 0B8C  
                     l149 0DB8                       l370 0A02                       l371 0A20  
                     l380 0ACA                       l372 0AA2                       l373 0A4E  
                     l374 0A42                       l375 0A60                       l376 0A64  
                     l377 0A8E                       l378 0A9E                       l379 0ABE  
                     l900 0D44                       l830 0B60                       l822 0B56  
                     l910 0D5A                       l902 0D46                       l840 0B78  
                     l832 0B68                       l824 0B5A                       l904 0D48  
                     l850 0B9A                       l842 0B80                       l834 0B6C  
                     l826 0B5C                       l906 0D4E                       l860 0DDA  
                     l852 0BA4                       l844 0B82                       l836 0B6E  
                     l828 0B5E                       l908 0D54                       l862 0DE6  
                     l854 0BAE                       l846 0B8E                       l838 0B76  
                     l870 0CFE                       l864 0DE8                       l856 0BB0  
                     l848 0B96                       l880 0D12                       l872 0D02  
                     l866 0DF0                       l858 0BBA                       l890 0D30  
                     l882 0D14                       l874 0D06                       l970 0BD6  
                     l892 0D32                       l884 0D1A                       l876 0D0E  
                     l868 0CFC                       l980 0C0C                       l972 0BDC  
                     l894 0D36                       l886 0D20                       l878 0D10  
                     l990 0C2A                       l982 0C12                       l974 0BEA  
                     l896 0D3A                       l992 0DFC                       l888 0D26  
                     l984 0C18                       l976 0BFE                       l968 0BD2  
                     l898 0D42                       l994 0CC4                       l986 0C1E  
                     l978 0C06                       l996 0CD4                       l988 0C24  
                     l998 0CDE                       u300 0C7A                       u301 0C76  
                     u310 0C92                       u311 0C8E                       u320 0CB0  
                     u240 09F2                       u321 0CAC                       u241 09EE  
                     u250 0A10                       u330 08DE                       u251 0A0C  
                     u331 08DA                       u260 0A3A                       u340 090A  
                     u261 0A36                       u341 0906                       u270 0A5C  
                     u350 0954                       u407 0BF0                       u271 0A58  
                     u351 0950                       u280 0A80                       u360 0970  
                     u417 0C00                       u281 0A7C                       u361 096C  
                     u290 0AB2                       u507 0DEA                       u427 0D08  
                     u291 0AAE                       u437 0D3C                       u447 0B62  
                     u457 0B70                       u377 0858                       u467 0B7A  
                     u387 08B8                       u477 0B90                       u397 0BE2  
                     u487 0B9E                       u497 0BA8              __CFG_BOR$OFF 000000  
             LEER_LCD@aux 000F                       wreg 000FE8              ?_CURSOR_HOME 000F  
          ??_ENVIA_NIBBLE 000F              __CFG_LVP$OFF 000000            ENVIA_CHAR@dato 0010  
            __CFG_WDT$OFF 000000                      l1000 0CEE                      l1002 0DF4  
                    l1120 09E0                      l1200 0870                      l1130 0A10  
                    l1122 09E4                      l1114 0D90                      l1210 08AA  
                    l1202 0884                      l1140 0A42                      l1132 0A18  
                    l1124 09F2                      l1116 0DAC                      l1220 08EE  
                    l1212 08B2                      l1204 0890                      l1150 0A88  
                    l1142 0A4E                      l1134 0A20                      l1126 09FA  
                    l1118 0DB8                      l1230 0954                      l1222 090A  
                    l1214 08C2                      l1206 089A                      l1160 0ABE  
                    l1152 0A8E                      l1144 0A64                      l1136 0A28  
                    l1128 0A02                      l1240 09AE                      l1232 0970  
                    l1224 091A                      l1216 08DE                      l1208 08A2  
                    l1170 0C32                      l1162 0ACA                      l1154 0A94  
                    l1146 0A6A                      l1138 0A3A                      l1242 09B8  
                    l1234 0980                      l1226 0924                      l1218 08EA  
                    l1172 0C3E                      l1180 0C92                      l1148 0A80  
                    l1156 0AA2                      l1164 0ACC                      l1236 098A  
                    l1228 0938                      l1174 0C62                      l1182 0C9E  
                    l1158 0AB2                      l1166 0AE8                      l1238 099E  
                    l1190 084E                      l1176 0C68                      l1184 0CB0  
                    l1168 0B10                      l1192 0852                      l1178 0C82  
                    l1194 0862                      l1186 083C                      l1196 0866  
                    l1188 0840                      l1198 086C                      STR_1 0832  
                    STR_2 0822                      STR_3 0801                      STR_4 0812  
                    _LATD 000F8C                      i2l70 0D80                      i2l71 0D8A  
                    i2l72 0D8C                      _TMR0 000FD6              __CFG_PWRT$ON 000000  
                    _main 083C                      btemp 001A                      prodh 000FF4  
                    prodl 000FF3                      start 000E             ?_CURSOR_ONOFF 000F  
           __CFG_MCLRE$ON 000000              ___param_bank 000000           ??_ENVIA_LCD_CMD 0010  
           ?_conviertemon 0017           __end_of_Tmr0ISR 0D90          __end_of_LEER_LCD 0BD2  
     __size_of_BORRAR_LCD 0008             __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000  
                   ?_main 000F           __end_of___awdiv 0ACC                     _T0CON 000FD5  
         ___awdiv@divisor 0011           ___awdiv@counter 0013                     _PORTD 000F83  
     __size_of_LCD_CONFIG 0060                     _TRISD 000F95       __size_of_ENVIA_CHAR 0034  
             ?_POS_CURSOR 0012                     tablat 000FF5                     ttemp5 001B  
                   ttemp6 001E                     ttemp7 0022                     status 000FD8  
                   wtemp8 001B            ??_CURSOR_ONOFF 0012    conviertemon@contadoron 0017  
         __initialization 0DBA            ??_conviertemon 0019              __end_of_main 09E0  
         _ESCRIBE_MENSAJE 0C32                    ??_main 0019             __activetblptr 000001  
                  _ADCON1 000FC1          ___awdiv@dividend 000F                    i2l1080 0D72  
                  i2l1078 0D64                    _INTCON 000FF2                 ??_Tmr0ISR 000F  
                  ___wmul 0D90                 ??___awdiv 0013      __end_of_ENVIA_NIBBLE 0DF4  
                  _digdec 0009                    _digcen 000B                    _diguni 0007  
                  _cta_on 0003       __size_of_POS_CURSOR 0042                    clear_0 0DC0  
        ___awdiv@quotient 0015              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0012  
    __size_of_CURSOR_HOME 0008                 ?_LEER_LCD 000F                __accesstop 0060  
 __end_of__initialization 0DC6           __CFG_PBADEN$OFF 000000              ??_LCD_CONFIG 0012  
           ___rparam_used 000001              ??_ENVIA_CHAR 0010   __end_of_ESCRIBE_MENSAJE 0C80  
          __pcstackCOMRAM 000F        __end_of_BORRAR_LCD 0E04          ENVIA_LCD_CMD@aux 0011  
    __end_of_CURSOR_ONOFF 0CFA        __end_of_LCD_CONFIG 0C32        __end_of_ENVIA_CHAR 0D2E  
    __end_of_conviertemon 0B56                ??_LEER_LCD 000F          ENVIA_NIBBLE@dato 000F  
                 ?___wmul 000F                   i2u17_40 0D72                   i2u17_41 0D6E  
            ??_POS_CURSOR 0013     __size_of_ENVIA_NIBBLE 001C                   _Tmr0ISR 0008  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0012  
                 ___awdiv 09E0           __size_of___wmul 002A              __psmallconst 0800  
   __end_of_ENVIA_LCD_CMD 0D62                   __pcinit 0DBA        __end_of_POS_CURSOR 0CC2  
                 __ramtop 0800                   __ptext0 083C                   __ptext1 0ACC  
                 __ptext2 0D90                   __ptext3 09E0                   __ptext4 0C80  
                 __ptext5 0BD2                   __ptext6 0C32                   __ptext7 0CFA  
                 __ptext8 0CC2                   __ptext9 0DF4                   _cta_off 0001  
          __pintcode_body 0D62              _ENVIA_NIBBLE 0DD8      end_of_initialization 0DC6  
                 int_func 0D62                   postinc0 000FEE     __size_of_CURSOR_ONOFF 0038  
               _PORTEbits 000F84     __size_of_conviertemon 008A                 _TRISEbits 000F96  
       __size_of_LEER_LCD 007C              _CURSOR_ONOFF 0CC2        CURSOR_ONOFF@estado 0012  
            _conviertemon 0ACC            __end_of___wmul 0DBA             ??_CURSOR_HOME 0012  
     start_initialization 0DBA         ENVIA_LCD_CMD@dato 0010                  ??___wmul 0013  
             __pbssCOMRAM 0001       __end_of_CURSOR_HOME 0DFC                  ?_Tmr0ISR 000F  
               __pintcode 0008                  ?___awdiv 000F               __smallconst 0800  
                _LEER_LCD 0B56            ___wmul@product 0013                  _LATDbits 000F8C  
                _LATEbits 000F8D          ESCRIBE_MENSAJE@i 0017            POS_CURSOR@fila 0013  
__size_of_ESCRIBE_MENSAJE 004E         ___wmul@multiplier 000F               _CURSOR_HOME 0DF4  
  __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000          __size_of_Tmr0ISR 0D88  
                __Lrparam 0000              __Lsmallconst 0800          __size_of___awdiv 00EC  
                __ptext10 0DFC                  __ptext11 0D2E                  __ptext12 0B56  
                __ptext13 0DD8                _BORRAR_LCD 0DFC                  _contador 000D  
           __size_of_main 01A4                _LCD_CONFIG 0BD2                _ENVIA_CHAR 0CFA  
                _temporal 0005                  int$flags 001A             _ENVIA_LCD_CMD 0D2E  
   __CFG_CPUDIV$OSC1_PLL2 000000                _INTCONbits 000FF2         ??_ESCRIBE_MENSAJE 0015  
                intlevel2 0000     ESCRIBE_MENSAJE@cadena 0012            ?_ENVIA_LCD_CMD 000F  
             ?_BORRAR_LCD 000F             ?_ENVIA_NIBBLE 000F                _POS_CURSOR 0C80  
             ?_LCD_CONFIG 000F        ESCRIBE_MENSAJE@tam 0014               ?_ENVIA_CHAR 000F  
       POS_CURSOR@columna 0012  
