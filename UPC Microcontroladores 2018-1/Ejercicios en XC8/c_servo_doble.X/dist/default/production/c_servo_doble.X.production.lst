

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 24 13:23:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _PORTD	set	3971
    59  0000                     _LATD	set	3980
    60  0000                     _LATDbits	set	3980
    61  0000                     _LATBbits	set	3978
    62  0000                     _TRISD	set	3989
    63  0000                     _LATB	set	3978
    64  0000                     _TRISB	set	3987
    65                           
    66                           	psect	smallconst
    67  000800                     __psmallconst:
    68                           	opt stack 0
    69  000800  00                 	db	0
    70  000801                     STR_3:
    71  000801  53                 	db	83	;'S'
    72  000802  65                 	db	101	;'e'
    73  000803  72                 	db	114	;'r'
    74  000804  76                 	db	118	;'v'
    75  000805  6F                 	db	111	;'o'
    76  000806  20                 	db	32
    77  000807  31                 	db	49	;'1'
    78  000808  3A                 	db	58	;':'
    79  000809  20                 	db	32
    80  00080A  39                 	db	57	;'9'
    81  00080B  30                 	db	48	;'0'
    82  00080C  20                 	db	32
    83  00080D  6C                 	db	108	;'l'
    84  00080E  65                 	db	101	;'e'
    85  00080F  66                 	db	102	;'f'
    86  000810  74                 	db	116	;'t'
    87  000811  20                 	db	32
    88  000812  00                 	db	0
    89  000813                     STR_2:
    90  000813  53                 	db	83	;'S'
    91  000814  65                 	db	101	;'e'
    92  000815  72                 	db	114	;'r'
    93  000816  76                 	db	118	;'v'
    94  000817  6F                 	db	111	;'o'
    95  000818  20                 	db	32
    96  000819  32                 	db	50	;'2'
    97  00081A  3A                 	db	58	;':'
    98  00081B  20                 	db	32
    99  00081C  39                 	db	57	;'9'
   100  00081D  30                 	db	48	;'0'
   101  00081E  20                 	db	32
   102  00081F  6C                 	db	108	;'l'
   103  000820  65                 	db	101	;'e'
   104  000821  66                 	db	102	;'f'
   105  000822  74                 	db	116	;'t'
   106  000823  20                 	db	32
   107  000824  00                 	db	0
   108  000825                     STR_1:
   109  000825  53                 	db	83	;'S'
   110  000826  65                 	db	101	;'e'
   111  000827  72                 	db	114	;'r'
   112  000828  76                 	db	118	;'v'
   113  000829  6F                 	db	111	;'o'
   114  00082A  20                 	db	32
   115  00082B  31                 	db	49	;'1'
   116  00082C  3A                 	db	58	;':'
   117  00082D  20                 	db	32
   118  00082E  34                 	db	52	;'4'
   119  00082F  35                 	db	53	;'5'
   120  000830  20                 	db	32
   121  000831  72                 	db	114	;'r'
   122  000832  69                 	db	105	;'i'
   123  000833  67                 	db	103	;'g'
   124  000834  68                 	db	104	;'h'
   125  000835  74                 	db	116	;'t'
   126  000836  00                 	db	0
   127  000837                     STR_4:
   128  000837  53                 	db	83	;'S'
   129  000838  65                 	db	101	;'e'
   130  000839  72                 	db	114	;'r'
   131  00083A  76                 	db	118	;'v'
   132  00083B  6F                 	db	111	;'o'
   133  00083C  20                 	db	32
   134  00083D  32                 	db	50	;'2'
   135  00083E  3A                 	db	58	;':'
   136  00083F  20                 	db	32
   137  000840  34                 	db	52	;'4'
   138  000841  35                 	db	53	;'5'
   139  000842  20                 	db	32
   140  000843  72                 	db	114	;'r'
   141  000844  69                 	db	105	;'i'
   142  000845  67                 	db	103	;'g'
   143  000846  68                 	db	104	;'h'
   144  000847  74                 	db	116	;'t'
   145  000848  00                 	db	0
   146                           
   147                           ; #config settings
   148  000849  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           	psect	cinit
   151  000B4A                     __pcinit:
   152                           	opt stack 0
   153  000B4A                     start_initialization:
   154                           	opt stack 0
   155  000B4A                     __initialization:
   156                           	opt stack 0
   157  000B4A                     end_of_initialization:
   158                           	opt stack 0
   159  000B4A                     __end_of__initialization:
   160                           	opt stack 0
   161  000B4A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   162  000B4C  6EF8               	movwf	tblptru,c
   163  000B4E  0E08               	movlw	high __Lsmallconst
   164  000B50  6EF7               	movwf	tblptrh,c
   165  000B52  0100               	movlb	0
   166  000B54  EF5E  F005         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           
   170                           	psect	cstackCOMRAM
   171  000001                     __pcstackCOMRAM:
   172                           	opt stack 0
   173  000001                     ENVIA_NIBBLE@dato:
   174                           	opt stack 0
   175  000001                     LEER_LCD@aux:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x0
   179  000001                     	ds	1
   180  000002                     ENVIA_CHAR@dato:
   181                           	opt stack 0
   182  000002                     ENVIA_LCD_CMD@dato:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x1
   186  000002                     	ds	1
   187  000003                     ENVIA_CHAR@aux:
   188                           	opt stack 0
   189  000003                     ENVIA_LCD_CMD@aux:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x2
   193  000003                     	ds	1
   194  000004                     ??_LCD_CONFIG:
   195  000004                     POS_CURSOR@columna:
   196                           	opt stack 0
   197  000004                     CURSOR_ONOFF@estado:
   198                           	opt stack 0
   199  000004                     ESCRIBE_MENSAJE@cadena:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x3
   203  000004                     	ds	1
   204  000005                     POS_CURSOR@fila:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x4
   208  000005                     	ds	1
   209  000006                     ESCRIBE_MENSAJE@tam:
   210                           	opt stack 0
   211                           
   212                           ; 1 bytes @ 0x5
   213  000006                     	ds	1
   214  000007                     ??_ESCRIBE_MENSAJE:
   215                           
   216                           ; 1 bytes @ 0x6
   217  000007                     	ds	2
   218  000009                     ESCRIBE_MENSAJE@i:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x8
   222  000009                     	ds	1
   223  00000A                     ??_movimiento1:
   224  00000A                     ??_movimiento2:
   225                           
   226                           ; 1 bytes @ 0x9
   227  00000A                     	ds	1
   228  00000B                     movimiento1@i:
   229                           	opt stack 0
   230  00000B                     movimiento2@i:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0xA
   234  00000B                     	ds	2
   235  00000D                     ??_main:
   236                           
   237                           ; 1 bytes @ 0xC
   238  00000D                     	ds	1
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 18 in file "newmain.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   261 ;;      Params:         0       0       0       0       0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0       0       0       0       0
   263 ;;      Temps:          1       0       0       0       0       0       0       0       0
   264 ;;      Totals:         1       0       0       0       0       0       0       0       0
   265 ;;Total ram usage:        1 bytes
   266 ;; Hardware stack levels required when called:    4
   267 ;; This function calls:
   268 ;;		_BORRAR_LCD
   269 ;;		_CURSOR_ONOFF
   270 ;;		_LCD_CONFIG
   271 ;;		_movimiento1
   272 ;;		_movimiento2
   273 ;; This function is called by:
   274 ;;		Startup code after reset
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278                           	psect	text0
   279  000ABC                     __ptext0:
   280                           	opt stack 0
   281  000ABC                     _main:
   282                           	opt stack 27
   283                           
   284                           ;newmain.c: 19: TRISB = 0xFC;
   285                           
   286                           ;incstack = 0
   287  000ABC  0EFC               	movlw	252
   288  000ABE  6E93               	movwf	3987,c	;volatile
   289                           
   290                           ;newmain.c: 20: LATB = 0x00;
   291  000AC0  0E00               	movlw	0
   292  000AC2  6E8A               	movwf	3978,c	;volatile
   293                           
   294                           ;newmain.c: 21: TRISD = 0x00;
   295  000AC4  0E00               	movlw	0
   296  000AC6  6E95               	movwf	3989,c	;volatile
   297                           
   298                           ;newmain.c: 22: LCD_CONFIG();
   299  000AC8  ECAD  F004         	call	_LCD_CONFIG	;wreg free
   300                           
   301                           ;newmain.c: 23: _delay((unsigned long)((10)*(4000000UL/4000.0)));
   302  000ACC  0E0D               	movlw	13
   303  000ACE  6E0D               	movwf	??_main& (0+255),c
   304  000AD0  0EFC               	movlw	252
   305  000AD2                     u247:
   306  000AD2  2EE8               	decfsz	wreg,f,c
   307  000AD4  D7FE               	bra	u247
   308  000AD6  2E0D               	decfsz	??_main& (0+255),f,c
   309  000AD8  D7FC               	bra	u247
   310                           
   311                           ;newmain.c: 24: BORRAR_LCD();
   312  000ADA  ECB0  F005         	call	_BORRAR_LCD	;wreg free
   313                           
   314                           ;newmain.c: 25: CURSOR_ONOFF(1);
   315  000ADE  0E01               	movlw	1
   316  000AE0  EC89  F005         	call	_CURSOR_ONOFF
   317  000AE4                     
   318                           ;newmain.c: 27: movimiento1();
   319  000AE4  EC69  F004         	call	_movimiento1	;wreg free
   320                           
   321                           ;newmain.c: 28: movimiento2();
   322  000AE8  EC25  F004         	call	_movimiento2	;wreg free
   323  000AEC  D7FB               	goto	l31
   324  000AEE                     __end_of_main:
   325                           	opt stack 0
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           wreg	equ	0xFE8
   329                           
   330 ;; *************** function _movimiento2 *****************
   331 ;; Defined at:
   332 ;;		line 49 in file "newmain.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  i               2   10[COMRAM] int 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  2   18[None  ] int 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   346 ;;      Params:         0       0       0       0       0       0       0       0       0
   347 ;;      Locals:         2       0       0       0       0       0       0       0       0
   348 ;;      Temps:          1       0       0       0       0       0       0       0       0
   349 ;;      Totals:         3       0       0       0       0       0       0       0       0
   350 ;;Total ram usage:        3 bytes
   351 ;; Hardware stack levels used:    1
   352 ;; Hardware stack levels required when called:    3
   353 ;; This function calls:
   354 ;;		_CURSOR_HOME
   355 ;;		_ESCRIBE_MENSAJE
   356 ;;		_POS_CURSOR
   357 ;; This function is called by:
   358 ;;		_main
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           	psect	text1
   363  00084A                     __ptext1:
   364                           	opt stack 0
   365  00084A                     _movimiento2:
   366                           	opt stack 27
   367                           
   368                           ;newmain.c: 50: for (int i=0;i<5;i++){
   369                           
   370                           ;incstack = 0
   371  00084A  0E00               	movlw	0
   372  00084C  6E0C               	movwf	movimiento2@i+1,c
   373  00084E  0E00               	movlw	0
   374  000850  6E0B               	movwf	movimiento2@i,c
   375  000852                     l1042:
   376  000852  BE0C               	btfsc	movimiento2@i+1,7,c
   377  000854  D006               	goto	l42
   378  000856  500C               	movf	movimiento2@i+1,w,c
   379  000858  E13B               	bnz	l44
   380  00085A  0E05               	movlw	5
   381  00085C  5C0B               	subwf	movimiento2@i,w,c
   382  00085E  B0D8               	btfsc	status,0,c
   383  000860  0012               	return	
   384  000862                     l42:
   385                           
   386                           ;newmain.c: 51: CURSOR_HOME();
   387  000862  ECAC  F005         	call	_CURSOR_HOME	;wreg free
   388                           
   389                           ;newmain.c: 52: ESCRIBE_MENSAJE("Servo 1: 90 left ",17);
   390  000866  0E01               	movlw	low STR_3
   391  000868  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   392  00086A  0E08               	movlw	high STR_3
   393  00086C  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   394  00086E  0E11               	movlw	17
   395  000870  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   396  000872  EC0D  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   397                           
   398                           ;newmain.c: 53: POS_CURSOR(2,0);
   399  000876  0E00               	movlw	0
   400  000878  6E04               	movwf	POS_CURSOR@columna,c
   401  00087A  0E02               	movlw	2
   402  00087C  EC77  F005         	call	_POS_CURSOR
   403                           
   404                           ;newmain.c: 54: ESCRIBE_MENSAJE("Servo 2: 45 right",17);
   405  000880  0E37               	movlw	low STR_4
   406  000882  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   407  000884  0E08               	movlw	high STR_4
   408  000886  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   409  000888  0E11               	movlw	17
   410  00088A  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   411  00088C  EC0D  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   412                           
   413                           ;newmain.c: 55: LATBbits.LB0 = 1;
   414  000890  808A               	bsf	3978,0,c	;volatile
   415                           
   416                           ;newmain.c: 56: _delay((unsigned long)((1000)*(4000000UL/4000000.0)));
   417  000892  0EC8               	movlw	200
   418  000894                     u257:
   419  000894  D000               	nop2	
   420  000896  2EE8               	decfsz	wreg,f,c
   421  000898  D7FD               	bra	u257
   422                           
   423                           ;newmain.c: 57: LATBbits.LB0 = 0;
   424  00089A  908A               	bcf	3978,0,c	;volatile
   425                           
   426                           ;newmain.c: 58: _delay((unsigned long)((20)*(4000000UL/4000.0)));
   427  00089C  0E1A               	movlw	26
   428  00089E  6E0A               	movwf	??_movimiento2& (0+255),c
   429  0008A0  0EF8               	movlw	248
   430  0008A2                     u267:
   431  0008A2  2EE8               	decfsz	wreg,f,c
   432  0008A4  D7FE               	bra	u267
   433  0008A6  2E0A               	decfsz	??_movimiento2& (0+255),f,c
   434  0008A8  D7FC               	bra	u267
   435  0008AA  D000               	nop2	
   436                           
   437                           ;newmain.c: 59: LATBbits.LB1 = 1;
   438  0008AC  828A               	bsf	3978,1,c	;volatile
   439                           
   440                           ;newmain.c: 60: _delay((unsigned long)((1750)*(4000000UL/4000000.0)));
   441  0008AE  0EFA               	movlw	250
   442  0008B0                     u277:
   443  0008B0  D000               	nop2	
   444  0008B2  D000               	nop2	
   445  0008B4  2EE8               	decfsz	wreg,f,c
   446  0008B6  D7FC               	bra	u277
   447                           
   448                           ;newmain.c: 61: LATBbits.LB1 = 0;
   449  0008B8  928A               	bcf	3978,1,c	;volatile
   450                           
   451                           ;newmain.c: 62: _delay((unsigned long)((20)*(4000000UL/4000.0)));
   452  0008BA  0E1A               	movlw	26
   453  0008BC  6E0A               	movwf	??_movimiento2& (0+255),c
   454  0008BE  0EF8               	movlw	248
   455  0008C0                     u287:
   456  0008C0  2EE8               	decfsz	wreg,f,c
   457  0008C2  D7FE               	bra	u287
   458  0008C4  2E0A               	decfsz	??_movimiento2& (0+255),f,c
   459  0008C6  D7FC               	bra	u287
   460  0008C8  D000               	nop2	
   461  0008CA  4A0B               	infsnz	movimiento2@i,f,c
   462  0008CC  2A0C               	incf	movimiento2@i+1,f,c
   463  0008CE  D7C1               	goto	l1042
   464  0008D0                     l44:
   465  0008D0  0012               	return		;funcret
   466  0008D2                     __end_of_movimiento2:
   467                           	opt stack 0
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           wreg	equ	0xFE8
   471                           status	equ	0xFD8
   472                           
   473 ;; *************** function _movimiento1 *****************
   474 ;; Defined at:
   475 ;;		line 32 in file "newmain.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  i               2   10[COMRAM] int 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  2   16[None  ] int 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   489 ;;      Params:         0       0       0       0       0       0       0       0       0
   490 ;;      Locals:         2       0       0       0       0       0       0       0       0
   491 ;;      Temps:          1       0       0       0       0       0       0       0       0
   492 ;;      Totals:         3       0       0       0       0       0       0       0       0
   493 ;;Total ram usage:        3 bytes
   494 ;; Hardware stack levels used:    1
   495 ;; Hardware stack levels required when called:    3
   496 ;; This function calls:
   497 ;;		_CURSOR_HOME
   498 ;;		_ESCRIBE_MENSAJE
   499 ;;		_POS_CURSOR
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text2
   506  0008D2                     __ptext2:
   507                           	opt stack 0
   508  0008D2                     _movimiento1:
   509                           	opt stack 27
   510                           
   511                           ;newmain.c: 33: for (int i=0;i<5;i++){
   512                           
   513                           ;incstack = 0
   514  0008D2  0E00               	movlw	0
   515  0008D4  6E0C               	movwf	movimiento1@i+1,c
   516  0008D6  0E00               	movlw	0
   517  0008D8  6E0B               	movwf	movimiento1@i,c
   518  0008DA                     l1010:
   519  0008DA  BE0C               	btfsc	movimiento1@i+1,7,c
   520  0008DC  D006               	goto	l37
   521  0008DE  500C               	movf	movimiento1@i+1,w,c
   522  0008E0  E13B               	bnz	l39
   523  0008E2  0E05               	movlw	5
   524  0008E4  5C0B               	subwf	movimiento1@i,w,c
   525  0008E6  B0D8               	btfsc	status,0,c
   526  0008E8  0012               	return	
   527  0008EA                     l37:
   528                           
   529                           ;newmain.c: 34: CURSOR_HOME();
   530  0008EA  ECAC  F005         	call	_CURSOR_HOME	;wreg free
   531                           
   532                           ;newmain.c: 35: ESCRIBE_MENSAJE("Servo 1: 45 right",17);
   533  0008EE  0E25               	movlw	low STR_1
   534  0008F0  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   535  0008F2  0E08               	movlw	high STR_1
   536  0008F4  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   537  0008F6  0E11               	movlw	17
   538  0008F8  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   539  0008FA  EC0D  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   540                           
   541                           ;newmain.c: 36: POS_CURSOR(2,0);
   542  0008FE  0E00               	movlw	0
   543  000900  6E04               	movwf	POS_CURSOR@columna,c
   544  000902  0E02               	movlw	2
   545  000904  EC77  F005         	call	_POS_CURSOR
   546                           
   547                           ;newmain.c: 37: ESCRIBE_MENSAJE("Servo 2: 90 left ",17);
   548  000908  0E13               	movlw	low STR_2
   549  00090A  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   550  00090C  0E08               	movlw	high STR_2
   551  00090E  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   552  000910  0E11               	movlw	17
   553  000912  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   554  000914  EC0D  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   555                           
   556                           ;newmain.c: 38: LATBbits.LB0 = 1;
   557  000918  808A               	bsf	3978,0,c	;volatile
   558                           
   559                           ;newmain.c: 39: _delay((unsigned long)((1750)*(4000000UL/4000000.0)));
   560  00091A  0EFA               	movlw	250
   561  00091C                     u297:
   562  00091C  D000               	nop2	
   563  00091E  D000               	nop2	
   564  000920  2EE8               	decfsz	wreg,f,c
   565  000922  D7FC               	bra	u297
   566                           
   567                           ;newmain.c: 40: LATBbits.LB0 = 0;
   568  000924  908A               	bcf	3978,0,c	;volatile
   569                           
   570                           ;newmain.c: 41: _delay((unsigned long)((20)*(4000000UL/4000.0)));
   571  000926  0E1A               	movlw	26
   572  000928  6E0A               	movwf	??_movimiento1& (0+255),c
   573  00092A  0EF8               	movlw	248
   574  00092C                     u307:
   575  00092C  2EE8               	decfsz	wreg,f,c
   576  00092E  D7FE               	bra	u307
   577  000930  2E0A               	decfsz	??_movimiento1& (0+255),f,c
   578  000932  D7FC               	bra	u307
   579  000934  D000               	nop2	
   580                           
   581                           ;newmain.c: 42: LATBbits.LB1 = 1;
   582  000936  828A               	bsf	3978,1,c	;volatile
   583                           
   584                           ;newmain.c: 43: _delay((unsigned long)((1000)*(4000000UL/4000000.0)));
   585  000938  0EC8               	movlw	200
   586  00093A                     u317:
   587  00093A  D000               	nop2	
   588  00093C  2EE8               	decfsz	wreg,f,c
   589  00093E  D7FD               	bra	u317
   590                           
   591                           ;newmain.c: 44: LATBbits.LB1 = 0;
   592  000940  928A               	bcf	3978,1,c	;volatile
   593                           
   594                           ;newmain.c: 45: _delay((unsigned long)((20)*(4000000UL/4000.0)));
   595  000942  0E1A               	movlw	26
   596  000944  6E0A               	movwf	??_movimiento1& (0+255),c
   597  000946  0EF8               	movlw	248
   598  000948                     u327:
   599  000948  2EE8               	decfsz	wreg,f,c
   600  00094A  D7FE               	bra	u327
   601  00094C  2E0A               	decfsz	??_movimiento1& (0+255),f,c
   602  00094E  D7FC               	bra	u327
   603  000950  D000               	nop2	
   604  000952  4A0B               	infsnz	movimiento1@i,f,c
   605  000954  2A0C               	incf	movimiento1@i+1,f,c
   606  000956  D7C1               	goto	l1010
   607  000958                     l39:
   608  000958  0012               	return		;funcret
   609  00095A                     __end_of_movimiento1:
   610                           	opt stack 0
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           wreg	equ	0xFE8
   614                           status	equ	0xFD8
   615                           
   616 ;; *************** function _POS_CURSOR *****************
   617 ;; Defined at:
   618 ;;		line 6 in file "LCD.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  fila            1    wreg     unsigned char 
   621 ;;  columna         1    3[COMRAM] unsigned char 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  fila            1    4[COMRAM] unsigned char 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   633 ;;      Params:         1       0       0       0       0       0       0       0       0
   634 ;;      Locals:         1       0       0       0       0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0
   636 ;;      Totals:         2       0       0       0       0       0       0       0       0
   637 ;;Total ram usage:        2 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    2
   640 ;; This function calls:
   641 ;;		_ENVIA_LCD_CMD
   642 ;; This function is called by:
   643 ;;		_movimiento1
   644 ;;		_movimiento2
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text3
   649  000AEE                     __ptext3:
   650                           	opt stack 0
   651  000AEE                     _POS_CURSOR:
   652                           	opt stack 27
   653                           
   654                           ;incstack = 0
   655                           ;POS_CURSOR@fila stored from wreg
   656  000AEE  6E05               	movwf	POS_CURSOR@fila,c
   657                           
   658                           ;LCD.c: 8: if(fila == 1)
   659  000AF0  0405               	decf	POS_CURSOR@fila,w,c
   660  000AF2  A4D8               	btfss	status,2,c
   661  000AF4  D005               	goto	l65
   662                           
   663                           ;LCD.c: 9: {
   664                           ;LCD.c: 10: ENVIA_LCD_CMD(0x80+columna);
   665  000AF6  5004               	movf	POS_CURSOR@columna,w,c
   666  000AF8  0F80               	addlw	128
   667  000AFA  EC44  F005         	call	_ENVIA_LCD_CMD
   668                           
   669                           ;LCD.c: 11: }
   670  000AFE  0012               	return	
   671  000B00                     l65:
   672                           
   673                           ;LCD.c: 12: else if(fila == 2)
   674  000B00  0E02               	movlw	2
   675  000B02  1805               	xorwf	POS_CURSOR@fila,w,c
   676  000B04  A4D8               	btfss	status,2,c
   677  000B06  0012               	return	
   678                           
   679                           ;LCD.c: 13: {
   680                           ;LCD.c: 14: ENVIA_LCD_CMD(0xC0+columna);
   681  000B08  5004               	movf	POS_CURSOR@columna,w,c
   682  000B0A  0FC0               	addlw	192
   683  000B0C  EC44  F005         	call	_ENVIA_LCD_CMD
   684  000B10  0012               	return	
   685  000B12                     __end_of_POS_CURSOR:
   686                           	opt stack 0
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           wreg	equ	0xFE8
   690                           status	equ	0xFD8
   691                           
   692 ;; *************** function _ESCRIBE_MENSAJE *****************
   693 ;; Defined at:
   694 ;;		line 41 in file "LCD.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
   697 ;;		 -> STR_4(18), STR_3(18), STR_2(18), STR_1(18), 
   698 ;;  tam             1    5[COMRAM] unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  i               1    8[COMRAM] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   710 ;;      Params:         3       0       0       0       0       0       0       0       0
   711 ;;      Locals:         1       0       0       0       0       0       0       0       0
   712 ;;      Temps:          2       0       0       0       0       0       0       0       0
   713 ;;      Totals:         6       0       0       0       0       0       0       0       0
   714 ;;Total ram usage:        6 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    2
   717 ;; This function calls:
   718 ;;		_ENVIA_CHAR
   719 ;; This function is called by:
   720 ;;		_movimiento1
   721 ;;		_movimiento2
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text4
   726  000A1A                     __ptext4:
   727                           	opt stack 0
   728  000A1A                     _ESCRIBE_MENSAJE:
   729                           	opt stack 27
   730                           
   731                           ;LCD.c: 43: unsigned char i = 0;
   732                           
   733                           ;incstack = 0
   734  000A1A  0E00               	movlw	0
   735  000A1C  6E09               	movwf	ESCRIBE_MENSAJE@i,c
   736                           
   737                           ;LCD.c: 44: for(i = 0; i<tam; i++)
   738  000A1E  0E00               	movlw	0
   739  000A20  6E09               	movwf	ESCRIBE_MENSAJE@i,c
   740  000A22  D013               	goto	l89
   741  000A24                     
   742                           ;LCD.c: 45: {
   743                           ;LCD.c: 46: ENVIA_CHAR(cadena[i]);
   744  000A24  5009               	movf	ESCRIBE_MENSAJE@i,w,c
   745  000A26  0D01               	mullw	1
   746  000A28  C004  F007         	movff	ESCRIBE_MENSAJE@cadena,??_ESCRIBE_MENSAJE
   747  000A2C  C005  F008         	movff	ESCRIBE_MENSAJE@cadena+1,??_ESCRIBE_MENSAJE+1
   748  000A30  50F3               	movf	prodl,w,c
   749  000A32  2607               	addwf	??_ESCRIBE_MENSAJE,f,c
   750  000A34  50F4               	movf	prodh,w,c
   751  000A36  2208               	addwfc	??_ESCRIBE_MENSAJE+1,f,c
   752  000A38  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   753  000A3C  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   754  000A40                     	if	0	;tblptru may be non-zero
   755  000A40                     	endif
   756  000A40                     	if	0	;tblptru may be non-zero
   757  000A40                     	endif
   758  000A40  0008               	tblrd		*
   759  000A42  50F5               	movf	tablat,w,c
   760  000A44  EC2A  F005         	call	_ENVIA_CHAR
   761  000A48  2A09               	incf	ESCRIBE_MENSAJE@i,f,c
   762  000A4A                     l89:
   763  000A4A  5006               	movf	ESCRIBE_MENSAJE@tam,w,c
   764  000A4C  5C09               	subwf	ESCRIBE_MENSAJE@i,w,c
   765  000A4E  B0D8               	btfsc	status,0,c
   766  000A50  0012               	return	
   767  000A52  D7E8               	goto	l90
   768  000A54                     __end_of_ESCRIBE_MENSAJE:
   769                           	opt stack 0
   770                           tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           prodh	equ	0xFF4
   775                           prodl	equ	0xFF3
   776                           wreg	equ	0xFE8
   777                           status	equ	0xFD8
   778                           
   779 ;; *************** function _ENVIA_CHAR *****************
   780 ;; Defined at:
   781 ;;		line 50 in file "LCD.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  dato            1    wreg     unsigned char 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  dato            1    1[COMRAM] unsigned char 
   786 ;;  aux             1    2[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         0       0       0       0       0       0       0       0       0
   797 ;;      Locals:         2       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         2       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        2 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    1
   803 ;; This function calls:
   804 ;;		_ENVIA_NIBBLE
   805 ;;		_LEER_LCD
   806 ;; This function is called by:
   807 ;;		_ESCRIBE_MENSAJE
   808 ;;		_GENERACARACTER
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text5
   813  000A54                     __ptext5:
   814                           	opt stack 0
   815  000A54                     _ENVIA_CHAR:
   816                           	opt stack 27
   817                           
   818                           ;incstack = 0
   819                           ;ENVIA_CHAR@dato stored from wreg
   820  000A54  6E02               	movwf	ENVIA_CHAR@dato,c
   821                           
   822                           ;LCD.c: 52: unsigned char aux;
   823                           ;LCD.c: 53: LATDbits.LATD0 = 1;
   824  000A56  808C               	bsf	3980,0,c	;volatile
   825                           
   826                           ;LCD.c: 54: LEER_LCD();
   827  000A58  ECDD  F004         	call	_LEER_LCD	;wreg free
   828                           
   829                           ;LCD.c: 55: TRISD = 0x00;
   830  000A5C  0E00               	movlw	0
   831  000A5E  6E95               	movwf	3989,c	;volatile
   832                           
   833                           ;LCD.c: 56: _delay(1200);
   834  000A60  0EF0               	movlw	240
   835  000A62                     u337:
   836  000A62  D000               	nop2	
   837  000A64  2EE8               	decfsz	wreg,f,c
   838  000A66  D7FD               	bra	u337
   839                           
   840                           ;LCD.c: 58: LATDbits.LATD1 = 0;
   841  000A68  928C               	bcf	3980,1,c	;volatile
   842                           
   843                           ;LCD.c: 59: LATDbits.LATD2 = 0;
   844  000A6A  948C               	bcf	3980,2,c	;volatile
   845                           
   846                           ;LCD.c: 60: LATDbits.LATD0 = 1;
   847  000A6C  808C               	bsf	3980,0,c	;volatile
   848                           
   849                           ;LCD.c: 61: aux = dato & 0xF0;
   850  000A6E  5002               	movf	ENVIA_CHAR@dato,w,c
   851  000A70  0BF0               	andlw	240
   852  000A72  6E03               	movwf	ENVIA_CHAR@aux,c
   853                           
   854                           ;LCD.c: 62: ENVIA_NIBBLE(aux);
   855  000A74  5003               	movf	ENVIA_CHAR@aux,w,c
   856  000A76  EC97  F005         	call	_ENVIA_NIBBLE
   857                           
   858                           ;LCD.c: 63: aux = dato << 4;
   859  000A7A  3802               	swapf	ENVIA_CHAR@dato,w,c
   860  000A7C  0BF0               	andlw	240
   861  000A7E  6E03               	movwf	ENVIA_CHAR@aux,c
   862                           
   863                           ;LCD.c: 64: ENVIA_NIBBLE(aux);
   864  000A80  5003               	movf	ENVIA_CHAR@aux,w,c
   865  000A82  EC97  F005         	call	_ENVIA_NIBBLE
   866  000A86  0012               	return		;funcret
   867  000A88                     __end_of_ENVIA_CHAR:
   868                           	opt stack 0
   869                           tblptru	equ	0xFF8
   870                           tblptrh	equ	0xFF7
   871                           tblptrl	equ	0xFF6
   872                           tablat	equ	0xFF5
   873                           prodh	equ	0xFF4
   874                           prodl	equ	0xFF3
   875                           wreg	equ	0xFE8
   876                           status	equ	0xFD8
   877                           
   878 ;; *************** function _CURSOR_HOME *****************
   879 ;; Defined at:
   880 ;;		line 30 in file "LCD.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   894 ;;      Params:         0       0       0       0       0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		_ENVIA_LCD_CMD
   903 ;; This function is called by:
   904 ;;		_movimiento1
   905 ;;		_movimiento2
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text6
   910  000B58                     __ptext6:
   911                           	opt stack 0
   912  000B58                     _CURSOR_HOME:
   913                           	opt stack 27
   914                           
   915                           ;LCD.c: 32: ENVIA_LCD_CMD(0x02);
   916                           
   917                           ;incstack = 0
   918  000B58  0E02               	movlw	2
   919  000B5A  EC44  F005         	call	_ENVIA_LCD_CMD
   920  000B5E  0012               	return		;funcret
   921  000B60                     __end_of_CURSOR_HOME:
   922                           	opt stack 0
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           prodh	equ	0xFF4
   928                           prodl	equ	0xFF3
   929                           wreg	equ	0xFE8
   930                           status	equ	0xFD8
   931                           
   932 ;; *************** function _LCD_CONFIG *****************
   933 ;; Defined at:
   934 ;;		line 72 in file "LCD.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   948 ;;      Params:         0       0       0       0       0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0       0       0
   950 ;;      Temps:          1       0       0       0       0       0       0       0       0
   951 ;;      Totals:         1       0       0       0       0       0       0       0       0
   952 ;;Total ram usage:        1 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    2
   955 ;; This function calls:
   956 ;;		_ENVIA_LCD_CMD
   957 ;;		_ENVIA_NIBBLE
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text7
   964  00095A                     __ptext7:
   965                           	opt stack 0
   966  00095A                     _LCD_CONFIG:
   967                           	opt stack 28
   968                           
   969                           ;LCD.c: 74: LATDbits.LATD0 = 0;
   970                           
   971                           ;incstack = 0
   972  00095A  908C               	bcf	3980,0,c	;volatile
   973                           
   974                           ;LCD.c: 75: LATDbits.LATD1 = 0;
   975  00095C  928C               	bcf	3980,1,c	;volatile
   976                           
   977                           ;LCD.c: 76: ENVIA_NIBBLE(0x30);
   978  00095E  0E30               	movlw	48
   979  000960  EC97  F005         	call	_ENVIA_NIBBLE
   980                           
   981                           ;LCD.c: 77: _delay(24000);
   982  000964  0E20               	movlw	32
   983  000966  6E04               	movwf	??_LCD_CONFIG& (0+255),c
   984  000968  0E2A               	movlw	42
   985  00096A                     u347:
   986  00096A  2EE8               	decfsz	wreg,f,c
   987  00096C  D7FE               	bra	u347
   988  00096E  2E04               	decfsz	??_LCD_CONFIG& (0+255),f,c
   989  000970  D7FC               	bra	u347
   990                           
   991                           ;LCD.c: 78: _delay(24000);
   992  000972  0E20               	movlw	32
   993  000974  6E04               	movwf	??_LCD_CONFIG& (0+255),c
   994  000976  0E2A               	movlw	42
   995  000978                     u357:
   996  000978  2EE8               	decfsz	wreg,f,c
   997  00097A  D7FE               	bra	u357
   998  00097C  2E04               	decfsz	??_LCD_CONFIG& (0+255),f,c
   999  00097E  D7FC               	bra	u357
  1000                           
  1001                           ;LCD.c: 81: ENVIA_NIBBLE(0x30);
  1002  000980  0E30               	movlw	48
  1003  000982  EC97  F005         	call	_ENVIA_NIBBLE
  1004                           
  1005                           ;LCD.c: 83: _delay(1200);
  1006  000986  0EF0               	movlw	240
  1007  000988                     u367:
  1008  000988  D000               	nop2	
  1009  00098A  2EE8               	decfsz	wreg,f,c
  1010  00098C  D7FD               	bra	u367
  1011                           
  1012                           ;LCD.c: 84: ENVIA_NIBBLE(0x30);
  1013  00098E  0E30               	movlw	48
  1014  000990  EC97  F005         	call	_ENVIA_NIBBLE
  1015                           
  1016                           ;LCD.c: 85: ENVIA_NIBBLE(0x20);
  1017  000994  0E20               	movlw	32
  1018  000996  EC97  F005         	call	_ENVIA_NIBBLE
  1019                           
  1020                           ;LCD.c: 86: ENVIA_LCD_CMD(0x01);
  1021  00099A  0E01               	movlw	1
  1022  00099C  EC44  F005         	call	_ENVIA_LCD_CMD
  1023                           
  1024                           ;LCD.c: 87: ENVIA_LCD_CMD(0x28);
  1025  0009A0  0E28               	movlw	40
  1026  0009A2  EC44  F005         	call	_ENVIA_LCD_CMD
  1027                           
  1028                           ;LCD.c: 88: ENVIA_LCD_CMD(0x0F);
  1029  0009A6  0E0F               	movlw	15
  1030  0009A8  EC44  F005         	call	_ENVIA_LCD_CMD
  1031                           
  1032                           ;LCD.c: 89: ENVIA_LCD_CMD(0x06);
  1033  0009AC  0E06               	movlw	6
  1034  0009AE  EC44  F005         	call	_ENVIA_LCD_CMD
  1035                           
  1036                           ;LCD.c: 90: ENVIA_LCD_CMD(0x01);
  1037  0009B2  0E01               	movlw	1
  1038  0009B4  EC44  F005         	call	_ENVIA_LCD_CMD
  1039  0009B8  0012               	return		;funcret
  1040  0009BA                     __end_of_LCD_CONFIG:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           prodh	equ	0xFF4
  1047                           prodl	equ	0xFF3
  1048                           wreg	equ	0xFE8
  1049                           status	equ	0xFD8
  1050                           
  1051 ;; *************** function _CURSOR_ONOFF *****************
  1052 ;; Defined at:
  1053 ;;		line 35 in file "LCD.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  estado          1    wreg     unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  estado          1    3[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1067 ;;      Params:         0       0       0       0       0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1070 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1071 ;;Total ram usage:        1 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		_ENVIA_LCD_CMD
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text8
  1082  000B12                     __ptext8:
  1083                           	opt stack 0
  1084  000B12                     _CURSOR_ONOFF:
  1085                           	opt stack 28
  1086                           
  1087                           ;incstack = 0
  1088                           ;CURSOR_ONOFF@estado stored from wreg
  1089  000B12  6E04               	movwf	CURSOR_ONOFF@estado,c
  1090                           
  1091                           ;LCD.c: 37: if(estado == 0) ENVIA_LCD_CMD(0x0E);
  1092  000B14  5004               	movf	CURSOR_ONOFF@estado,w,c
  1093  000B16  A4D8               	btfss	status,2,c
  1094  000B18  D003               	goto	l84
  1095  000B1A  0E0E               	movlw	14
  1096  000B1C  EC44  F005         	call	_ENVIA_LCD_CMD
  1097  000B20                     l84:
  1098                           
  1099                           ;LCD.c: 38: if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1100  000B20  0404               	decf	CURSOR_ONOFF@estado,w,c
  1101  000B22  A4D8               	btfss	status,2,c
  1102  000B24  0012               	return	
  1103  000B26  0E0C               	movlw	12
  1104  000B28  EC44  F005         	call	_ENVIA_LCD_CMD
  1105  000B2C  0012               	return	
  1106  000B2E                     __end_of_CURSOR_ONOFF:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           prodh	equ	0xFF4
  1113                           prodl	equ	0xFF3
  1114                           wreg	equ	0xFE8
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function _BORRAR_LCD *****************
  1118 ;; Defined at:
  1119 ;;		line 67 in file "LCD.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1133 ;;      Params:         0       0       0       0       0       0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1136 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1137 ;;Total ram usage:        0 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    2
  1140 ;; This function calls:
  1141 ;;		_ENVIA_LCD_CMD
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text9
  1148  000B60                     __ptext9:
  1149                           	opt stack 0
  1150  000B60                     _BORRAR_LCD:
  1151                           	opt stack 28
  1152                           
  1153                           ;LCD.c: 69: ENVIA_LCD_CMD(0x01);
  1154                           
  1155                           ;incstack = 0
  1156  000B60  0E01               	movlw	1
  1157  000B62  EC44  F005         	call	_ENVIA_LCD_CMD
  1158  000B66  0012               	return		;funcret
  1159  000B68                     __end_of_BORRAR_LCD:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           prodh	equ	0xFF4
  1166                           prodl	equ	0xFF3
  1167                           wreg	equ	0xFE8
  1168                           status	equ	0xFD8
  1169                           
  1170 ;; *************** function _ENVIA_LCD_CMD *****************
  1171 ;; Defined at:
  1172 ;;		line 104 in file "LCD.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  dato            1    wreg     unsigned char 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  dato            1    1[COMRAM] unsigned char 
  1177 ;;  aux             1    2[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0
  1188 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1190 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1191 ;;Total ram usage:        2 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    1
  1194 ;; This function calls:
  1195 ;;		_ENVIA_NIBBLE
  1196 ;;		_LEER_LCD
  1197 ;; This function is called by:
  1198 ;;		_POS_CURSOR
  1199 ;;		_CURSOR_HOME
  1200 ;;		_CURSOR_ONOFF
  1201 ;;		_BORRAR_LCD
  1202 ;;		_LCD_CONFIG
  1203 ;;		_BLINK_CURSOR
  1204 ;;		_DISPLAY_ONOFF
  1205 ;;		_GENERACARACTER
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text10
  1210  000A88                     __ptext10:
  1211                           	opt stack 0
  1212  000A88                     _ENVIA_LCD_CMD:
  1213                           	opt stack 27
  1214                           
  1215                           ;incstack = 0
  1216                           ;ENVIA_LCD_CMD@dato stored from wreg
  1217  000A88  6E02               	movwf	ENVIA_LCD_CMD@dato,c
  1218                           
  1219                           ;LCD.c: 106: unsigned char aux;
  1220                           ;LCD.c: 107: LATDbits.LATD0 = 0;
  1221  000A8A  908C               	bcf	3980,0,c	;volatile
  1222                           
  1223                           ;LCD.c: 108: LEER_LCD();
  1224  000A8C  ECDD  F004         	call	_LEER_LCD	;wreg free
  1225                           
  1226                           ;LCD.c: 109: TRISD = 0b00000000;
  1227  000A90  0E00               	movlw	0
  1228  000A92  6E95               	movwf	3989,c	;volatile
  1229                           
  1230                           ;LCD.c: 111: _delay(1200);
  1231  000A94  0EF0               	movlw	240
  1232  000A96                     u377:
  1233  000A96  D000               	nop2	
  1234  000A98  2EE8               	decfsz	wreg,f,c
  1235  000A9A  D7FD               	bra	u377
  1236                           
  1237                           ;LCD.c: 112: LATDbits.LATD1 = 0;
  1238  000A9C  928C               	bcf	3980,1,c	;volatile
  1239                           
  1240                           ;LCD.c: 113: LATDbits.LATD2 = 0;
  1241  000A9E  948C               	bcf	3980,2,c	;volatile
  1242                           
  1243                           ;LCD.c: 114: LATDbits.LATD0 = 0;
  1244  000AA0  908C               	bcf	3980,0,c	;volatile
  1245                           
  1246                           ;LCD.c: 115: aux = dato & 0xF0;
  1247  000AA2  5002               	movf	ENVIA_LCD_CMD@dato,w,c
  1248  000AA4  0BF0               	andlw	240
  1249  000AA6  6E03               	movwf	ENVIA_LCD_CMD@aux,c
  1250                           
  1251                           ;LCD.c: 116: ENVIA_NIBBLE(aux);
  1252  000AA8  5003               	movf	ENVIA_LCD_CMD@aux,w,c
  1253  000AAA  EC97  F005         	call	_ENVIA_NIBBLE
  1254                           
  1255                           ;LCD.c: 117: aux = dato<<4;
  1256  000AAE  3802               	swapf	ENVIA_LCD_CMD@dato,w,c
  1257  000AB0  0BF0               	andlw	240
  1258  000AB2  6E03               	movwf	ENVIA_LCD_CMD@aux,c
  1259                           
  1260                           ;LCD.c: 118: ENVIA_NIBBLE(aux);
  1261  000AB4  5003               	movf	ENVIA_LCD_CMD@aux,w,c
  1262  000AB6  EC97  F005         	call	_ENVIA_NIBBLE
  1263  000ABA  0012               	return		;funcret
  1264  000ABC                     __end_of_ENVIA_LCD_CMD:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           prodh	equ	0xFF4
  1271                           prodl	equ	0xFF3
  1272                           wreg	equ	0xFE8
  1273                           status	equ	0xFD8
  1274                           
  1275 ;; *************** function _LEER_LCD *****************
  1276 ;; Defined at:
  1277 ;;		line 121 in file "LCD.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  aux             1    0[COMRAM] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0
  1292 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1294 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1295 ;;Total ram usage:        1 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_ENVIA_CHAR
  1301 ;;		_ENVIA_LCD_CMD
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text11
  1306  0009BA                     __ptext11:
  1307                           	opt stack 0
  1308  0009BA                     _LEER_LCD:
  1309                           	opt stack 27
  1310                           
  1311                           ;LCD.c: 123: unsigned char aux;
  1312                           ;LCD.c: 124: TRISD = 0xF8;
  1313                           
  1314                           ;incstack = 0
  1315  0009BA  0EF8               	movlw	248
  1316  0009BC  6E95               	movwf	3989,c	;volatile
  1317                           
  1318                           ;LCD.c: 125: LATDbits.LATD0 = 0;
  1319  0009BE  908C               	bcf	3980,0,c	;volatile
  1320                           
  1321                           ;LCD.c: 126: LATDbits.LATD1 = 1;
  1322  0009C0  828C               	bsf	3980,1,c	;volatile
  1323                           
  1324                           ;LCD.c: 127: LATDbits.LATD2 = 1;
  1325  0009C2  848C               	bsf	3980,2,c	;volatile
  1326                           
  1327                           ;LCD.c: 128: _delay(1200);
  1328  0009C4  0EF0               	movlw	240
  1329  0009C6                     u387:
  1330  0009C6  D000               	nop2	
  1331  0009C8  2EE8               	decfsz	wreg,f,c
  1332  0009CA  D7FD               	bra	u387
  1333                           
  1334                           ;LCD.c: 130: aux = PORTD;
  1335  0009CC  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1336                           
  1337                           ;LCD.c: 131: LATDbits.LATD2 = 0;
  1338  0009D0  948C               	bcf	3980,2,c	;volatile
  1339                           
  1340                           ;LCD.c: 132: _delay(1200);
  1341  0009D2  0EF0               	movlw	240
  1342  0009D4                     u397:
  1343  0009D4  D000               	nop2	
  1344  0009D6  2EE8               	decfsz	wreg,f,c
  1345  0009D8  D7FD               	bra	u397
  1346                           
  1347                           ;LCD.c: 134: LATDbits.LATD2 = 1;
  1348  0009DA  848C               	bsf	3980,2,c	;volatile
  1349                           
  1350                           ;LCD.c: 135: _delay(1200);
  1351  0009DC  0EF0               	movlw	240
  1352  0009DE                     u407:
  1353  0009DE  D000               	nop2	
  1354  0009E0  2EE8               	decfsz	wreg,f,c
  1355  0009E2  D7FD               	bra	u407
  1356  0009E4  D011               	goto	l772
  1357  0009E6                     l111:
  1358                           
  1359                           ;LCD.c: 140: {
  1360                           ;LCD.c: 141: LATDbits.LATD2 = 1;
  1361  0009E6  848C               	bsf	3980,2,c	;volatile
  1362                           
  1363                           ;LCD.c: 142: _delay(1200);
  1364  0009E8  0EF0               	movlw	240
  1365  0009EA                     u417:
  1366  0009EA  D000               	nop2	
  1367  0009EC  2EE8               	decfsz	wreg,f,c
  1368  0009EE  D7FD               	bra	u417
  1369                           
  1370                           ;LCD.c: 143: aux = PORTD;
  1371  0009F0  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1372                           
  1373                           ;LCD.c: 144: LATDbits.LATD2 = 0;
  1374  0009F4  948C               	bcf	3980,2,c	;volatile
  1375                           
  1376                           ;LCD.c: 145: _delay(1200);
  1377  0009F6  0EF0               	movlw	240
  1378  0009F8                     u427:
  1379  0009F8  D000               	nop2	
  1380  0009FA  2EE8               	decfsz	wreg,f,c
  1381  0009FC  D7FD               	bra	u427
  1382                           
  1383                           ;LCD.c: 146: LATDbits.LATD2 = 1;
  1384  0009FE  848C               	bsf	3980,2,c	;volatile
  1385                           
  1386                           ;LCD.c: 147: _delay(1200);
  1387  000A00  0EF0               	movlw	240
  1388  000A02                     u437:
  1389  000A02  D000               	nop2	
  1390  000A04  2EE8               	decfsz	wreg,f,c
  1391  000A06  D7FD               	bra	u437
  1392  000A08                     l772:
  1393                           
  1394                           ;LCD.c: 148: LATDbits.LATD2 = 0;
  1395  000A08  948C               	bcf	3980,2,c	;volatile
  1396                           
  1397                           ;LCD.c: 149: aux = aux & 0x80;
  1398  000A0A  5001               	movf	LEER_LCD@aux,w,c
  1399  000A0C  0B80               	andlw	128
  1400  000A0E  6E01               	movwf	LEER_LCD@aux,c
  1401  000A10  0E80               	movlw	128
  1402  000A12  1801               	xorwf	LEER_LCD@aux,w,c
  1403  000A14  A4D8               	btfss	status,2,c
  1404  000A16  0012               	return	
  1405  000A18  D7E6               	goto	l111
  1406  000A1A                     __end_of_LEER_LCD:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           prodh	equ	0xFF4
  1413                           prodl	equ	0xFF3
  1414                           wreg	equ	0xFE8
  1415                           status	equ	0xFD8
  1416                           
  1417 ;; *************** function _ENVIA_NIBBLE *****************
  1418 ;; Defined at:
  1419 ;;		line 93 in file "LCD.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  dato            1    wreg     unsigned char 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  dato            1    0[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0
  1434 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1436 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1437 ;;Total ram usage:        1 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_ENVIA_CHAR
  1443 ;;		_LCD_CONFIG
  1444 ;;		_ENVIA_LCD_CMD
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text12
  1449  000B2E                     __ptext12:
  1450                           	opt stack 0
  1451  000B2E                     _ENVIA_NIBBLE:
  1452                           	opt stack 27
  1453                           
  1454                           ;incstack = 0
  1455                           ;ENVIA_NIBBLE@dato stored from wreg
  1456  000B2E  6E01               	movwf	ENVIA_NIBBLE@dato,c
  1457                           
  1458                           ;LCD.c: 95: LATD &= 0x0F;
  1459  000B30  0E0F               	movlw	15
  1460  000B32  168C               	andwf	3980,f,c	;volatile
  1461                           
  1462                           ;LCD.c: 96: dato &= 0xF0;
  1463  000B34  0EF0               	movlw	240
  1464  000B36  1601               	andwf	ENVIA_NIBBLE@dato,f,c
  1465                           
  1466                           ;LCD.c: 97: LATD|= dato;
  1467  000B38  5001               	movf	ENVIA_NIBBLE@dato,w,c
  1468  000B3A  128C               	iorwf	3980,f,c	;volatile
  1469                           
  1470                           ;LCD.c: 98: LATDbits.LATD2 = 1;
  1471  000B3C  848C               	bsf	3980,2,c	;volatile
  1472                           
  1473                           ;LCD.c: 100: _delay(1200);
  1474  000B3E  0EF0               	movlw	240
  1475  000B40                     u447:
  1476  000B40  D000               	nop2	
  1477  000B42  2EE8               	decfsz	wreg,f,c
  1478  000B44  D7FD               	bra	u447
  1479                           
  1480                           ;LCD.c: 101: LATDbits.LATD2 = 0;
  1481  000B46  948C               	bcf	3980,2,c	;volatile
  1482  000B48  0012               	return		;funcret
  1483  000B4A                     __end_of_ENVIA_NIBBLE:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           prodh	equ	0xFF4
  1490                           prodl	equ	0xFF3
  1491                           wreg	equ	0xFE8
  1492                           status	equ	0xFD8
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           prodh	equ	0xFF4
  1498                           prodl	equ	0xFF3
  1499                           wreg	equ	0xFE8
  1500                           status	equ	0xFD8
  1501                           
  1502                           	psect	rparam
  1503  0000                     tblptru	equ	0xFF8
  1504                           tblptrh	equ	0xFF7
  1505                           tblptrl	equ	0xFF6
  1506                           tablat	equ	0xFF5
  1507                           prodh	equ	0xFF4
  1508                           prodl	equ	0xFF3
  1509                           wreg	equ	0xFE8
  1510                           status	equ	0xFD8


Data Sizes:
    Strings     72
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _main->_movimiento1
    _main->_movimiento2
    _movimiento2->_ESCRIBE_MENSAJE
    _movimiento1->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3095
                                             12 COMRAM     1     1      0
                         _BORRAR_LCD
                       _CURSOR_ONOFF
                         _LCD_CONFIG
                        _movimiento1
                        _movimiento2
 ---------------------------------------------------------------------------------
 (1) _movimiento2                                          3     3      0    1345
                                              9 COMRAM     3     3      0
                        _CURSOR_HOME
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (1) _movimiento1                                          3     3      0    1345
                                              9 COMRAM     3     3      0
                        _CURSOR_HOME
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      6     3      3     819
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_ONOFF
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_CONFIG
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_NIBBLE
   _movimiento1
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _ESCRIBE_MENSAJE
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
     _POS_CURSOR
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
   _movimiento2
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _ESCRIBE_MENSAJE
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
     _POS_CURSOR
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      D       D       1       13.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 24 13:23:31 2018

                      l31 0AE4                        l42 0862                        l44 08D0  
                      l37 08EA                        l39 0958                        l65 0B00  
                      l90 0A24                        l84 0B20                        l89 0A4A  
           ENVIA_CHAR@aux 0003                       l111 09E6                       l772 0A08  
                     u307 092C                       u317 093A                       u407 09DE  
                     u327 0948                       u247 0AD2                       u417 09EA  
                     u337 0A62                       u257 0894                       u427 09F8  
                     u347 096A                       u267 08A2                       u437 0A02  
                     u357 0978                       u277 08B0                       u447 0B40  
                     u367 0988                       u287 08C0                       u377 0A96  
                     u297 091C                       u387 09C6                       u397 09D4  
            __CFG_BOR$OFF 000000               LEER_LCD@aux 0001                       wreg 000FE8  
            ?_CURSOR_HOME 0001            ??_ENVIA_NIBBLE 0001              __CFG_LVP$OFF 000000  
          ENVIA_CHAR@dato 0002              __CFG_WDT$OFF 000000                      l1010 08DA  
                    l1042 0852                      STR_1 0825                      STR_2 0813  
                    STR_3 0801                      STR_4 0837                      _LATB 000F8A  
                    _LATD 000F8C              __CFG_PWRT$ON 000000                      _main 0ABC  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
           ?_CURSOR_ONOFF 0001             __CFG_MCLRE$ON 000000              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 0A1A       __size_of_BORRAR_LCD 0008  
           __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000                     ?_main 0001  
                   _PORTD 000F83       __size_of_LCD_CONFIG 0060                     _TRISB 000F93  
                   _TRISD 000F95       __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004  
                   tablat 000FF5                     status 000FD8            ??_CURSOR_ONOFF 0004  
         __initialization 0B4A              __end_of_main 0AEE           _ESCRIBE_MENSAJE 0A1A  
                  ??_main 000D             __activetblptr 000001      __end_of_ENVIA_NIBBLE 0B4A  
     __size_of_POS_CURSOR 0024              ?_movimiento1 0001              ?_movimiento2 0001  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8              ??_BORRAR_LCD 0004      __size_of_CURSOR_HOME 0008  
               ?_LEER_LCD 0001                __accesstop 0060   __end_of__initialization 0B4A  
         __CFG_PBADEN$OFF 000000           __CFG_FOSC$XT_XT 000000              ??_LCD_CONFIG 0004  
           ___rparam_used 000001              ??_ENVIA_CHAR 0002   __end_of_ESCRIBE_MENSAJE 0A54  
          __pcstackCOMRAM 0001        __end_of_BORRAR_LCD 0B68          ENVIA_LCD_CMD@aux 0003  
    __end_of_CURSOR_ONOFF 0B2E        __end_of_LCD_CONFIG 09BA        __end_of_ENVIA_CHAR 0A88  
              ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001              ??_POS_CURSOR 0005  
   __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0004              __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0ABC  
                 __pcinit 0B4A        __end_of_POS_CURSOR 0B12                   __ramtop 0800  
                 __ptext0 0ABC                   __ptext1 084A                   __ptext2 08D2  
                 __ptext3 0AEE                   __ptext4 0A1A                   __ptext5 0A54  
                 __ptext6 0B58                   __ptext7 095A                   __ptext8 0B12  
                 __ptext9 0B60      __size_of_movimiento1 0088      __size_of_movimiento2 0088  
            _ENVIA_NIBBLE 0B2E      end_of_initialization 0B4A     __size_of_CURSOR_ONOFF 001C  
       __size_of_LEER_LCD 0060              _CURSOR_ONOFF 0B12        CURSOR_ONOFF@estado 0004  
           ??_CURSOR_HOME 0004       start_initialization 0B4A         ENVIA_LCD_CMD@dato 0002  
     __end_of_CURSOR_HOME 0B60               __smallconst 0800                  _LEER_LCD 09BA  
                _LATBbits 000F8A                  _LATDbits 000F8C             ??_movimiento1 000A  
           ??_movimiento2 000A          ESCRIBE_MENSAJE@i 0009            POS_CURSOR@fila 0005  
__size_of_ESCRIBE_MENSAJE 003A               _CURSOR_HOME 0B58    __size_of_ENVIA_LCD_CMD 0034  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
     __end_of_movimiento1 095A       __end_of_movimiento2 08D2                  __ptext10 0A88  
                __ptext11 09BA                  __ptext12 0B2E                _BORRAR_LCD 0B60  
           __size_of_main 0032                _LCD_CONFIG 095A                _ENVIA_CHAR 0A54  
           _ENVIA_LCD_CMD 0A88     __CFG_CPUDIV$OSC1_PLL2 000000         ??_ESCRIBE_MENSAJE 0007  
   ESCRIBE_MENSAJE@cadena 0004              movimiento1@i 000B              movimiento2@i 000B  
          ?_ENVIA_LCD_CMD 0001               _movimiento1 08D2               _movimiento2 084A  
             ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001                _POS_CURSOR 0AEE  
             ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006               ?_ENVIA_CHAR 0001  
       POS_CURSOR@columna 0004  
