

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 25 19:48:54 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PORTD	set	3971
    56  0000                     _LATD	set	3980
    57  0000                     _LATDbits	set	3980
    58  0000                     _TRISD	set	3989
    59                           
    60                           	psect	smallconst
    61  000800                     __psmallconst:
    62                           	opt stack 0
    63  000800  00                 	db	0
    64  000801                     STR_1:
    65  000801  50                 	db	80	;'P'
    66  000802  41                 	db	65	;'A'
    67  000803  4F                 	db	79	;'O'
    68  000804  4C                 	db	76	;'L'
    69  000805  4F                 	db	79	;'O'
    70  000806  20                 	db	32
    71  000807  4C                 	db	76	;'L'
    72  000808  41                 	db	65	;'A'
    73  000809  2E                 	db	46
    74  00080A  2E                 	db	46
    75  00080B  2E                 	db	46
    76  00080C  00                 	db	0
    77                           
    78                           ; #config settings
    79  00080D  00                 	db	0	; dummy byte at the end
    80  0000                     
    81                           	psect	cinit
    82  000A08                     __pcinit:
    83                           	opt stack 0
    84  000A08                     start_initialization:
    85                           	opt stack 0
    86  000A08                     __initialization:
    87                           	opt stack 0
    88  000A08                     end_of_initialization:
    89                           	opt stack 0
    90  000A08                     __end_of__initialization:
    91                           	opt stack 0
    92  000A08  0E00               	movlw	low (__Lsmallconst shr (0+16))
    93  000A0A  6EF8               	movwf	tblptru,c
    94  000A0C  0E08               	movlw	high __Lsmallconst
    95  000A0E  6EF7               	movwf	tblptrh,c
    96  000A10  0100               	movlb	0
    97  000A12  EF67  F004         	goto	_main	;jump to C main() function
    98                           tblptru	equ	0xFF8
    99                           tblptrh	equ	0xFF7
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt stack 0
   104  000001                     ENVIA_NIBBLE@dato:
   105                           	opt stack 0
   106  000001                     LEER_LCD@aux:
   107                           	opt stack 0
   108                           
   109                           ; 1 bytes @ 0x0
   110  000001                     	ds	1
   111  000002                     ENVIA_CHAR@dato:
   112                           	opt stack 0
   113  000002                     ENVIA_LCD_CMD@dato:
   114                           	opt stack 0
   115                           
   116                           ; 1 bytes @ 0x1
   117  000002                     	ds	1
   118  000003                     ENVIA_CHAR@aux:
   119                           	opt stack 0
   120  000003                     ENVIA_LCD_CMD@aux:
   121                           	opt stack 0
   122                           
   123                           ; 1 bytes @ 0x2
   124  000003                     	ds	1
   125  000004                     ??_LCD_CONFIG:
   126  000004                     POS_CURSOR@columna:
   127                           	opt stack 0
   128  000004                     CURSOR_ONOFF@estado:
   129                           	opt stack 0
   130  000004                     ESCRIBE_MENSAJE@cadena:
   131                           	opt stack 0
   132                           
   133                           ; 2 bytes @ 0x3
   134  000004                     	ds	1
   135  000005                     POS_CURSOR@fila:
   136                           	opt stack 0
   137                           
   138                           ; 1 bytes @ 0x4
   139  000005                     	ds	1
   140  000006                     ESCRIBE_MENSAJE@tam:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0x5
   144  000006                     	ds	1
   145  000007                     ??_ESCRIBE_MENSAJE:
   146                           
   147                           ; 1 bytes @ 0x6
   148  000007                     	ds	2
   149  000009                     ESCRIBE_MENSAJE@i:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x8
   153  000009                     	ds	1
   154  00000A                     ??_main:
   155                           
   156                           ; 1 bytes @ 0x9
   157  00000A                     	ds	1
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 17 in file "newmain.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   180 ;;      Params:         0       0       0       0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0
   182 ;;      Temps:          1       0       0       0       0       0       0       0       0
   183 ;;      Totals:         1       0       0       0       0       0       0       0       0
   184 ;;Total ram usage:        1 bytes
   185 ;; Hardware stack levels required when called:    3
   186 ;; This function calls:
   187 ;;		_BORRAR_LCD
   188 ;;		_CURSOR_ONOFF
   189 ;;		_ESCRIBE_MENSAJE
   190 ;;		_LCD_CONFIG
   191 ;;		_POS_CURSOR
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  0008CE                     __ptext0:
   199                           	opt stack 0
   200  0008CE                     _main:
   201                           	opt stack 28
   202                           
   203                           ;newmain.c: 18: TRISD = 0x00;
   204                           
   205                           ;incstack = 0
   206  0008CE  0E00               	movlw	0
   207  0008D0  6E95               	movwf	3989,c	;volatile
   208                           
   209                           ;newmain.c: 19: LCD_CONFIG();
   210  0008D2  EC07  F004         	call	_LCD_CONFIG	;wreg free
   211                           
   212                           ;newmain.c: 20: _delay((unsigned long)((10)*(4000000UL/4000.0)));
   213  0008D6  0E0D               	movlw	13
   214  0008D8  6E0A               	movwf	??_main& (0+255),c
   215  0008DA  0EFC               	movlw	252
   216  0008DC                     u167:
   217  0008DC  2EE8               	decfsz	wreg,f,c
   218  0008DE  D7FE               	bra	u167
   219  0008E0  2E0A               	decfsz	??_main& (0+255),f,c
   220  0008E2  D7FC               	bra	u167
   221                           
   222                           ;newmain.c: 21: BORRAR_LCD();
   223  0008E4  EC0B  F005         	call	_BORRAR_LCD	;wreg free
   224                           
   225                           ;newmain.c: 22: CURSOR_ONOFF(1);
   226  0008E8  0E01               	movlw	1
   227  0008EA  ECE8  F004         	call	_CURSOR_ONOFF
   228  0008EE                     
   229                           ;newmain.c: 25: POS_CURSOR(2,2);
   230  0008EE  0E02               	movlw	2
   231  0008F0  6E04               	movwf	POS_CURSOR@columna,c
   232  0008F2  0E02               	movlw	2
   233  0008F4  ECD6  F004         	call	_POS_CURSOR
   234                           
   235                           ;newmain.c: 26: ESCRIBE_MENSAJE("PAOLO LA...", 11);
   236  0008F8  0E01               	movlw	low STR_1
   237  0008FA  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   238  0008FC  0E08               	movlw	high STR_1
   239  0008FE  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   240  000900  0E0B               	movlw	11
   241  000902  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   242  000904  EC85  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   243  000908  D7F2               	goto	l19
   244  00090A                     __end_of_main:
   245                           	opt stack 0
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           wreg	equ	0xFE8
   249                           
   250 ;; *************** function _POS_CURSOR *****************
   251 ;; Defined at:
   252 ;;		line 6 in file "LCD.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;  fila            1    wreg     unsigned char 
   255 ;;  columna         1    3[COMRAM] unsigned char 
   256 ;; Auto vars:     Size  Location     Type
   257 ;;  fila            1    4[COMRAM] unsigned char 
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   267 ;;      Params:         1       0       0       0       0       0       0       0       0
   268 ;;      Locals:         1       0       0       0       0       0       0       0       0
   269 ;;      Temps:          0       0       0       0       0       0       0       0       0
   270 ;;      Totals:         2       0       0       0       0       0       0       0       0
   271 ;;Total ram usage:        2 bytes
   272 ;; Hardware stack levels used:    1
   273 ;; Hardware stack levels required when called:    2
   274 ;; This function calls:
   275 ;;		_ENVIA_LCD_CMD
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text1
   282  0009AC                     __ptext1:
   283                           	opt stack 0
   284  0009AC                     _POS_CURSOR:
   285                           	opt stack 28
   286                           
   287                           ;incstack = 0
   288                           ;POS_CURSOR@fila stored from wreg
   289  0009AC  6E05               	movwf	POS_CURSOR@fila,c
   290                           
   291                           ;LCD.c: 8: if(fila == 1)
   292  0009AE  0405               	decf	POS_CURSOR@fila,w,c
   293  0009B0  A4D8               	btfss	status,2,c
   294  0009B2  D005               	goto	l43
   295                           
   296                           ;LCD.c: 9: {
   297                           ;LCD.c: 10: ENVIA_LCD_CMD(0x80+columna);
   298  0009B4  5004               	movf	POS_CURSOR@columna,w,c
   299  0009B6  0F80               	addlw	128
   300  0009B8  ECBC  F004         	call	_ENVIA_LCD_CMD
   301                           
   302                           ;LCD.c: 11: }
   303  0009BC  0012               	return	
   304  0009BE                     l43:
   305                           
   306                           ;LCD.c: 12: else if(fila == 2)
   307  0009BE  0E02               	movlw	2
   308  0009C0  1805               	xorwf	POS_CURSOR@fila,w,c
   309  0009C2  A4D8               	btfss	status,2,c
   310  0009C4  0012               	return	
   311                           
   312                           ;LCD.c: 13: {
   313                           ;LCD.c: 14: ENVIA_LCD_CMD(0xC0+columna);
   314  0009C6  5004               	movf	POS_CURSOR@columna,w,c
   315  0009C8  0FC0               	addlw	192
   316  0009CA  ECBC  F004         	call	_ENVIA_LCD_CMD
   317  0009CE  0012               	return	
   318  0009D0                     __end_of_POS_CURSOR:
   319                           	opt stack 0
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           wreg	equ	0xFE8
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _LCD_CONFIG *****************
   326 ;; Defined at:
   327 ;;		line 72 in file "LCD.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:          1       0       0       0       0       0       0       0       0
   344 ;;      Totals:         1       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        1 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; Hardware stack levels required when called:    2
   348 ;; This function calls:
   349 ;;		_ENVIA_LCD_CMD
   350 ;;		_ENVIA_NIBBLE
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text2
   357  00080E                     __ptext2:
   358                           	opt stack 0
   359  00080E                     _LCD_CONFIG:
   360                           	opt stack 28
   361                           
   362                           ;LCD.c: 74: LATDbits.LATD0 = 0;
   363                           
   364                           ;incstack = 0
   365  00080E  908C               	bcf	3980,0,c	;volatile
   366                           
   367                           ;LCD.c: 75: LATDbits.LATD1 = 0;
   368  000810  928C               	bcf	3980,1,c	;volatile
   369                           
   370                           ;LCD.c: 76: ENVIA_NIBBLE(0x30);
   371  000812  0E30               	movlw	48
   372  000814  ECF6  F004         	call	_ENVIA_NIBBLE
   373                           
   374                           ;LCD.c: 77: _delay(24000);
   375  000818  0E20               	movlw	32
   376  00081A  6E04               	movwf	??_LCD_CONFIG& (0+255),c
   377  00081C  0E2A               	movlw	42
   378  00081E                     u177:
   379  00081E  2EE8               	decfsz	wreg,f,c
   380  000820  D7FE               	bra	u177
   381  000822  2E04               	decfsz	??_LCD_CONFIG& (0+255),f,c
   382  000824  D7FC               	bra	u177
   383                           
   384                           ;LCD.c: 78: _delay(24000);
   385  000826  0E20               	movlw	32
   386  000828  6E04               	movwf	??_LCD_CONFIG& (0+255),c
   387  00082A  0E2A               	movlw	42
   388  00082C                     u187:
   389  00082C  2EE8               	decfsz	wreg,f,c
   390  00082E  D7FE               	bra	u187
   391  000830  2E04               	decfsz	??_LCD_CONFIG& (0+255),f,c
   392  000832  D7FC               	bra	u187
   393                           
   394                           ;LCD.c: 81: ENVIA_NIBBLE(0x30);
   395  000834  0E30               	movlw	48
   396  000836  ECF6  F004         	call	_ENVIA_NIBBLE
   397                           
   398                           ;LCD.c: 83: _delay(1200);
   399  00083A  0EF0               	movlw	240
   400  00083C                     u197:
   401  00083C  D000               	nop2	
   402  00083E  2EE8               	decfsz	wreg,f,c
   403  000840  D7FD               	bra	u197
   404                           
   405                           ;LCD.c: 84: ENVIA_NIBBLE(0x30);
   406  000842  0E30               	movlw	48
   407  000844  ECF6  F004         	call	_ENVIA_NIBBLE
   408                           
   409                           ;LCD.c: 85: ENVIA_NIBBLE(0x20);
   410  000848  0E20               	movlw	32
   411  00084A  ECF6  F004         	call	_ENVIA_NIBBLE
   412                           
   413                           ;LCD.c: 86: ENVIA_LCD_CMD(0x01);
   414  00084E  0E01               	movlw	1
   415  000850  ECBC  F004         	call	_ENVIA_LCD_CMD
   416                           
   417                           ;LCD.c: 87: ENVIA_LCD_CMD(0x28);
   418  000854  0E28               	movlw	40
   419  000856  ECBC  F004         	call	_ENVIA_LCD_CMD
   420                           
   421                           ;LCD.c: 88: ENVIA_LCD_CMD(0x0F);
   422  00085A  0E0F               	movlw	15
   423  00085C  ECBC  F004         	call	_ENVIA_LCD_CMD
   424                           
   425                           ;LCD.c: 89: ENVIA_LCD_CMD(0x06);
   426  000860  0E06               	movlw	6
   427  000862  ECBC  F004         	call	_ENVIA_LCD_CMD
   428                           
   429                           ;LCD.c: 90: ENVIA_LCD_CMD(0x01);
   430  000866  0E01               	movlw	1
   431  000868  ECBC  F004         	call	_ENVIA_LCD_CMD
   432  00086C  0012               	return		;funcret
   433  00086E                     __end_of_LCD_CONFIG:
   434                           	opt stack 0
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           wreg	equ	0xFE8
   438                           status	equ	0xFD8
   439                           
   440 ;; *************** function _ESCRIBE_MENSAJE *****************
   441 ;; Defined at:
   442 ;;		line 41 in file "LCD.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
   445 ;;		 -> STR_1(12), 
   446 ;;  tam             1    5[COMRAM] unsigned char 
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  i               1    8[COMRAM] unsigned char 
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         3       0       0       0       0       0       0       0       0
   459 ;;      Locals:         1       0       0       0       0       0       0       0       0
   460 ;;      Temps:          2       0       0       0       0       0       0       0       0
   461 ;;      Totals:         6       0       0       0       0       0       0       0       0
   462 ;;Total ram usage:        6 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; Hardware stack levels required when called:    2
   465 ;; This function calls:
   466 ;;		_ENVIA_CHAR
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text3
   473  00090A                     __ptext3:
   474                           	opt stack 0
   475  00090A                     _ESCRIBE_MENSAJE:
   476                           	opt stack 28
   477                           
   478                           ;LCD.c: 43: unsigned char i = 0;
   479                           
   480                           ;incstack = 0
   481  00090A  0E00               	movlw	0
   482  00090C  6E09               	movwf	ESCRIBE_MENSAJE@i,c
   483                           
   484                           ;LCD.c: 44: for(i = 0; i<tam; i++)
   485  00090E  0E00               	movlw	0
   486  000910  6E09               	movwf	ESCRIBE_MENSAJE@i,c
   487  000912  D013               	goto	l67
   488  000914                     
   489                           ;LCD.c: 45: {
   490                           ;LCD.c: 46: ENVIA_CHAR(cadena[i]);
   491  000914  5009               	movf	ESCRIBE_MENSAJE@i,w,c
   492  000916  0D01               	mullw	1
   493  000918  C004  F007         	movff	ESCRIBE_MENSAJE@cadena,??_ESCRIBE_MENSAJE
   494  00091C  C005  F008         	movff	ESCRIBE_MENSAJE@cadena+1,??_ESCRIBE_MENSAJE+1
   495  000920  50F3               	movf	prodl,w,c
   496  000922  2607               	addwf	??_ESCRIBE_MENSAJE,f,c
   497  000924  50F4               	movf	prodh,w,c
   498  000926  2208               	addwfc	??_ESCRIBE_MENSAJE+1,f,c
   499  000928  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   500  00092C  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   501  000930                     	if	0	;tblptru may be non-zero
   502  000930                     	endif
   503  000930                     	if	0	;tblptru may be non-zero
   504  000930                     	endif
   505  000930  0008               	tblrd		*
   506  000932  50F5               	movf	tablat,w,c
   507  000934  ECA2  F004         	call	_ENVIA_CHAR
   508  000938  2A09               	incf	ESCRIBE_MENSAJE@i,f,c
   509  00093A                     l67:
   510  00093A  5006               	movf	ESCRIBE_MENSAJE@tam,w,c
   511  00093C  5C09               	subwf	ESCRIBE_MENSAJE@i,w,c
   512  00093E  B0D8               	btfsc	status,0,c
   513  000940  0012               	return	
   514  000942  D7E8               	goto	l68
   515  000944                     __end_of_ESCRIBE_MENSAJE:
   516                           	opt stack 0
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           prodh	equ	0xFF4
   522                           prodl	equ	0xFF3
   523                           wreg	equ	0xFE8
   524                           status	equ	0xFD8
   525                           
   526 ;; *************** function _ENVIA_CHAR *****************
   527 ;; Defined at:
   528 ;;		line 50 in file "LCD.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;  dato            1    wreg     unsigned char 
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  dato            1    1[COMRAM] unsigned char 
   533 ;;  aux             1    2[COMRAM] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   543 ;;      Params:         0       0       0       0       0       0       0       0       0
   544 ;;      Locals:         2       0       0       0       0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0       0       0
   546 ;;      Totals:         2       0       0       0       0       0       0       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    1
   550 ;; This function calls:
   551 ;;		_ENVIA_NIBBLE
   552 ;;		_LEER_LCD
   553 ;; This function is called by:
   554 ;;		_ESCRIBE_MENSAJE
   555 ;;		_GENERACARACTER
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text4
   560  000944                     __ptext4:
   561                           	opt stack 0
   562  000944                     _ENVIA_CHAR:
   563                           	opt stack 28
   564                           
   565                           ;incstack = 0
   566                           ;ENVIA_CHAR@dato stored from wreg
   567  000944  6E02               	movwf	ENVIA_CHAR@dato,c
   568                           
   569                           ;LCD.c: 52: unsigned char aux;
   570                           ;LCD.c: 53: LATDbits.LATD0 = 1;
   571  000946  808C               	bsf	3980,0,c	;volatile
   572                           
   573                           ;LCD.c: 54: LEER_LCD();
   574  000948  EC37  F004         	call	_LEER_LCD	;wreg free
   575                           
   576                           ;LCD.c: 55: TRISD = 0x00;
   577  00094C  0E00               	movlw	0
   578  00094E  6E95               	movwf	3989,c	;volatile
   579                           
   580                           ;LCD.c: 56: _delay(1200);
   581  000950  0EF0               	movlw	240
   582  000952                     u207:
   583  000952  D000               	nop2	
   584  000954  2EE8               	decfsz	wreg,f,c
   585  000956  D7FD               	bra	u207
   586                           
   587                           ;LCD.c: 58: LATDbits.LATD1 = 0;
   588  000958  928C               	bcf	3980,1,c	;volatile
   589                           
   590                           ;LCD.c: 59: LATDbits.LATD2 = 0;
   591  00095A  948C               	bcf	3980,2,c	;volatile
   592                           
   593                           ;LCD.c: 60: LATDbits.LATD0 = 1;
   594  00095C  808C               	bsf	3980,0,c	;volatile
   595                           
   596                           ;LCD.c: 61: aux = dato & 0xF0;
   597  00095E  5002               	movf	ENVIA_CHAR@dato,w,c
   598  000960  0BF0               	andlw	240
   599  000962  6E03               	movwf	ENVIA_CHAR@aux,c
   600                           
   601                           ;LCD.c: 62: ENVIA_NIBBLE(aux);
   602  000964  5003               	movf	ENVIA_CHAR@aux,w,c
   603  000966  ECF6  F004         	call	_ENVIA_NIBBLE
   604                           
   605                           ;LCD.c: 63: aux = dato << 4;
   606  00096A  3802               	swapf	ENVIA_CHAR@dato,w,c
   607  00096C  0BF0               	andlw	240
   608  00096E  6E03               	movwf	ENVIA_CHAR@aux,c
   609                           
   610                           ;LCD.c: 64: ENVIA_NIBBLE(aux);
   611  000970  5003               	movf	ENVIA_CHAR@aux,w,c
   612  000972  ECF6  F004         	call	_ENVIA_NIBBLE
   613  000976  0012               	return		;funcret
   614  000978                     __end_of_ENVIA_CHAR:
   615                           	opt stack 0
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           prodh	equ	0xFF4
   621                           prodl	equ	0xFF3
   622                           wreg	equ	0xFE8
   623                           status	equ	0xFD8
   624                           
   625 ;; *************** function _CURSOR_ONOFF *****************
   626 ;; Defined at:
   627 ;;		line 35 in file "LCD.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  estado          1    wreg     unsigned char 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  estado          1    3[COMRAM] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         1       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         1       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        1 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    2
   648 ;; This function calls:
   649 ;;		_ENVIA_LCD_CMD
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text5
   656  0009D0                     __ptext5:
   657                           	opt stack 0
   658  0009D0                     _CURSOR_ONOFF:
   659                           	opt stack 28
   660                           
   661                           ;incstack = 0
   662                           ;CURSOR_ONOFF@estado stored from wreg
   663  0009D0  6E04               	movwf	CURSOR_ONOFF@estado,c
   664                           
   665                           ;LCD.c: 37: if(estado == 0) ENVIA_LCD_CMD(0x0E);
   666  0009D2  5004               	movf	CURSOR_ONOFF@estado,w,c
   667  0009D4  A4D8               	btfss	status,2,c
   668  0009D6  D003               	goto	l62
   669  0009D8  0E0E               	movlw	14
   670  0009DA  ECBC  F004         	call	_ENVIA_LCD_CMD
   671  0009DE                     l62:
   672                           
   673                           ;LCD.c: 38: if(estado == 1) ENVIA_LCD_CMD(0x0C);
   674  0009DE  0404               	decf	CURSOR_ONOFF@estado,w,c
   675  0009E0  A4D8               	btfss	status,2,c
   676  0009E2  0012               	return	
   677  0009E4  0E0C               	movlw	12
   678  0009E6  ECBC  F004         	call	_ENVIA_LCD_CMD
   679  0009EA  0012               	return	
   680  0009EC                     __end_of_CURSOR_ONOFF:
   681                           	opt stack 0
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           prodh	equ	0xFF4
   687                           prodl	equ	0xFF3
   688                           wreg	equ	0xFE8
   689                           status	equ	0xFD8
   690                           
   691 ;; *************** function _BORRAR_LCD *****************
   692 ;; Defined at:
   693 ;;		line 67 in file "LCD.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   707 ;;      Params:         0       0       0       0       0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    2
   714 ;; This function calls:
   715 ;;		_ENVIA_LCD_CMD
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text6
   722  000A16                     __ptext6:
   723                           	opt stack 0
   724  000A16                     _BORRAR_LCD:
   725                           	opt stack 28
   726                           
   727                           ;LCD.c: 69: ENVIA_LCD_CMD(0x01);
   728                           
   729                           ;incstack = 0
   730  000A16  0E01               	movlw	1
   731  000A18  ECBC  F004         	call	_ENVIA_LCD_CMD
   732  000A1C  0012               	return		;funcret
   733  000A1E                     __end_of_BORRAR_LCD:
   734                           	opt stack 0
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           prodh	equ	0xFF4
   740                           prodl	equ	0xFF3
   741                           wreg	equ	0xFE8
   742                           status	equ	0xFD8
   743                           
   744 ;; *************** function _ENVIA_LCD_CMD *****************
   745 ;; Defined at:
   746 ;;		line 104 in file "LCD.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  dato            1    wreg     unsigned char 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  dato            1    1[COMRAM] unsigned char 
   751 ;;  aux             1    2[COMRAM] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   761 ;;      Params:         0       0       0       0       0       0       0       0       0
   762 ;;      Locals:         2       0       0       0       0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0       0       0
   764 ;;      Totals:         2       0       0       0       0       0       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    1
   768 ;; This function calls:
   769 ;;		_ENVIA_NIBBLE
   770 ;;		_LEER_LCD
   771 ;; This function is called by:
   772 ;;		_POS_CURSOR
   773 ;;		_CURSOR_ONOFF
   774 ;;		_BORRAR_LCD
   775 ;;		_LCD_CONFIG
   776 ;;		_BLINK_CURSOR
   777 ;;		_DISPLAY_ONOFF
   778 ;;		_CURSOR_HOME
   779 ;;		_GENERACARACTER
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text7
   784  000978                     __ptext7:
   785                           	opt stack 0
   786  000978                     _ENVIA_LCD_CMD:
   787                           	opt stack 28
   788                           
   789                           ;incstack = 0
   790                           ;ENVIA_LCD_CMD@dato stored from wreg
   791  000978  6E02               	movwf	ENVIA_LCD_CMD@dato,c
   792                           
   793                           ;LCD.c: 106: unsigned char aux;
   794                           ;LCD.c: 107: LATDbits.LATD0 = 0;
   795  00097A  908C               	bcf	3980,0,c	;volatile
   796                           
   797                           ;LCD.c: 108: LEER_LCD();
   798  00097C  EC37  F004         	call	_LEER_LCD	;wreg free
   799                           
   800                           ;LCD.c: 109: TRISD = 0b00000000;
   801  000980  0E00               	movlw	0
   802  000982  6E95               	movwf	3989,c	;volatile
   803                           
   804                           ;LCD.c: 111: _delay(1200);
   805  000984  0EF0               	movlw	240
   806  000986                     u217:
   807  000986  D000               	nop2	
   808  000988  2EE8               	decfsz	wreg,f,c
   809  00098A  D7FD               	bra	u217
   810                           
   811                           ;LCD.c: 112: LATDbits.LATD1 = 0;
   812  00098C  928C               	bcf	3980,1,c	;volatile
   813                           
   814                           ;LCD.c: 113: LATDbits.LATD2 = 0;
   815  00098E  948C               	bcf	3980,2,c	;volatile
   816                           
   817                           ;LCD.c: 114: LATDbits.LATD0 = 0;
   818  000990  908C               	bcf	3980,0,c	;volatile
   819                           
   820                           ;LCD.c: 115: aux = dato & 0xF0;
   821  000992  5002               	movf	ENVIA_LCD_CMD@dato,w,c
   822  000994  0BF0               	andlw	240
   823  000996  6E03               	movwf	ENVIA_LCD_CMD@aux,c
   824                           
   825                           ;LCD.c: 116: ENVIA_NIBBLE(aux);
   826  000998  5003               	movf	ENVIA_LCD_CMD@aux,w,c
   827  00099A  ECF6  F004         	call	_ENVIA_NIBBLE
   828                           
   829                           ;LCD.c: 117: aux = dato<<4;
   830  00099E  3802               	swapf	ENVIA_LCD_CMD@dato,w,c
   831  0009A0  0BF0               	andlw	240
   832  0009A2  6E03               	movwf	ENVIA_LCD_CMD@aux,c
   833                           
   834                           ;LCD.c: 118: ENVIA_NIBBLE(aux);
   835  0009A4  5003               	movf	ENVIA_LCD_CMD@aux,w,c
   836  0009A6  ECF6  F004         	call	_ENVIA_NIBBLE
   837  0009AA  0012               	return		;funcret
   838  0009AC                     __end_of_ENVIA_LCD_CMD:
   839                           	opt stack 0
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           prodh	equ	0xFF4
   845                           prodl	equ	0xFF3
   846                           wreg	equ	0xFE8
   847                           status	equ	0xFD8
   848                           
   849 ;; *************** function _LEER_LCD *****************
   850 ;; Defined at:
   851 ;;		line 121 in file "LCD.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  aux             1    0[COMRAM] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   865 ;;      Params:         0       0       0       0       0       0       0       0       0
   866 ;;      Locals:         1       0       0       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0
   868 ;;      Totals:         1       0       0       0       0       0       0       0       0
   869 ;;Total ram usage:        1 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_ENVIA_CHAR
   875 ;;		_ENVIA_LCD_CMD
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text8
   880  00086E                     __ptext8:
   881                           	opt stack 0
   882  00086E                     _LEER_LCD:
   883                           	opt stack 28
   884                           
   885                           ;LCD.c: 123: unsigned char aux;
   886                           ;LCD.c: 124: TRISD = 0xF8;
   887                           
   888                           ;incstack = 0
   889  00086E  0EF8               	movlw	248
   890  000870  6E95               	movwf	3989,c	;volatile
   891                           
   892                           ;LCD.c: 125: LATDbits.LATD0 = 0;
   893  000872  908C               	bcf	3980,0,c	;volatile
   894                           
   895                           ;LCD.c: 126: LATDbits.LATD1 = 1;
   896  000874  828C               	bsf	3980,1,c	;volatile
   897                           
   898                           ;LCD.c: 127: LATDbits.LATD2 = 1;
   899  000876  848C               	bsf	3980,2,c	;volatile
   900                           
   901                           ;LCD.c: 128: _delay(1200);
   902  000878  0EF0               	movlw	240
   903  00087A                     u227:
   904  00087A  D000               	nop2	
   905  00087C  2EE8               	decfsz	wreg,f,c
   906  00087E  D7FD               	bra	u227
   907                           
   908                           ;LCD.c: 130: aux = PORTD;
   909  000880  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
   910                           
   911                           ;LCD.c: 131: LATDbits.LATD2 = 0;
   912  000884  948C               	bcf	3980,2,c	;volatile
   913                           
   914                           ;LCD.c: 132: _delay(1200);
   915  000886  0EF0               	movlw	240
   916  000888                     u237:
   917  000888  D000               	nop2	
   918  00088A  2EE8               	decfsz	wreg,f,c
   919  00088C  D7FD               	bra	u237
   920                           
   921                           ;LCD.c: 134: LATDbits.LATD2 = 1;
   922  00088E  848C               	bsf	3980,2,c	;volatile
   923                           
   924                           ;LCD.c: 135: _delay(1200);
   925  000890  0EF0               	movlw	240
   926  000892                     u247:
   927  000892  D000               	nop2	
   928  000894  2EE8               	decfsz	wreg,f,c
   929  000896  D7FD               	bra	u247
   930  000898  D011               	goto	l750
   931  00089A                     l89:
   932                           
   933                           ;LCD.c: 140: {
   934                           ;LCD.c: 141: LATDbits.LATD2 = 1;
   935  00089A  848C               	bsf	3980,2,c	;volatile
   936                           
   937                           ;LCD.c: 142: _delay(1200);
   938  00089C  0EF0               	movlw	240
   939  00089E                     u257:
   940  00089E  D000               	nop2	
   941  0008A0  2EE8               	decfsz	wreg,f,c
   942  0008A2  D7FD               	bra	u257
   943                           
   944                           ;LCD.c: 143: aux = PORTD;
   945  0008A4  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
   946                           
   947                           ;LCD.c: 144: LATDbits.LATD2 = 0;
   948  0008A8  948C               	bcf	3980,2,c	;volatile
   949                           
   950                           ;LCD.c: 145: _delay(1200);
   951  0008AA  0EF0               	movlw	240
   952  0008AC                     u267:
   953  0008AC  D000               	nop2	
   954  0008AE  2EE8               	decfsz	wreg,f,c
   955  0008B0  D7FD               	bra	u267
   956                           
   957                           ;LCD.c: 146: LATDbits.LATD2 = 1;
   958  0008B2  848C               	bsf	3980,2,c	;volatile
   959                           
   960                           ;LCD.c: 147: _delay(1200);
   961  0008B4  0EF0               	movlw	240
   962  0008B6                     u277:
   963  0008B6  D000               	nop2	
   964  0008B8  2EE8               	decfsz	wreg,f,c
   965  0008BA  D7FD               	bra	u277
   966  0008BC                     l750:
   967                           
   968                           ;LCD.c: 148: LATDbits.LATD2 = 0;
   969  0008BC  948C               	bcf	3980,2,c	;volatile
   970                           
   971                           ;LCD.c: 149: aux = aux & 0x80;
   972  0008BE  5001               	movf	LEER_LCD@aux,w,c
   973  0008C0  0B80               	andlw	128
   974  0008C2  6E01               	movwf	LEER_LCD@aux,c
   975  0008C4  0E80               	movlw	128
   976  0008C6  1801               	xorwf	LEER_LCD@aux,w,c
   977  0008C8  A4D8               	btfss	status,2,c
   978  0008CA  0012               	return	
   979  0008CC  D7E6               	goto	l89
   980  0008CE                     __end_of_LEER_LCD:
   981                           	opt stack 0
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           wreg	equ	0xFE8
   989                           status	equ	0xFD8
   990                           
   991 ;; *************** function _ENVIA_NIBBLE *****************
   992 ;; Defined at:
   993 ;;		line 93 in file "LCD.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  dato            1    wreg     unsigned char 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  dato            1    0[COMRAM] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0
  1008 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1010 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1011 ;;Total ram usage:        1 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_ENVIA_CHAR
  1017 ;;		_LCD_CONFIG
  1018 ;;		_ENVIA_LCD_CMD
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text9
  1023  0009EC                     __ptext9:
  1024                           	opt stack 0
  1025  0009EC                     _ENVIA_NIBBLE:
  1026                           	opt stack 28
  1027                           
  1028                           ;incstack = 0
  1029                           ;ENVIA_NIBBLE@dato stored from wreg
  1030  0009EC  6E01               	movwf	ENVIA_NIBBLE@dato,c
  1031                           
  1032                           ;LCD.c: 95: LATD &= 0x0F;
  1033  0009EE  0E0F               	movlw	15
  1034  0009F0  168C               	andwf	3980,f,c	;volatile
  1035                           
  1036                           ;LCD.c: 96: dato &= 0xF0;
  1037  0009F2  0EF0               	movlw	240
  1038  0009F4  1601               	andwf	ENVIA_NIBBLE@dato,f,c
  1039                           
  1040                           ;LCD.c: 97: LATD|= dato;
  1041  0009F6  5001               	movf	ENVIA_NIBBLE@dato,w,c
  1042  0009F8  128C               	iorwf	3980,f,c	;volatile
  1043                           
  1044                           ;LCD.c: 98: LATDbits.LATD2 = 1;
  1045  0009FA  848C               	bsf	3980,2,c	;volatile
  1046                           
  1047                           ;LCD.c: 100: _delay(1200);
  1048  0009FC  0EF0               	movlw	240
  1049  0009FE                     u287:
  1050  0009FE  D000               	nop2	
  1051  000A00  2EE8               	decfsz	wreg,f,c
  1052  000A02  D7FD               	bra	u287
  1053                           
  1054                           ;LCD.c: 101: LATDbits.LATD2 = 0;
  1055  000A04  948C               	bcf	3980,2,c	;volatile
  1056  000A06  0012               	return		;funcret
  1057  000A08                     __end_of_ENVIA_NIBBLE:
  1058                           	opt stack 0
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           prodh	equ	0xFF4
  1064                           prodl	equ	0xFF3
  1065                           wreg	equ	0xFE8
  1066                           status	equ	0xFD8
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           prodh	equ	0xFF4
  1072                           prodl	equ	0xFF3
  1073                           wreg	equ	0xFE8
  1074                           status	equ	0xFD8
  1075                           
  1076                           	psect	rparam
  1077  0000                     tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           prodh	equ	0xFF4
  1082                           prodl	equ	0xFF3
  1083                           wreg	equ	0xFE8
  1084                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1052
                                              9 COMRAM     1     1      0
                         _BORRAR_LCD
                       _CURSOR_ONOFF
                    _ESCRIBE_MENSAJE
                         _LCD_CONFIG
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     363
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_ONOFF
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_CONFIG
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 25 19:48:54 2018

                      l43 09BE                        l19 08EE                        l62 09DE  
                      l67 093A                        l68 0914                        l89 089A  
           ENVIA_CHAR@aux 0003                       l750 08BC                       u207 0952  
                     u217 0986                       u227 087A                       u237 0888  
                     u247 0892                       u167 08DC                       u257 089E  
                     u177 081E                       u267 08AC                       u187 082C  
                     u277 08B6                       u197 083C                       u287 09FE  
            __CFG_BOR$OFF 000000               LEER_LCD@aux 0001                       wreg 000FE8  
          ??_ENVIA_NIBBLE 0001              __CFG_LVP$OFF 000000            ENVIA_CHAR@dato 0002  
            __CFG_WDT$OFF 000000                      STR_1 0801                      _LATD 000F8C  
            __CFG_PWRT$ON 000000                      _main 08CE                      prodh 000FF4  
                    prodl 000FF3                      start 0000             ?_CURSOR_ONOFF 0001  
           __CFG_MCLRE$ON 000000              ___param_bank 000000           ??_ENVIA_LCD_CMD 0002  
        __end_of_LEER_LCD 08CE       __size_of_BORRAR_LCD 0008             __CFG_PLLDIV$1 000000  
          __CFG_CCP2MX$ON 000000                     ?_main 0001                     _PORTD 000F83  
     __size_of_LCD_CONFIG 0060                     _TRISD 000F95       __size_of_ENVIA_CHAR 0034  
             ?_POS_CURSOR 0004                     tablat 000FF5                     status 000FD8  
          ??_CURSOR_ONOFF 0004           __initialization 0A08              __end_of_main 090A  
         _ESCRIBE_MENSAJE 090A                    ??_main 000A             __activetblptr 000001  
    __end_of_ENVIA_NIBBLE 0A08       __size_of_POS_CURSOR 0024              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
            ??_BORRAR_LCD 0004                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 0A08           __CFG_PBADEN$OFF 000000           __CFG_FOSC$XT_XT 000000  
            ??_LCD_CONFIG 0004             ___rparam_used 000001              ??_ENVIA_CHAR 0002  
 __end_of_ESCRIBE_MENSAJE 0944            __pcstackCOMRAM 0001        __end_of_BORRAR_LCD 0A1E  
        ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 09EC        __end_of_LCD_CONFIG 086E  
      __end_of_ENVIA_CHAR 0978                ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001  
            ??_POS_CURSOR 0005     __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000  
                 __Lparam 0000          ?_ESCRIBE_MENSAJE 0004              __psmallconst 0800  
   __end_of_ENVIA_LCD_CMD 09AC                   __pcinit 0A08        __end_of_POS_CURSOR 09D0  
                 __ramtop 0800                   __ptext0 08CE                   __ptext1 09AC  
                 __ptext2 080E                   __ptext3 090A                   __ptext4 0944  
                 __ptext5 09D0                   __ptext6 0A16                   __ptext7 0978  
                 __ptext8 086E                   __ptext9 09EC              _ENVIA_NIBBLE 09EC  
    end_of_initialization 0A08     __size_of_CURSOR_ONOFF 001C         __size_of_LEER_LCD 0060  
            _CURSOR_ONOFF 09D0        CURSOR_ONOFF@estado 0004       start_initialization 0A08  
       ENVIA_LCD_CMD@dato 0002               __smallconst 0800                  _LEER_LCD 086E  
                _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0009            POS_CURSOR@fila 0005  
__size_of_ESCRIBE_MENSAJE 003A    __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 0800                _BORRAR_LCD 0A16  
           __size_of_main 003C                _LCD_CONFIG 080E                _ENVIA_CHAR 0944  
           _ENVIA_LCD_CMD 0978     __CFG_CPUDIV$OSC1_PLL2 000000         ??_ESCRIBE_MENSAJE 0007  
   ESCRIBE_MENSAJE@cadena 0004            ?_ENVIA_LCD_CMD 0001               ?_BORRAR_LCD 0001  
           ?_ENVIA_NIBBLE 0001                _POS_CURSOR 09AC               ?_LCD_CONFIG 0001  
      ESCRIBE_MENSAJE@tam 0006               ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
